{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysFillRuleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysFillRuleModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { httpAction } from '@/api/manage';\nimport { validateDuplicateValue } from '@/utils/util';\nexport default {\n  name: 'SysFillRuleModal',\n  components: {},\n  data: function data() {\n    var _this = this;\n\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        ruleName: {\n          rules: [{\n            required: true,\n            message: '规则名称不能为空'\n          }]\n        },\n        ruleCode: {\n          rules: [{\n            required: true,\n            message: '规则Code不能为空'\n          }, {\n            validator: function validator(rule, value, callback) {\n              return validateDuplicateValue('sys_fill_rule', 'rule_code', value, _this.model.id, callback);\n            }\n          }]\n        },\n        ruleClass: {\n          rules: [{\n            required: true,\n            message: '规则实现类不能为空'\n          }]\n        },\n        ruleParams: {\n          rules: [{\n            validator: function validator(rule, value, callback) {\n              try {\n                var json = JSON.parse(value);\n\n                if (json instanceof Array) {\n                  callback('只能传递JSON对象，不能传递JSON数组');\n                } else if (json instanceof Object) {\n                  callback();\n                } else {\n                  callback('请输入JSON字符串');\n                }\n              } catch (_unused) {\n                callback('请输入JSON字符串');\n              }\n            }\n          }]\n        }\n      },\n      url: {\n        add: '/sys/fillRule/add',\n        edit: '/sys/fillRule/edit'\n      }\n    };\n  },\n  computed: {\n    disabledCode: function disabledCode() {\n      return !!this.model.id;\n    }\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this2 = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this2.form.setFieldsValue(pick(_this2.model, 'ruleName', 'ruleCode', 'ruleClass', 'ruleParams'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this3 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpUrl = _this3.url.add,\n              method = 'post';\n\n          if (_this3.model.id) {\n            httpUrl = _this3.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this3.model, values);\n          httpAction(httpUrl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",{"version":3,"sources":["SysFillRuleModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"800\"\n    :visible=\"visible\"\n    :maskClosable=\"false\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\">\n\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"规则名称\">\n          <a-input placeholder=\"请输入规则名称\" v-decorator=\"['ruleName', validatorRules.ruleName]\"/>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"规则Code\">\n          <a-input placeholder=\"请输入规则Code\" :disabled=\"disabledCode\" v-decorator=\"['ruleCode', validatorRules.ruleCode]\"/>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"规则实现类\">\n          <a-input placeholder=\"请输入规则实现类\" v-decorator=\"['ruleClass', validatorRules.ruleClass]\"/>\n        </a-form-item>\n        <a-form-item\n          :labelCol=\"labelCol\"\n          :wrapperCol=\"wrapperCol\"\n          label=\"规则参数\">\n          <a-textarea placeholder=\"请输入规则参数\" :rows=\"5\" v-decorator=\"['ruleParams', validatorRules.ruleParams]\"/>\n        </a-form-item>\n\n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n  import pick from 'lodash.pick'\n  import { httpAction } from '@/api/manage'\n  import { validateDuplicateValue } from '@/utils/util'\n\n  export default {\n    name: 'SysFillRuleModal',\n    components: {},\n    data() {\n      return {\n        title: '操作',\n        visible: false,\n        model: {},\n        labelCol: { xs: { span: 24 }, sm: { span: 5 } },\n        wrapperCol: { xs: { span: 24 }, sm: { span: 16 } },\n\n        confirmLoading: false,\n        form: this.$form.createForm(this),\n        validatorRules: {\n          ruleName: { rules: [{ required: true, message: '规则名称不能为空' }] },\n          ruleCode: {\n            rules: [\n              { required: true, message: '规则Code不能为空' },\n              { validator: (rule, value, callback) => validateDuplicateValue('sys_fill_rule', 'rule_code', value, this.model.id, callback) }\n            ]\n          },\n          ruleClass: { rules: [{ required: true, message: '规则实现类不能为空' }] },\n          ruleParams: {\n            rules: [{\n              validator: (rule, value, callback) => {\n\n                try {\n                  let json = JSON.parse(value)\n                  if (json instanceof Array) {\n                    callback('只能传递JSON对象，不能传递JSON数组')\n                  } else if (json instanceof Object) {\n                    callback()\n                  } else {\n                    callback('请输入JSON字符串')\n                  }\n                } catch {\n                  callback('请输入JSON字符串')\n                }\n              }\n            }]\n          },\n        },\n        url: {\n          add: '/sys/fillRule/add',\n          edit: '/sys/fillRule/edit',\n        },\n      }\n    },\n    computed: {\n      disabledCode() {\n        return !!this.model.id\n      }\n    },\n    created() {\n    },\n    methods: {\n      add() {\n        this.edit({})\n      },\n      edit(record) {\n        this.form.resetFields()\n        this.model = Object.assign({}, record)\n        this.visible = true\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model, 'ruleName', 'ruleCode', 'ruleClass', 'ruleParams'))\n        })\n      },\n      close() {\n        this.$emit('close')\n        this.visible = false\n      },\n      handleOk() {\n        const that = this\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true\n            let httpUrl = this.url.add, method = 'post'\n            if (this.model.id) {\n              httpUrl = this.url.edit\n              method = 'put'\n            }\n\n            let formData = Object.assign(this.model, values)\n            httpAction(httpUrl, formData, method).then((res) => {\n              if (res.success) {\n                that.$message.success(res.message)\n                that.$emit('ok')\n              } else {\n                that.$message.warning(res.message)\n              }\n            }).finally(() => {\n              that.confirmLoading = false\n              that.close()\n            })\n          }\n        })\n      },\n      handleCancel() {\n        this.close()\n      }\n\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>"],"sourceRoot":"src/views/system/modules"}]}