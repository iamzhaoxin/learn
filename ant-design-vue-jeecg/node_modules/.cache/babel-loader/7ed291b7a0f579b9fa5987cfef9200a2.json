{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\dynamic\\JMdEditorDyn.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\dynamic\\JMdEditorDyn.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\nimport load from './load';\nimport { md_js, md_zh_cn_js } from './Resource';\nimport defaultOptions from '@/components/jeecg/JMarkdownEditor/default-options.js';\nexport default {\n  name: 'JMdEditorDyn',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    id: {\n      type: String,\n      required: false,\n      default: function _default() {\n        return 'markdown-editor-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '');\n      }\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return defaultOptions;\n      }\n    },\n    mode: {\n      type: String,\n      default: 'markdown'\n    },\n    height: {\n      type: String,\n      required: false,\n      default: '300px'\n    },\n    language: {\n      type: String,\n      required: false,\n      default: 'zh-CN'\n    }\n  },\n  data: function data() {\n    return {\n      editor: null,\n      dynamicId: this.id\n    };\n  },\n  computed: {\n    editorOptions: function editorOptions() {\n      var options = Object.assign({}, defaultOptions, this.options);\n      options.initialEditType = this.mode;\n      options.height = this.height;\n      options.language = this.language;\n      return options;\n    }\n  },\n  watch: {\n    value: function value(newValue, preValue) {\n      if (newValue !== preValue && newValue !== this.editor.getMarkdown()) {\n        this.editor.setMarkdown(newValue);\n      }\n    },\n    language: function language(val) {\n      this.destroyEditor();\n      this.initEditor();\n    },\n    height: function height(newValue) {\n      this.editor.height(newValue);\n    },\n    mode: function mode(newValue) {\n      this.editor.changeMode(newValue);\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  destroyed: function destroyed() {\n    this.destroyEditor();\n  },\n  methods: {\n    init: function init() {\n      this.initEditor();\n      /* load(md_js,'',()=>{\n         load(md_zh_cn_js,'',()=>{\n          })\n       })*/\n    },\n    initEditor: function initEditor() {\n      var _this = this;\n\n      var Editor = toastui.Editor;\n      this.editor = new Editor(_objectSpread({\n        el: document.getElementById(this.dynamicId)\n      }, this.editorOptions));\n\n      if (this.value) {\n        this.editor.setMarkdown(this.value);\n      }\n\n      this.editor.on('change', function () {\n        _this.$emit('change', _this.editor.getMarkdown());\n      });\n    },\n    destroyEditor: function destroyEditor() {\n      if (!this.editor) return;\n      this.editor.off('change');\n      this.editor.remove();\n    },\n    setMarkdown: function setMarkdown(value) {\n      this.editor.setMarkdown(value);\n    },\n    getMarkdown: function getMarkdown() {\n      return this.editor.getMarkdown();\n    },\n    setHtml: function setHtml(value) {\n      this.editor.setHtml(value);\n    },\n    getHtml: function getHtml() {\n      return this.editor.getHtml();\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",{"version":3,"sources":["JMdEditorDyn.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"j-markdown-editor\" :id=\"dynamicId\"/>\n</template>\n\n<script>\n  import load from './load'\n  import { md_js, md_zh_cn_js } from './Resource'\n  import defaultOptions from '@/components/jeecg/JMarkdownEditor/default-options.js'\n\n  export default {\n    name: 'JMdEditorDyn',\n    props: {\n      value: {\n        type: String,\n        default: ''\n      },\n      id: {\n        type: String,\n        required: false,\n        default() {\n          return 'markdown-editor-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '')\n        }\n      },\n      options: {\n        type: Object,\n        default() {\n          return defaultOptions\n        }\n      },\n      mode: {\n        type: String,\n        default: 'markdown'\n      },\n      height: {\n        type: String,\n        required: false,\n        default: '300px'\n      },\n      language: {\n        type: String,\n        required: false,\n        default: 'zh-CN'\n      }\n    },\n    data() {\n      return {\n        editor: null,\n        dynamicId: this.id\n      }\n    },\n    computed: {\n      editorOptions() {\n        const options = Object.assign({}, defaultOptions, this.options)\n        options.initialEditType = this.mode\n        options.height = this.height\n        options.language = this.language\n        return options\n      }\n    },\n    watch: {\n      value(newValue, preValue) {\n        if (newValue !== preValue && newValue !== this.editor.getMarkdown()) {\n          this.editor.setMarkdown(newValue)\n        }\n      },\n      language(val) {\n        this.destroyEditor()\n        this.initEditor()\n      },\n      height(newValue) {\n        this.editor.height(newValue)\n      },\n      mode(newValue) {\n        this.editor.changeMode(newValue)\n      }\n    },\n    mounted() {\n      this.init()\n    },\n    destroyed() {\n      this.destroyEditor()\n    },\n    methods: {\n      init(){\n\n        this.initEditor()\n       /* load(md_js,'',()=>{\n          load(md_zh_cn_js,'',()=>{\n\n          })\n        })*/\n      },\n      initEditor() {\n        const Editor = toastui.Editor\n        this.editor = new Editor({\n          el: document.getElementById(this.dynamicId),\n          ...this.editorOptions\n        })\n        if (this.value) {\n          this.editor.setMarkdown(this.value)\n        }\n        this.editor.on('change', () => {\n          this.$emit('change', this.editor.getMarkdown())\n        })\n      },\n      destroyEditor() {\n        if (!this.editor) return\n        this.editor.off('change')\n        this.editor.remove()\n      },\n      setMarkdown(value) {\n        this.editor.setMarkdown(value)\n      },\n      getMarkdown() {\n        return this.editor.getMarkdown()\n      },\n      setHtml(value) {\n        this.editor.setHtml(value)\n      },\n      getHtml() {\n        return this.editor.getHtml()\n      }\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    }\n  }\n</script>\n<style scoped lang=\"less\">\n\n  .j-markdown-editor {\n    /deep/ .tui-editor-defaultUI {\n      .te-mode-switch,\n      .tui-scrollsync\n      {\n        line-height: 1.5;\n      }\n    }\n  }\n\n</style>"],"sourceRoot":"src/components/jeecg/dynamic"}]}