{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\jeecg\\JVxeDemo\\demo\\PopupSubTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\jeecg\\JVxeDemo\\demo\\PopupSubTable.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction } from '@api/manage';\nimport { JVXETypes } from '@/components/jeecg/JVxeTable'; // 弹出子表示例\n\nexport default {\n  name: 'PopupSubTable',\n  data: function data() {\n    return {\n      loading: false,\n      dataSource: [],\n      columns: [{\n        key: 'num',\n        title: '序号',\n        width: '80px'\n      }, {\n        key: 'ship_name',\n        title: '船名',\n        width: '180px',\n        type: JVXETypes.input\n      }, {\n        key: 'call',\n        title: '呼叫',\n        width: '80px'\n      }, {\n        key: 'len',\n        title: '长',\n        width: '80px'\n      }, {\n        key: 'ton',\n        title: '吨',\n        width: '120px'\n      }, {\n        key: 'payer',\n        title: '付款方',\n        width: '120px'\n      }, {\n        key: 'count',\n        title: '数',\n        width: '40px'\n      }, {\n        key: 'company',\n        title: '公司',\n        minWidth: '180px',\n        // 是否点击显示详细信息\n        // 只有当前单元格不能编辑的时候才能生效\n        // 如果不设的话，点击就只弹出子表，不会弹出主表的详细信息\n        showDetails: true\n      }, {\n        key: 'trend',\n        title: '动向',\n        width: '120px'\n      }],\n      // 子表的信息\n      subTable: {\n        currentRowId: null,\n        loading: false,\n        pagination: {\n          current: 1,\n          pageSize: 200,\n          pageSizeOptions: ['100', '200'],\n          total: 0\n        },\n        selectedRows: [],\n        dataSource: [],\n        columns: [{\n          key: 'dd_num',\n          title: '调度序号',\n          width: '120px'\n        }, {\n          key: 'tug',\n          title: '拖轮',\n          width: '180px',\n          type: JVXETypes.input\n        }, {\n          key: 'work_start_time',\n          title: '作业开始时间',\n          width: '180px',\n          type: JVXETypes.input\n        }, {\n          key: 'work_stop_time',\n          title: '作业结束时间',\n          width: '180px',\n          type: JVXETypes.input\n        }, {\n          key: 'type',\n          title: '船舶分类',\n          width: '120px',\n          type: JVXETypes.input\n        }, {\n          key: 'port_area',\n          title: '所属港区',\n          minWidth: '120px',\n          type: JVXETypes.input\n        }]\n      },\n      // 查询url地址\n      url: {\n        getData: '/mock/vxe/getData'\n      },\n      // 主表form表单字段\n      mainForm: {\n        id: '',\n        num: '',\n        ship_name: '',\n        call: '',\n        len: '',\n        ton: '',\n        payer: '',\n        count: '',\n        company: '',\n        trend: ''\n      },\n      // form表单 col\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 20\n      },\n      rules: {\n        num: [{\n          required: true,\n          message: '必须输入序号'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.loadData();\n  },\n  methods: {\n    log: console.log,\n    // 加载数据\n    loadData: function loadData() {\n      var _this = this;\n\n      // 封装查询条件\n      var formData = {\n        pageNo: 1,\n        pageSize: 30\n      }; // 调用查询数据接口\n\n      this.loading = true;\n      getAction(this.url.getData, formData).then(function (res) {\n        if (res.success) {\n          // 将查询的数据赋值给 dataSource\n          _this.dataSource = res.result.records; // 重置选择\n\n          _this.selectedRows = [];\n        } else {\n          _this.$error({\n            title: '主表查询失败',\n            content: res.message\n          });\n        }\n      }).finally(function () {\n        // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n        _this.loading = false;\n      });\n    },\n    // 查询子表数据\n    loadSubData: function loadSubData(row) {\n      var _this2 = this;\n\n      if (row) {\n        // 这里一定要做限制，限制不能重复查询，否者会出现死循环\n        if (this.subTable.currentRowId === row.id) {\n          return true;\n        }\n\n        this.subTable.currentRowId = row.id;\n        var formData = {\n          pageNo: 1,\n          pageSize: 30,\n          parentId: row.id\n        };\n        this.subTable.loading = true;\n        getAction(this.url.getData, formData).then(function (res) {\n          if (res.success) {\n            // 将查询的数据赋值给 dataSource\n            _this2.subTable.dataSource = res.result.records;\n          } else {\n            _this2.$error({\n              title: '主表查询失败',\n              content: res.message\n            });\n          }\n        }).finally(function () {\n          // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n          _this2.subTable.loading = false;\n        });\n        return true;\n      } else {\n        return false;\n      }\n    },\n    // 详细信息里点了确认按钮\n    handleDetailsConfirm: function handleDetailsConfirm(_ref) {\n      var _this3 = this;\n\n      var row = _ref.row,\n          $table = _ref.$table,\n          callback = _ref.callback;\n      console.log('保存的数据：', row); // 校验当前行\n\n      $table.validate(row).then(function (errMap) {\n        // 校验通过\n        if (!errMap) {\n          // 校验子表，如果需要的话，可以操作下面这个对象：\n          // this.$refs.subFormTable\n          callback(true);\n          _this3.loading = true;\n          setTimeout(function () {\n            _this3.loading = false;\n\n            _this3.$message.success('保存成功');\n          }, 1000);\n        } else {\n          callback(false);\n\n          _this3.$message.warn('校验失败');\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["PopupSubTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-card title=\"弹出子表示例\" :bordered=\"false\">\n\n    <!--\n      【弹出子表大体思路】\n      1. 必须要有 click-row-show-sub-form 属性，如果该属性设为false，那么就不会弹出子表\n      2. 必须要有 sub-form 插槽，用于规定弹出子表的内容\n      3. highlight-current-row 属性可有可无，如果有则点击一行的时候，该行会背景色会常亮\n    -->\n\n    <!--\n      【弹出详细信息（既有主表的数据也有子表的）大体思路】\n      1. 必须要有 click-row-show-main-form 属性，如果该属性设为false，那么就不会弹出详细信息\n      2. 必须要有 main-form 插槽，用于规定弹出子表的内容\n      3. 可选 click-row-show-sub-form 属性，如果有该属性，就会显示子表，否者不显示\n    -->\n\n    <j-vxe-table\n      toolbar\n      row-number\n      row-selection\n\n      highlight-current-row\n      click-row-show-sub-form\n      click-row-show-main-form\n\n      :height=\"750\"\n      :loading=\"loading\"\n      :columns=\"columns\"\n      :dataSource=\"dataSource\"\n      @detailsConfirm=\"handleDetailsConfirm\"\n    >\n\n      <!-- 主表单 -->\n      <template v-slot:mainForm=\"{row}\">\n        <template v-if=\"row\">\n          <a-form-model\n            ref=\"form2\"\n            :model=\"row\"\n            :rules=\"rules\"\n            :label-col=\"labelCol\"\n            :wrapper-col=\"wrapperCol\"\n          >\n            <a-row :gutter=\"8\">\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"ID\" prop=\"id\">\n                  <a-input v-model=\"row.id\" disabled/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"序号\" prop=\"num\">\n                  <a-input v-model=\"row.num\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"船名\" prop=\"ship_name\">\n                  <a-input v-model=\"row.ship_name\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"呼叫\" prop=\"call\">\n                  <a-input v-model=\"row.call\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"长\" prop=\"len\">\n                  <a-input v-model=\"row.len\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"吨\" prop=\"ton\">\n                  <a-input v-model=\"row.ton\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"付款方\" prop=\"payer\">\n                  <a-input v-model=\"row.payer\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"数\" prop=\"count\">\n                  <a-input v-model=\"row.count\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"公司\" prop=\"company\">\n                  <a-input v-model=\"row.company\"/>\n                </a-form-model-item>\n              </a-col>\n              <a-col :span=\"8\">\n                <a-form-model-item label=\"动向\" prop=\"trend\">\n                  <a-input v-model=\"row.trend\"/>\n                </a-form-model-item>\n              </a-col>\n            </a-row>\n          </a-form-model>\n        </template>\n\n      </template>\n\n      <!-- 子表单 -->\n      <template v-slot:subForm=\"{row}\">\n        <template v-if=\"loadSubData(row)\">\n          <j-vxe-table\n            ref=\"subFormTable\"\n            height=\"auto\"\n            :max-height=\"350\"\n            :loading=\"subTable.loading\"\n            :columns=\"subTable.columns\"\n            :dataSource=\"subTable.dataSource\"\n          />\n        </template>\n      </template>\n\n    </j-vxe-table>\n\n  </a-card>\n</template>\n\n<script>\n  import { getAction } from '@api/manage'\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\n\n  // 弹出子表示例\n  export default {\n    name: 'PopupSubTable',\n    data() {\n      return {\n        loading: false,\n        dataSource: [],\n        columns: [\n          {key: 'num', title: '序号', width: '80px'},\n          {key: 'ship_name', title: '船名', width: '180px', type: JVXETypes.input},\n          {key: 'call', title: '呼叫', width: '80px'},\n          {key: 'len', title: '长', width: '80px'},\n          {key: 'ton', title: '吨', width: '120px'},\n          {key: 'payer', title: '付款方', width: '120px'},\n          {key: 'count', title: '数', width: '40px'},\n          {\n            key: 'company',\n            title: '公司',\n            minWidth: '180px',\n            // 是否点击显示详细信息\n            // 只有当前单元格不能编辑的时候才能生效\n            // 如果不设的话，点击就只弹出子表，不会弹出主表的详细信息\n            showDetails: true\n          },\n          {key: 'trend', title: '动向', width: '120px'},\n        ],\n        // 子表的信息\n        subTable: {\n          currentRowId: null,\n          loading: false,\n          pagination: {current: 1, pageSize: 200, pageSizeOptions: ['100', '200'], total: 0},\n          selectedRows: [],\n          dataSource: [],\n          columns: [\n            {key: 'dd_num', title: '调度序号', width: '120px'},\n            {key: 'tug', title: '拖轮', width: '180px', type: JVXETypes.input},\n            {key: 'work_start_time', title: '作业开始时间', width: '180px', type: JVXETypes.input},\n            {key: 'work_stop_time', title: '作业结束时间', width: '180px', type: JVXETypes.input},\n            {key: 'type', title: '船舶分类', width: '120px', type: JVXETypes.input},\n            {key: 'port_area', title: '所属港区', minWidth: '120px', type: JVXETypes.input},\n          ],\n        },\n        // 查询url地址\n        url: {\n          getData: '/mock/vxe/getData',\n        },\n        // 主表form表单字段\n        mainForm: {\n          id: '',\n          num: '',\n          ship_name: '',\n          call: '',\n          len: '',\n          ton: '',\n          payer: '',\n          count: '',\n          company: '',\n          trend: '',\n        },\n        // form表单 col\n        labelCol: {span: 4},\n        wrapperCol: {span: 20},\n        rules: {\n          num: [\n            {required: true, message: '必须输入序号'},\n          ],\n        },\n      }\n    },\n\n    created() {\n      this.loadData()\n    },\n    methods: {\n\n      log: console.log,\n\n      // 加载数据\n      loadData() {\n        // 封装查询条件\n        let formData = {pageNo: 1, pageSize: 30}\n        // 调用查询数据接口\n        this.loading = true\n        getAction(this.url.getData, formData).then(res => {\n          if (res.success) {\n            // 将查询的数据赋值给 dataSource\n            this.dataSource = res.result.records\n            // 重置选择\n            this.selectedRows = []\n          } else {\n            this.$error({title: '主表查询失败', content: res.message})\n          }\n        }).finally(() => {\n          // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n          this.loading = false\n        })\n      },\n\n      // 查询子表数据\n      loadSubData(row) {\n        if (row) {\n          // 这里一定要做限制，限制不能重复查询，否者会出现死循环\n          if (this.subTable.currentRowId === row.id) {\n            return true\n          }\n          this.subTable.currentRowId = row.id\n          let formData = {pageNo: 1, pageSize: 30, parentId: row.id}\n          this.subTable.loading = true\n          getAction(this.url.getData, formData).then(res => {\n            if (res.success) {\n              // 将查询的数据赋值给 dataSource\n              this.subTable.dataSource = res.result.records\n            } else {\n              this.$error({title: '主表查询失败', content: res.message})\n            }\n          }).finally(() => {\n            // 这里是无论成功或失败都会执行的方法，在这里关闭loading\n            this.subTable.loading = false\n          })\n          return true\n        } else {\n          return false\n        }\n      },\n\n      // 详细信息里点了确认按钮\n      handleDetailsConfirm({row, $table, callback}) {\n        console.log('保存的数据：', row)\n        // 校验当前行\n        $table.validate(row).then((errMap) => {\n          // 校验通过\n          if (!errMap) {\n            // 校验子表，如果需要的话，可以操作下面这个对象：\n            // this.$refs.subFormTable\n\n            callback(true)\n            this.loading = true\n            setTimeout(() => {\n              this.loading = false\n              this.$message.success('保存成功')\n            }, 1000)\n          } else {\n            callback(false)\n            this.$message.warn('校验失败')\n          }\n        })\n      },\n\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/jeecg/JVxeDemo/demo"}]}