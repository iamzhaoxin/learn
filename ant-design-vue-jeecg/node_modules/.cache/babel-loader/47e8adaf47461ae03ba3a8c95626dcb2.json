{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\third\\JeecgThirdLoginMixin.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\third\\JeecgThirdLoginMixin.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n *第三方登录\n */\nimport { mapActions } from 'vuex';\nimport { postAction } from '@api/manage';\nimport { timeFix } from '@/utils/util';\nexport var JeecgThirdLoginMixin = {\n  data: function data() {\n    return {\n      //第三方登录相关信息\n      thirdLoginInfo: '',\n      thirdPasswordShow: false,\n      thirdLoginPassword: '',\n      thirdLoginUser: '',\n      thirdConfirmShow: false,\n      thirdCreateUserLoding: false,\n      thirdLoginState: false,\n      //绑定手机号弹窗\n      bindingPhoneModal: false,\n      thirdPhone: '',\n      thirdCaptcha: '',\n      //获取验证码按钮30s之内是否可点击\n      thirdState: {\n        time: 30,\n        smsSendBtn: false\n      },\n      //第三方用户UUID\n      thirdUserUuid: '',\n      thirdType: '',\n      url: {\n        bindingThirdPhone: '/sys/thirdLogin/bindingThirdPhone'\n      }\n    };\n  },\n  created: function created() {},\n  methods: _objectSpread({}, mapActions(['ThirdLogin']), {\n    //第三方登录\n    onThirdLogin: function onThirdLogin(source) {\n      var url = window._CONFIG['domianURL'] + \"/sys/thirdLogin/render/\".concat(source);\n      window.open(url, \"login \".concat(source), 'height=500, width=500, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no');\n      var that = this;\n      that.thirdType = source;\n      that.thirdLoginInfo = '';\n      that.thirdLoginState = false;\n\n      var receiveMessage = function receiveMessage(event) {\n        var token = event.data;\n\n        if (typeof token === 'string') {\n          //如果是字符串类型 说明是token信息\n          if (token === '登录失败') {\n            that.$message.warning(token);\n          } else if (token.includes('绑定手机号')) {\n            that.bindingPhoneModal = true;\n            var strings = token.split(',');\n            that.thirdUserUuid = strings[1];\n          } else {\n            that.doThirdLogin(token);\n          }\n        } else if (_typeof(token) === 'object') {\n          //对象类型 说明需要提示是否绑定现有账号\n          if (token['isObj'] === true) {\n            that.thirdConfirmShow = true;\n            that.thirdLoginInfo = _objectSpread({}, token);\n          }\n        } else {\n          that.$message.warning('不识别的信息传递');\n        }\n      };\n\n      window.addEventListener('message', receiveMessage, false);\n    },\n    // 根据token执行登录\n    doThirdLogin: function doThirdLogin(token) {\n      var _this = this;\n\n      if (this.thirdLoginState === false) {\n        this.thirdLoginState = true;\n        var param = {};\n        param.thirdType = this.thirdType;\n        param.token = token;\n        this.ThirdLogin(param).then(function (res) {\n          if (res.success) {\n            _this.loginSuccess();\n          } else {\n            _this.requestFailed(res);\n          }\n        });\n      }\n    },\n    // 绑定已有账号 需要输入密码\n    thirdLoginUserBind: function thirdLoginUserBind() {\n      this.thirdLoginPassword = '';\n      this.thirdLoginUser = this.thirdLoginInfo.uuid;\n      this.thirdConfirmShow = false;\n      this.thirdPasswordShow = true;\n    },\n    //创建新账号\n    thirdLoginUserCreate: function thirdLoginUserCreate() {\n      var _this2 = this;\n\n      this.thirdCreateUserLoding = true; // 账号名后面添加两位随机数\n\n      this.thirdLoginInfo['suffix'] = parseInt(Math.random() * 98 + 1); //this.thirdLoginInfo.operateCode = 123 //测试校验失败\n\n      postAction('/sys/third/user/create', this.thirdLoginInfo).then(function (res) {\n        if (res.success) {\n          var token = res.result;\n          console.log('thirdCreateNewAccount', token);\n\n          _this2.doThirdLogin(token);\n\n          _this2.thirdConfirmShow = false;\n        } else {\n          _this2.$message.warning(res.message);\n        }\n      }).finally(function () {\n        _this2.thirdCreateUserLoding = false;\n      });\n    },\n    // 核实密码\n    thirdLoginCheckPassword: function thirdLoginCheckPassword() {\n      var _this3 = this;\n\n      //this.thirdLoginInfo.operateCode = 123 //测试校验失败\n      var param = Object.assign({}, this.thirdLoginInfo, {\n        password: this.thirdLoginPassword\n      });\n      postAction('/sys/third/user/checkPassword', param).then(function (res) {\n        if (res.success) {\n          _this3.thirdLoginNoPassword();\n\n          _this3.doThirdLogin(res.result);\n        } else {\n          _this3.$message.warning(res.message);\n        }\n      });\n    },\n    // 没有密码 取消操作\n    thirdLoginNoPassword: function thirdLoginNoPassword() {\n      this.thirdPasswordShow = false;\n      this.thirdLoginPassword = '';\n      this.thirdLoginUser = '';\n    },\n    //获取第三方验证码\n    getThirdCaptcha: function getThirdCaptcha() {\n      var _this4 = this;\n\n      var that = this;\n\n      if (!this.thirdPhone) {\n        that.cmsFailed('请输入手机号');\n      } else {\n        this.thirdState.smsSendBtn = true;\n        var interval = window.setInterval(function () {\n          if (that.thirdState.time-- <= 0) {\n            that.thirdState.time = 30;\n            that.thirdState.smsSendBtn = false;\n            window.clearInterval(interval);\n          }\n        }, 1000);\n        var hide = this.$message.loading('验证码发送中..', 0);\n        var smsParams = {};\n        smsParams.mobile = this.thirdPhone;\n        smsParams.smsmode = '1';\n        postAction('/sys/sms', smsParams).then(function (res) {\n          if (!res.success) {\n            setTimeout(hide, 0);\n\n            _this4.cmsFailed(res.message);\n          }\n\n          setTimeout(hide, 500);\n        }).catch(function (err) {\n          setTimeout(hide, 1);\n          clearInterval(interval);\n          that.thirdState.time = 30;\n          that.thirdState.smsSendBtn = false;\n\n          _this4.requestFailed(err);\n        });\n      }\n    },\n    //绑定手机号点击确定按钮\n    thirdHandleOk: function thirdHandleOk() {\n      var _this5 = this;\n\n      var bingingParams = {};\n      bingingParams.mobile = this.thirdPhone;\n      bingingParams.captcha = this.thirdCaptcha;\n      bingingParams.thirdUserUuid = this.thirdUserUuid;\n      postAction(this.url.bindingThirdPhone, bingingParams).then(function (res) {\n        if (res.success) {\n          _this5.bindingPhoneModal = false;\n\n          _this5.doThirdLogin(res.result);\n        } else {\n          _this5.$message.$warning(res.message);\n        }\n      });\n    },\n    loginSuccess: function loginSuccess() {\n      // update-begin- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n      // this.loginBtn = false\n      // update-end- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n      this.$router.push({\n        path: \"/dashboard/analysis\"\n      }).catch(function () {\n        console.log('登录跳转首页出错,这个错误从哪里来的');\n      });\n      this.$notification.success({\n        message: '欢迎',\n        description: \"\".concat(timeFix(), \"\\uFF0C\\u6B22\\u8FCE\\u56DE\\u6765\")\n      });\n    },\n    cmsFailed: function cmsFailed(err) {\n      this.$notification['error']({\n        message: \"登录失败\",\n        description: err,\n        duration: 4\n      });\n    },\n    requestFailed: function requestFailed(err) {\n      this.$notification['error']({\n        message: '登录失败',\n        description: ((err.response || {}).data || {}).message || err.message || \"请求出现错误，请稍后再试\",\n        duration: 4\n      });\n      this.loginBtn = false;\n    }\n  })\n};",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/views/user/third/JeecgThirdLoginMixin.js"],"names":["mapActions","postAction","timeFix","JeecgThirdLoginMixin","data","thirdLoginInfo","thirdPasswordShow","thirdLoginPassword","thirdLoginUser","thirdConfirmShow","thirdCreateUserLoding","thirdLoginState","bindingPhoneModal","thirdPhone","thirdCaptcha","thirdState","time","smsSendBtn","thirdUserUuid","thirdType","url","bindingThirdPhone","created","methods","onThirdLogin","source","window","_CONFIG","open","that","receiveMessage","event","token","$message","warning","includes","strings","split","doThirdLogin","addEventListener","param","ThirdLogin","then","res","success","loginSuccess","requestFailed","thirdLoginUserBind","uuid","thirdLoginUserCreate","parseInt","Math","random","result","console","log","message","finally","thirdLoginCheckPassword","Object","assign","password","thirdLoginNoPassword","getThirdCaptcha","cmsFailed","interval","setInterval","clearInterval","hide","loading","smsParams","mobile","smsmode","setTimeout","catch","err","thirdHandleOk","bingingParams","captcha","$warning","$router","push","path","$notification","description","duration","response","loginBtn"],"mappings":"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","sourcesContent":["/**\n *第三方登录\n */\nimport { mapActions } from 'vuex'\nimport { postAction } from '@api/manage'\nimport { timeFix } from '@/utils/util'\n\nexport const JeecgThirdLoginMixin = {\n  data() {\n    return {\n      //第三方登录相关信息\n      thirdLoginInfo: '',\n      thirdPasswordShow: false,\n      thirdLoginPassword: '',\n      thirdLoginUser: '',\n      thirdConfirmShow: false,\n      thirdCreateUserLoding: false,\n      thirdLoginState: false,\n      //绑定手机号弹窗\n      bindingPhoneModal: false,\n      thirdPhone: '',\n      thirdCaptcha: '',\n      //获取验证码按钮30s之内是否可点击\n      thirdState: {\n        time: 30,\n        smsSendBtn: false\n      },\n      //第三方用户UUID\n      thirdUserUuid: '',\n      thirdType: '',\n      url: {\n        bindingThirdPhone: '/sys/thirdLogin/bindingThirdPhone'\n      }\n    }\n  },\n  created() {\n  },\n  methods: {\n    ...mapActions(['ThirdLogin']),\n    //第三方登录\n    onThirdLogin(source) {\n      let url = window._CONFIG['domianURL'] + `/sys/thirdLogin/render/${source}`\n      window.open(url, `login ${source}`, 'height=500, width=500, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no')\n      let that = this\n      that.thirdType = source\n      that.thirdLoginInfo = ''\n      that.thirdLoginState = false\n      let receiveMessage = function(event) {\n        let token = event.data\n        if (typeof token === 'string') {\n          //如果是字符串类型 说明是token信息\n          if (token === '登录失败') {\n            that.$message.warning(token)\n          } else if (token.includes('绑定手机号')) {\n            that.bindingPhoneModal = true\n            let strings = token.split(',')\n            that.thirdUserUuid = strings[1]\n          } else {\n            that.doThirdLogin(token)\n          }\n        } else if (typeof token === 'object') {\n          //对象类型 说明需要提示是否绑定现有账号\n          if (token['isObj'] === true) {\n            that.thirdConfirmShow = true\n            that.thirdLoginInfo = { ...token }\n          }\n        } else {\n          that.$message.warning('不识别的信息传递')\n        }\n      }\n      window.addEventListener('message', receiveMessage, false)\n    },\n    // 根据token执行登录\n    doThirdLogin(token) {\n      if (this.thirdLoginState === false) {\n        this.thirdLoginState = true\n        let param={};\n        param.thirdType=this.thirdType\n        param.token=token\n        this.ThirdLogin(param).then(res => {\n          if (res.success) {\n            this.loginSuccess()\n          } else {\n            this.requestFailed(res)\n          }\n        })\n      }\n    },\n    // 绑定已有账号 需要输入密码\n    thirdLoginUserBind() {\n      this.thirdLoginPassword = ''\n      this.thirdLoginUser = this.thirdLoginInfo.uuid\n      this.thirdConfirmShow = false\n      this.thirdPasswordShow = true\n    },\n    //创建新账号\n    thirdLoginUserCreate() {\n      this.thirdCreateUserLoding = true\n      // 账号名后面添加两位随机数\n      this.thirdLoginInfo['suffix'] = parseInt(Math.random() * 98 + 1)\n      //this.thirdLoginInfo.operateCode = 123 //测试校验失败\n      postAction('/sys/third/user/create', this.thirdLoginInfo).then(res => {\n        if (res.success) {\n          let token = res.result\n          console.log('thirdCreateNewAccount', token)\n          this.doThirdLogin(token)\n          this.thirdConfirmShow = false\n        } else {\n          this.$message.warning(res.message)\n        }\n      }).finally(() => {\n        this.thirdCreateUserLoding = false\n      })\n    },\n    // 核实密码\n    thirdLoginCheckPassword() {\n      //this.thirdLoginInfo.operateCode = 123 //测试校验失败\n      let param = Object.assign({}, this.thirdLoginInfo, { password: this.thirdLoginPassword })\n      postAction('/sys/third/user/checkPassword', param).then(res => {\n        if (res.success) {\n          this.thirdLoginNoPassword()\n          this.doThirdLogin(res.result)\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    // 没有密码 取消操作\n    thirdLoginNoPassword() {\n      this.thirdPasswordShow = false\n      this.thirdLoginPassword = ''\n      this.thirdLoginUser = ''\n    },\n    //获取第三方验证码\n    getThirdCaptcha() {\n      let that = this\n      if (!this.thirdPhone) {\n        that.cmsFailed('请输入手机号')\n      } else {\n        this.thirdState.smsSendBtn = true\n        let interval = window.setInterval(() => {\n          if (that.thirdState.time-- <= 0) {\n            that.thirdState.time = 30\n            that.thirdState.smsSendBtn = false\n            window.clearInterval(interval)\n          }\n        }, 1000)\n        const hide = this.$message.loading('验证码发送中..', 0)\n        let smsParams = {}\n        smsParams.mobile = this.thirdPhone\n        smsParams.smsmode = '1'\n        postAction('/sys/sms', smsParams).then(res => {\n          if (!res.success) {\n            setTimeout(hide, 0)\n            this.cmsFailed(res.message)\n          }\n          setTimeout(hide, 500)\n        }).catch(err => {\n          setTimeout(hide, 1)\n          clearInterval(interval)\n          that.thirdState.time = 30\n          that.thirdState.smsSendBtn = false\n          this.requestFailed(err)\n        })\n      }\n    },\n    //绑定手机号点击确定按钮\n    thirdHandleOk() {\n      let bingingParams = {}\n      bingingParams.mobile = this.thirdPhone\n      bingingParams.captcha = this.thirdCaptcha\n      bingingParams.thirdUserUuid = this.thirdUserUuid\n      postAction(this.url.bindingThirdPhone, bingingParams).then(res => {\n        if (res.success) {\n          this.bindingPhoneModal = false\n          this.doThirdLogin(res.result)\n        } else {\n          this.$message.$warning(res.message)\n        }\n      })\n    },\n    loginSuccess () {\n      // update-begin- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n      // this.loginBtn = false\n      // update-end- author:sunjianlei --- date:20190812 --- for: 登录成功后不解除禁用按钮，防止多次点击\n      this.$router.push({ path: \"/dashboard/analysis\" }).catch(()=>{\n        console.log('登录跳转首页出错,这个错误从哪里来的')\n      })\n      this.$notification.success({\n        message: '欢迎',\n        description: `${timeFix()}，欢迎回来`,\n      });\n    },\n    cmsFailed(err){\n      this.$notification[ 'error' ]({\n        message: \"登录失败\",\n        description:err,\n        duration: 4,\n      });\n    },\n    requestFailed (err) {\n      this.$notification[ 'error' ]({\n        message: '登录失败',\n        description: ((err.response || {}).data || {}).message || err.message || \"请求出现错误，请稍后再试\",\n        duration: 4,\n      });\n      this.loginBtn = false;\n    },\n  }\n\n}"]}]}