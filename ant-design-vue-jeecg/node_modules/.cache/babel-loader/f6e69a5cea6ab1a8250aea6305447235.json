{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\alteration\\Step1.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\alteration\\Step1.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, postAction } from '@/api/manage';\nimport { checkOnlyUser } from '@/api/api';\nexport default {\n  name: \"Step1\",\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      inputCodeContent: \"\",\n      inputCodeNull: true,\n      verifiedCode: \"\",\n      validatorRules: {\n        username: {\n          rules: [{\n            required: false\n          }, {\n            validator: this.validateInputUsername\n          }]\n        },\n        inputCode: {\n          rules: [{\n            required: true,\n            message: '请输入验证码!'\n          }]\n        }\n      },\n      randCodeImage: '',\n      requestCodeSuccess: true,\n      currdatetime: ''\n    };\n  },\n  created: function created() {\n    this.handleChangeCheckCode();\n  },\n  methods: {\n    handleChangeCheckCode: function handleChangeCheckCode() {\n      var _this = this;\n\n      this.currdatetime = new Date().getTime();\n      getAction(\"/sys/randomImage/\".concat(this.currdatetime)).then(function (res) {\n        if (res.success) {\n          _this.randCodeImage = res.result;\n          _this.requestCodeSuccess = true;\n        } else {\n          _this.$message.error(res.message);\n\n          _this.requestCodeSuccess = false;\n        }\n      }).catch(function () {\n        _this.requestCodeSuccess = false;\n      });\n    },\n    nextStep: function nextStep() {\n      var that = this;\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          var isPhone = false;\n          var params = {};\n          var reg = /^[1-9]\\d*$|^0$/;\n          var username = values.username;\n\n          if (reg.test(username) == true) {\n            params.phone = username;\n            isPhone = true;\n          } else {\n            params.username = username;\n          }\n\n          that.validateInputCode().then(function () {\n            getAction(\"/sys/user/querySysUser\", params).then(function (res) {\n              if (res.success) {\n                var userList = {\n                  username: res.result.username,\n                  phone: res.result.phone,\n                  isPhone: isPhone\n                };\n                setTimeout(function () {\n                  that.$emit('nextStep', userList);\n                });\n              }\n            });\n          });\n        }\n      });\n    },\n    validateInputCode: function validateInputCode() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        postAction(\"/sys/checkCaptcha\", {\n          captcha: _this2.inputCodeContent,\n          checkKey: _this2.currdatetime\n        }).then(function (res) {\n          if (res.success) {\n            resolve();\n          } else {\n            _this2.$message.error(res.message);\n\n            reject();\n          }\n        });\n      });\n    },\n    inputCodeChange: function inputCodeChange(e) {\n      this.inputCodeContent = e.target.value;\n      console.log(this.inputCodeContent);\n\n      if (!e.target.value || 0 == e.target.value) {\n        this.inputCodeNull = true;\n      } else {\n        this.inputCodeContent = this.inputCodeContent.toLowerCase();\n        this.inputCodeNull = false;\n      }\n    },\n    generateCode: function generateCode(value) {\n      this.verifiedCode = value.toLowerCase();\n      console.log(this.verifiedCode);\n    },\n    validateInputUsername: function validateInputUsername(rule, value, callback) {\n      console.log(value);\n      var reg = /^[0-9]+.?[0-9]*/;\n\n      if (!value) {\n        callback(\"请输入用户名和手机号！\");\n      } //判断用户输入账号还是手机号码\n\n\n      if (reg.test(value)) {\n        var params = {\n          phone: value\n        };\n        checkOnlyUser(params).then(function (res) {\n          if (res.success) {\n            callback(\"用户名不存在!\");\n          } else {\n            callback();\n          }\n        });\n      } else {\n        var params = {\n          username: value\n        };\n        checkOnlyUser(params).then(function (res) {\n          if (res.success) {\n            callback(\"用户名不存在!\");\n          } else {\n            callback();\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Step1.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"main\">\n\n    <a-form style=\"max-width: 500px; margin: 40px auto 0;\" :form=\"form\" @keyup.enter.native=\"nextStep\">\n      <a-form-item>\n        <a-input\n          v-decorator=\"['username',validatorRules.username]\"\n          size=\"large\"\n          type=\"text\"\n          autocomplete=\"false\"\n          placeholder=\"请输入用户账号或手机号\">\n          <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n        </a-input>\n      </a-form-item>\n      <a-row :gutter=\"0\">\n        <a-col :span=\"14\">\n          <a-form-item>\n            <a-input\n              v-decorator=\"['inputCode',validatorRules.inputCode]\"\n              size=\"large\"\n              type=\"text\"\n              @change=\"inputCodeChange\"\n              placeholder=\"请输入验证码\">\n              <a-icon slot=\"prefix\" v-if=\" inputCodeContent==verifiedCode \" type=\"smile\"\n                      :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n              <a-icon slot=\"prefix\" v-else type=\"frown\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n        </a-col>\n        <a-col :span=\"10\" style=\"text-align: right\">\n          <img v-if=\"requestCodeSuccess\" style=\"margin-top: 2px;\" :src=\"randCodeImage\" @click=\"handleChangeCheckCode\"/>\n          <img v-else style=\"margin-top: 2px;\" src=\"../../../assets/checkcode.png\" @click=\"handleChangeCheckCode\"/>\n        </a-col>\n      </a-row>\n      <a-form-item :wrapperCol=\"{span: 19, offset: 5}\">\n        <router-link style=\"float: left;line-height: 40px;\" :to=\"{ name: 'login' }\">使用已有账户登录</router-link>\n        <a-button type=\"primary\" @click=\"nextStep\">下一步</a-button>\n      </a-form-item>\n    </a-form>\n  </div>\n</template>\n\n<script>\n  import { getAction,postAction } from '@/api/manage'\n  import { checkOnlyUser } from '@/api/api'\n\n  export default {\n    name: \"Step1\",\n    data() {\n      return {\n        form: this.$form.createForm(this),\n        inputCodeContent: \"\",\n        inputCodeNull: true,\n        verifiedCode: \"\",\n        validatorRules: {\n          username: {rules: [{required: false}, {validator: this.validateInputUsername}]},\n          inputCode: {rules: [{required: true, message: '请输入验证码!'}]},\n        },\n        randCodeImage:'',\n        requestCodeSuccess:true,\n        currdatetime:''\n\n      }\n    },\n    created(){\n      this.handleChangeCheckCode();\n    },\n    methods: {\n      handleChangeCheckCode(){\n        this.currdatetime = new Date().getTime();\n        getAction(`/sys/randomImage/${this.currdatetime}`).then(res=>{\n          if(res.success){\n            this.randCodeImage = res.result\n            this.requestCodeSuccess=true\n          }else{\n            this.$message.error(res.message)\n            this.requestCodeSuccess=false\n          }\n        }).catch(()=>{\n          this.requestCodeSuccess=false\n        })\n      },\n      nextStep() {\n        let that = this\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            let isPhone = false;\n            var params = {}\n            var reg = /^[1-9]\\d*$|^0$/;\n            var username = values.username;\n            if (reg.test(username) == true) {\n              params.phone = username;\n              isPhone = true\n            } else {\n              params.username = username;\n            }\n            that.validateInputCode().then(()=>{\n              getAction(\"/sys/user/querySysUser\", params).then((res) => {\n                if (res.success) {\n                  var userList = {\n                    username: res.result.username,\n                    phone: res.result.phone,\n                    isPhone: isPhone\n                  };\n                  setTimeout(function () {\n                    that.$emit('nextStep', userList)\n                  })\n                }\n              });\n            })\n          }\n        })\n\n      },\n      validateInputCode() {\n        return new Promise((resolve,reject)=>{\n          postAction(\"/sys/checkCaptcha\",{\n            captcha:this.inputCodeContent,\n            checkKey:this.currdatetime\n          }).then(res=>{\n            if(res.success){\n              resolve();\n            }else{\n              this.$message.error(res.message)\n              reject();\n            }\n          });\n        })\n      },\n      inputCodeChange(e) {\n        this.inputCodeContent = e.target.value;\n        console.log(this.inputCodeContent)\n        if (!e.target.value || 0 == e.target.value) {\n          this.inputCodeNull = true\n        } else {\n          this.inputCodeContent = this.inputCodeContent.toLowerCase()\n          this.inputCodeNull = false\n        }\n      },\n      generateCode(value) {\n        this.verifiedCode = value.toLowerCase();\n        console.log(this.verifiedCode);\n      },\n      validateInputUsername(rule, value, callback) {\n        console.log(value);\n        var reg = /^[0-9]+.?[0-9]*/;\n        if (!value) {\n          callback(\"请输入用户名和手机号！\");\n        }\n\n        //判断用户输入账号还是手机号码\n        if (reg.test(value)) {\n          var params = {\n            phone: value,\n          };\n          checkOnlyUser(params).then((res) => {\n            if (res.success) {\n              callback(\"用户名不存在!\")\n            } else {\n              callback()\n            }\n          })\n        } else {\n          var params = {\n            username: value,\n          };\n          checkOnlyUser(params).then((res) => {\n            if (res.success) {\n              callback(\"用户名不存在!\")\n            } else {\n              callback()\n            }\n          })\n        }\n      },\n\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/views/user/alteration"}]}