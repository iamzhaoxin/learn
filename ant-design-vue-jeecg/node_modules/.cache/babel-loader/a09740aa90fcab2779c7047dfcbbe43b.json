{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\chart\\BarMultid.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\chart\\BarMultid.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DataSet } from '@antv/data-set';\nimport { ChartEventMixins } from './mixins/ChartMixins';\nexport default {\n  name: 'BarMultid',\n  mixins: [ChartEventMixins],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'Jeecg',\n          'Jan.': 18.9,\n          'Feb.': 28.8,\n          'Mar.': 39.3,\n          'Apr.': 81.4,\n          'May': 47,\n          'Jun.': 20.3,\n          'Jul.': 24,\n          'Aug.': 35.6\n        }, {\n          type: 'Jeebt',\n          'Jan.': 12.4,\n          'Feb.': 23.2,\n          'Mar.': 34.5,\n          'Apr.': 99.7,\n          'May': 52.6,\n          'Jun.': 35.5,\n          'Jul.': 37.4,\n          'Aug.': 42.4\n        }];\n      }\n    },\n    fields: {\n      type: Array,\n      default: function _default() {\n        return ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.'];\n      }\n    },\n    // 别名，需要的格式：[{field:'name',alias:'姓名'}, {field:'sex',alias:'性别'}]\n    aliases: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 254\n    }\n  },\n  data: function data() {\n    return {\n      adjust: [{\n        type: 'dodge',\n        marginRatio: 1 / 32\n      }]\n    };\n  },\n  computed: {\n    data: function data() {\n      var _this = this;\n\n      var dv = new DataSet.View().source(this.dataSource);\n      dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'x',\n        value: 'y'\n      }); // bar 使用不了 - 和 / 所以替换下\n\n      var rows = dv.rows.map(function (row) {\n        if (typeof row.x === 'string') {\n          row.x = row.x.replace(/[-/]/g, '_');\n        }\n\n        return row;\n      }); // 替换别名\n\n      rows.forEach(function (row) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _this.aliases[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            if (item.field === row.type) {\n              row.type = item.alias;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n      return rows;\n    },\n    scale: function scale() {\n      return [{\n        type: 'cat',\n        dataKey: 'x'\n      }];\n    }\n  }\n};",{"version":3,"sources":["BarMultid.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :style=\"{ padding: '0 0 32px 32px' }\">\n    <h4 :style=\"{ marginBottom: '20px' }\">{{ title }}</h4>\n    <v-chart :data=\"data\" :height=\"height\" :force-fit=\"true\" :scale=\"scale\" :onClick=\"handleClick\">\n      <v-tooltip/>\n      <v-axis/>\n      <v-legend/>\n      <v-bar position=\"x*y\" color=\"type\" :adjust=\"adjust\"/>\n    </v-chart>\n  </div>\n</template>\n\n<script>\n  import { DataSet } from '@antv/data-set'\n  import { ChartEventMixins } from './mixins/ChartMixins'\n\n  export default {\n    name: 'BarMultid',\n    mixins: [ChartEventMixins],\n    props: {\n      title: {\n        type: String,\n        default: ''\n      },\n      dataSource: {\n        type: Array,\n        default: () => [\n          { type: 'Jeecg', 'Jan.': 18.9, 'Feb.': 28.8, 'Mar.': 39.3, 'Apr.': 81.4, 'May': 47, 'Jun.': 20.3, 'Jul.': 24, 'Aug.': 35.6 },\n          { type: 'Jeebt', 'Jan.': 12.4, 'Feb.': 23.2, 'Mar.': 34.5, 'Apr.': 99.7, 'May': 52.6, 'Jun.': 35.5, 'Jul.': 37.4, 'Aug.': 42.4 }\n        ]\n      },\n      fields: {\n        type: Array,\n        default: () => ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.']\n      },\n      // 别名，需要的格式：[{field:'name',alias:'姓名'}, {field:'sex',alias:'性别'}]\n      aliases: {\n        type: Array,\n        default: () => []\n      },\n      height: {\n        type: Number,\n        default: 254\n      }\n    },\n    data() {\n      return {\n        adjust: [{\n          type: 'dodge',\n          marginRatio: 1 / 32\n        }]\n      }\n    },\n    computed: {\n      data() {\n        const dv = new DataSet.View().source(this.dataSource)\n        dv.transform({\n          type: 'fold',\n          fields: this.fields,\n          key: 'x',\n          value: 'y'\n        })\n\n        // bar 使用不了 - 和 / 所以替换下\n        let rows = dv.rows.map(row => {\n          if (typeof row.x === 'string') {\n            row.x = row.x.replace(/[-/]/g, '_')\n          }\n          return row\n        })\n        // 替换别名\n        rows.forEach(row => {\n          for (let item of this.aliases) {\n            if (item.field === row.type) {\n              row.type = item.alias\n              break\n            }\n          }\n        })\n        return rows\n      },\n      scale() {\n        return [\n          {\n            type: 'cat',\n            dataKey: 'x'\n          }\n        ]\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/chart"}]}