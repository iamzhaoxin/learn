{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\JVxeCells\\JVxePopupCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\JVxeCells\\JVxePopupCell.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\nimport JVxeCellMixins, { vModel, dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\nexport default {\n  name: 'JVxePopupCell',\n  mixins: [JVxeCellMixins],\n  computed: {\n    popupProps: function popupProps() {\n      var innerValue = this.innerValue,\n          col = this.originColumn,\n          caseId = this.caseId,\n          cellProps = this.cellProps;\n      return _objectSpread({}, cellProps, {\n        value: innerValue,\n        field: col.field || col.key,\n        code: col.popupCode,\n        orgFields: col.orgFields,\n        destFields: col.destFields,\n        groupId: caseId\n      });\n    }\n  },\n  methods: {\n    /** popup回调 */\n    handlePopupInput: function handlePopupInput(value, others) {\n      var _this = this;\n\n      var row = this.row,\n          col = this.originColumn; // 存储输入的值\n\n      var popupValue = value;\n\n      if (others && Object.keys(others).length > 0) {\n        Object.keys(others).forEach(function (key) {\n          var currentValue = others[key]; // 当前列直接赋值，其他列通过vModel赋值\n\n          if (key === col.key) {\n            popupValue = currentValue;\n          } else {\n            vModel.call(_this, currentValue, row, key);\n          }\n        });\n      }\n\n      this.handleChangeCommon(popupValue);\n    }\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    aopEvents: {\n      editActived: function editActived(event) {\n        return dispatchEvent(event, 'ant-input');\n      }\n    }\n  }\n};",{"version":3,"sources":["JVxePopupCell.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,OAAA,cAAA,IAAA,MAAA,EAAA,aAAA,QAAA,oDAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,MAAA,EAAA,CAAA,cAAA,CAFA;AAGA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA,UACA,UADA,GACA,IADA,CACA,UADA;AAAA,UACA,GADA,GACA,IADA,CACA,YADA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAEA,+BACA,SADA;AAEA,QAAA,KAAA,EAAA,UAFA;AAGA,QAAA,KAAA,EAAA,GAAA,CAAA,KAAA,IAAA,GAAA,CAAA,GAHA;AAIA,QAAA,IAAA,EAAA,GAAA,CAAA,SAJA;AAKA,QAAA,SAAA,EAAA,GAAA,CAAA,SALA;AAMA,QAAA,UAAA,EAAA,GAAA,CAAA,UANA;AAOA,QAAA,OAAA,EAAA;AAPA;AASA;AAZA,GAHA;AAiBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,gBAFA,4BAEA,KAFA,EAEA,MAFA,EAEA;AAAA;;AAAA,UACA,GADA,GACA,IADA,CACA,GADA;AAAA,UACA,GADA,GACA,IADA,CACA,YADA,EAEA;;AACA,UAAA,UAAA,GAAA,KAAA;;AACA,UAAA,MAAA,IAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,YAAA,GAAA,MAAA,CAAA,GAAA,CAAA,CADA,CAEA;;AACA,cAAA,GAAA,KAAA,GAAA,CAAA,GAAA,EAAA;AACA,YAAA,UAAA,GAAA,YAAA;AACA,WAFA,MAEA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,YAAA,EAAA,GAAA,EAAA,GAAA;AACA;AACA,SARA;AASA;;AACA,WAAA,kBAAA,CAAA,UAAA;AACA;AAlBA,GAjBA;AAqCA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,WAAA,EAAA,qBAAA,KAAA;AAAA,eAAA,aAAA,CAAA,KAAA,EAAA,WAAA,CAAA;AAAA;AADA;AADA;AAtCA,CAAA","sourcesContent":["<template>\n  <j-popup\n    v-bind=\"popupProps\"\n    @input=\"handlePopupInput\"\n  />\n</template>\n\n<script>\n  import JVxeCellMixins, { vModel, dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\n  export default {\n    name: 'JVxePopupCell',\n    mixins: [JVxeCellMixins],\n    computed: {\n      popupProps() {\n        const {innerValue, originColumn: col, caseId, cellProps} = this\n        return {\n          ...cellProps,\n          value: innerValue,\n          field: col.field || col.key,\n          code: col.popupCode,\n          orgFields: col.orgFields,\n          destFields: col.destFields,\n          groupId: caseId,\n        }\n      },\n    },\n    methods: {\n      /** popup回调 */\n      handlePopupInput(value, others) {\n        const {row, originColumn: col} = this\n        // 存储输入的值\n        let popupValue = value\n        if (others && Object.keys(others).length > 0) {\n          Object.keys(others).forEach(key => {\n            let currentValue = others[key]\n            // 当前列直接赋值，其他列通过vModel赋值\n            if (key === col.key) {\n              popupValue = currentValue\n            } else {\n              vModel.call(this, currentValue, row, key)\n            }\n          })\n        }\n        this.handleChangeCommon(popupValue)\n      },\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      aopEvents: {\n        editActived: event => dispatchEvent(event, 'ant-input'),\n      },\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/JVxeCells"}]}