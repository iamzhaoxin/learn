{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\utils\\request.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\utils\\request.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["var _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from 'vue';\nimport axios from 'axios';\nimport store from '@/store';\nimport { VueAxios } from './axios';\nimport { Modal, notification } from 'ant-design-vue';\nimport { ACCESS_TOKEN, TENANT_ID } from \"@/store/mutation-types\";\n/**\n * 【指定 axios的 baseURL】\n * 如果手工指定 baseURL: '/jeecg-boot'\n * 则映射后端域名，通过 vue.config.js\n * @type {*|string}\n */\n\nvar apiBaseUrl = window._CONFIG['domianURL'] || \"/jeecg-boot\"; //console.log(\"apiBaseUrl= \",apiBaseUrl)\n// 创建 axios 实例\n\nvar service = axios.create({\n  //baseURL: '/jeecg-boot',\n  baseURL: apiBaseUrl,\n  // api base_url\n  timeout: 9000 // 请求超时时间\n\n});\n\nvar err = function err(error) {\n  if (error.response) {\n    var that = _this;\n    var data = error.response.data;\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    console.log(\"------异常响应------\", token);\n    console.log(\"------异常响应------\", error.response.status);\n\n    switch (error.response.status) {\n      case 403:\n        notification.error({\n          message: '系统提示',\n          description: '拒绝访问',\n          duration: 4\n        });\n        break;\n\n      case 500:\n        console.log(\"------error.response------\", error.response); // update-begin- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n\n        var type = error.response.request.responseType;\n\n        if (type === 'blob') {\n          blobToJson(data);\n          break;\n        } // update-end- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n        //notification.error({ message: '系统提示', description:'Token失效，请重新登录!',duration: 4})\n\n\n        if (token && data.message.includes(\"Token失效\")) {\n          // update-begin- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: function onOk() {\n              store.dispatch('Logout').then(function () {\n                Vue.ls.remove(ACCESS_TOKEN);\n\n                try {\n                  var path = window.document.location.pathname;\n                  console.log(\"location pathname -> \" + path);\n\n                  if (path != \"/\" && path.indexOf('/user/login') == -1) {\n                    window.location.reload();\n                  }\n                } catch (e) {\n                  window.location.reload();\n                }\n              });\n            }\n          }); // update-end- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n        }\n\n        break;\n\n      case 404:\n        notification.error({\n          message: '系统提示',\n          description: '很抱歉，资源未找到!',\n          duration: 4\n        });\n        break;\n\n      case 504:\n        notification.error({\n          message: '系统提示',\n          description: '网络超时'\n        });\n        break;\n\n      case 401:\n        notification.error({\n          message: '系统提示',\n          description: '未授权，请重新登录',\n          duration: 4\n        });\n\n        if (token) {\n          store.dispatch('Logout').then(function () {\n            setTimeout(function () {\n              window.location.reload();\n            }, 1500);\n          });\n        }\n\n        break;\n\n      default:\n        notification.error({\n          message: '系统提示',\n          description: data.message,\n          duration: 4\n        });\n        break;\n    }\n  }\n\n  return Promise.reject(error);\n}; // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  var token = Vue.ls.get(ACCESS_TOKEN);\n\n  if (token) {\n    config.headers['X-Access-Token'] = token; // 让每个请求携带自定义 token 请根据实际情况自行修改\n  } //update-begin-author:taoyan date:2020707 for:多租户\n\n\n  var tenantid = Vue.ls.get(TENANT_ID);\n\n  if (!tenantid) {\n    tenantid = 0;\n  }\n\n  config.headers['tenant_id'] = tenantid; //update-end-author:taoyan date:2020707 for:多租户\n\n  if (config.method == 'get') {\n    if (config.url.indexOf(\"sys/dict/getDictItems\") < 0) {\n      config.params = _objectSpread({\n        _t: Date.parse(new Date()) / 1000\n      }, config.params);\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(function (response) {\n  return response.data;\n}, err);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    var router = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Vue.use(VueAxios, router, service);\n  }\n};\n/**\n * Blob解析\n * @param data\n */\n\nfunction blobToJson(data) {\n  var fileReader = new FileReader();\n  var token = Vue.ls.get(ACCESS_TOKEN);\n\n  fileReader.onload = function () {\n    try {\n      var jsonData = JSON.parse(this.result); // 说明是普通对象数据，后台转换失败\n\n      console.log(\"jsonData\", jsonData);\n\n      if (jsonData.status === 500) {\n        console.log(\"token----------》\", token);\n\n        if (token && jsonData.message.includes(\"Token失效\")) {\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: function onOk() {\n              store.dispatch('Logout').then(function () {\n                Vue.ls.remove(ACCESS_TOKEN);\n                window.location.reload();\n              });\n            }\n          });\n        }\n      }\n    } catch (err) {\n      // 解析成对象失败，说明是正常的文件流\n      console.log(\"blob解析fileReader返回err\", err);\n    }\n  };\n\n  fileReader.readAsText(data);\n}\n\nexport { installer as VueAxios, service as axios };",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/utils/request.js"],"names":["Vue","axios","store","VueAxios","Modal","notification","ACCESS_TOKEN","TENANT_ID","apiBaseUrl","window","_CONFIG","service","create","baseURL","timeout","err","error","response","that","data","token","ls","get","console","log","status","message","description","duration","type","request","responseType","blobToJson","includes","title","content","okText","mask","onOk","dispatch","then","remove","path","document","location","pathname","indexOf","reload","e","setTimeout","Promise","reject","interceptors","use","config","headers","tenantid","method","url","params","_t","Date","parse","installer","vm","install","router","fileReader","FileReader","onload","jsonData","JSON","result","readAsText"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport axios from 'axios'\nimport store from '@/store'\nimport { VueAxios } from './axios'\nimport {Modal, notification} from 'ant-design-vue'\nimport { ACCESS_TOKEN, TENANT_ID } from \"@/store/mutation-types\"\n\n/**\n * 【指定 axios的 baseURL】\n * 如果手工指定 baseURL: '/jeecg-boot'\n * 则映射后端域名，通过 vue.config.js\n * @type {*|string}\n */\nlet apiBaseUrl = window._CONFIG['domianURL'] || \"/jeecg-boot\";\n//console.log(\"apiBaseUrl= \",apiBaseUrl)\n// 创建 axios 实例\nconst service = axios.create({\n  //baseURL: '/jeecg-boot',\n  baseURL: apiBaseUrl, // api base_url\n  timeout: 9000 // 请求超时时间\n})\n\nconst err = (error) => {\n  if (error.response) {\n    let that=this;\n    let data = error.response.data\n    const token = Vue.ls.get(ACCESS_TOKEN)\n    console.log(\"------异常响应------\",token)\n    console.log(\"------异常响应------\",error.response.status)\n    switch (error.response.status) {\n      case 403:\n        notification.error({ message: '系统提示', description: '拒绝访问',duration: 4})\n        break\n      case 500:\n        console.log(\"------error.response------\",error.response)\n        // update-begin- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n        let type=error.response.request.responseType;\n        if(type === 'blob'){\n          blobToJson(data);\n          break;\n        }\n        // update-end- --- author:liusq ------ date:20200910 ---- for:处理Blob情况----\n        //notification.error({ message: '系统提示', description:'Token失效，请重新登录!',duration: 4})\n        if(token && data.message.includes(\"Token失效\")){\n          // update-begin- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: () => {\n              store.dispatch('Logout').then(() => {\n                Vue.ls.remove(ACCESS_TOKEN)\n                try {\n                  let path = window.document.location.pathname\n                  console.log(\"location pathname -> \"+path)\n                  if(path!=\"/\" && path.indexOf('/user/login')==-1){\n                    window.location.reload()\n                  }\n                }catch (e) {\n                  window.location.reload()\n                }\n              })\n            }\n          })\n          // update-end- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n        }\n        break\n      case 404:\n          notification.error({ message: '系统提示', description:'很抱歉，资源未找到!',duration: 4})\n        break\n      case 504:\n        notification.error({ message: '系统提示', description: '网络超时'})\n        break\n      case 401:\n        notification.error({ message: '系统提示', description:'未授权，请重新登录',duration: 4})\n        if (token) {\n          store.dispatch('Logout').then(() => {\n            setTimeout(() => {\n              window.location.reload()\n            }, 1500)\n          })\n        }\n        break\n      default:\n        notification.error({\n          message: '系统提示',\n          description: data.message,\n          duration: 4\n        })\n        break\n    }\n  }\n  return Promise.reject(error)\n};\n\n// request interceptor\nservice.interceptors.request.use(config => {\n  const token = Vue.ls.get(ACCESS_TOKEN)\n  if (token) {\n    config.headers[ 'X-Access-Token' ] = token // 让每个请求携带自定义 token 请根据实际情况自行修改\n  }\n  //update-begin-author:taoyan date:2020707 for:多租户\n  let tenantid = Vue.ls.get(TENANT_ID)\n  if (!tenantid) {\n    tenantid = 0;\n  }\n  config.headers[ 'tenant_id' ] = tenantid\n  //update-end-author:taoyan date:2020707 for:多租户\n  if(config.method=='get'){\n    if(config.url.indexOf(\"sys/dict/getDictItems\")<0){\n      config.params = {\n        _t: Date.parse(new Date())/1000,\n        ...config.params\n      }\n    }\n  }\n  return config\n},(error) => {\n  return Promise.reject(error)\n})\n\n// response interceptor\nservice.interceptors.response.use((response) => {\n    return response.data\n  }, err)\n\nconst installer = {\n  vm: {},\n  install (Vue, router = {}) {\n    Vue.use(VueAxios, router, service)\n  }\n}\n/**\n * Blob解析\n * @param data\n */\nfunction blobToJson(data) {\n  let fileReader = new FileReader();\n  let token = Vue.ls.get(ACCESS_TOKEN);\n  fileReader.onload = function() {\n    try {\n      let jsonData = JSON.parse(this.result);  // 说明是普通对象数据，后台转换失败\n      console.log(\"jsonData\",jsonData)\n      if (jsonData.status === 500) {\n        console.log(\"token----------》\",token)\n        if(token && jsonData.message.includes(\"Token失效\")){\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: () => {\n              store.dispatch('Logout').then(() => {\n                Vue.ls.remove(ACCESS_TOKEN)\n                window.location.reload()\n              })\n            }\n          })\n        }\n      }\n    } catch (err) {\n      // 解析成对象失败，说明是正常的文件流\n      console.log(\"blob解析fileReader返回err\",err)\n    }\n  };\n  fileReader.readAsText(data)\n}\n\nexport {\n  installer as VueAxios,\n  service as axios\n}"]}]}