{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\nimport { JVXETypes } from '@comp/jeecg/JVxeTable/index';\nexport default {\n  name: 'JVxeSelectCell',\n  mixins: [JVxeCellMixins],\n  computed: {\n    selectProps: function selectProps() {\n      var props = _objectSpread({}, this.cellProps); // 判断select是否允许输入\n\n\n      var _this$originColumn = this.originColumn,\n          allowSearch = _this$originColumn.allowSearch,\n          allowInput = _this$originColumn.allowInput;\n\n      if (allowInput === true || allowSearch === true) {\n        props['showSearch'] = true;\n      }\n\n      return props;\n    }\n  },\n  created: function created() {\n    var multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi];\n    var search = [JVXETypes.selectSearch, JVXETypes.sel_search];\n\n    if (multiple.includes(this.$type)) {\n      // 处理多选\n      var props = this.originColumn.props || {};\n      props['mode'] = 'multiple';\n      props['maxTagCount'] = 1;\n      this.$set(this.originColumn, 'props', props);\n    } else if (search.includes(this.$type)) {\n      // 处理搜索\n      this.$set(this.originColumn, 'allowSearch', true);\n    }\n  },\n  methods: {\n    /** 处理blur失去焦点事件 */\n    handleBlur: function handleBlur(value) {\n      var _this$originColumn2 = this.originColumn,\n          allowInput = _this$originColumn2.allowInput,\n          options = _this$originColumn2.options;\n\n      if (allowInput === true) {\n        // 删除无用的因搜索（用户输入）而创建的项\n        if (typeof value === 'string') {\n          var indexes = [];\n          options.forEach(function (option, index) {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              delete option.searchAdd;\n            } else if (option.searchAdd === true) {\n              indexes.push(index);\n            }\n          }); // 翻转删除数组中的项\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = indexes.reverse()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var index = _step.value;\n              options.splice(index, 1);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      }\n\n      this.handleBlurCommon(value);\n    },\n\n    /** 用于搜索下拉框中的内容 */\n    handleSelectFilterOption: function handleSelectFilterOption(input, option) {\n      var _this$originColumn3 = this.originColumn,\n          allowSearch = _this$originColumn3.allowSearch,\n          allowInput = _this$originColumn3.allowInput;\n\n      if (allowSearch === true || allowInput === true) {\n        //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0; //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n      }\n\n      return true;\n    },\n\n    /** select 搜索时的事件，用于动态添加options */\n    handleSearchSelect: function handleSearchSelect(value) {\n      var _this$originColumn4 = this.originColumn,\n          allowSearch = _this$originColumn4.allowSearch,\n          allowInput = _this$originColumn4.allowInput,\n          options = _this$originColumn4.options;\n\n      if (allowSearch !== true && allowInput === true) {\n        // 是否找到了对应的项，找不到则添加这一项\n        var flag = false;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = options[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var option = _step2.value;\n\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              flag = true;\n              break;\n            }\n          } // !!value ：不添加空值\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (!flag && !!value) {\n          // searchAdd 是否是通过搜索添加的\n          options.push({\n            title: value,\n            value: value,\n            searchAdd: true\n          });\n        }\n      }\n    }\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    aopEvents: {\n      editActived: function editActived(event) {\n        return dispatchEvent(event, 'ant-select');\n      }\n    },\n    translate: {\n      enabled: true\n    },\n    getValue: function getValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(',');\n      } else {\n        return value;\n      }\n    },\n    setValue: function setValue(value) {\n      var col = this.column.own,\n          $table = this.params.$table; // 判断是否是多选\n\n      if ((col.props || {})['mode'] === 'multiple') {\n        $table.$set(col.props, 'maxTagCount', 1);\n      }\n\n      if (value != null && value !== '') {\n        if (typeof value === 'string') {\n          return value === '' ? [] : value.split(',');\n        }\n\n        return value;\n      } else {\n        return undefined;\n      }\n    }\n  }\n};",{"version":3,"sources":["JVxeSelectCell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-select\n    ref=\"select\"\n    :value=\"innerValue\"\n    allowClear\n    :filterOption=\"handleSelectFilterOption\"\n    v-bind=\"selectProps\"\n    style=\"width: 100%;\"\n    @blur=\"handleBlur\"\n    @change=\"handleChangeCommon\"\n    @search=\"handleSearchSelect\"\n  >\n\n    <template v-for=\"option of originColumn.options\">\n      <a-select-option :key=\"option.value\" :value=\"option.value\" :disabled=\"option.disabled\">\n        <span>{{option.text || option.label || option.title|| option.value}}</span>\n      </a-select-option>\n    </template>\n\n  </a-select>\n</template>\n\n<script>\n  import JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n  import { JVXETypes } from '@comp/jeecg/JVxeTable/index'\n\n  export default {\n    name: 'JVxeSelectCell',\n    mixins: [JVxeCellMixins],\n    computed: {\n      selectProps() {\n        let props = {...this.cellProps}\n        // 判断select是否允许输入\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowInput === true || allowSearch === true) {\n          props['showSearch'] = true\n        }\n        return props\n      },\n    },\n    created() {\n      let multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi]\n      let search = [JVXETypes.selectSearch, JVXETypes.sel_search]\n      if (multiple.includes(this.$type)) {\n        // 处理多选\n        let props = this.originColumn.props || {}\n        props['mode'] = 'multiple'\n        props['maxTagCount'] = 1\n        this.$set(this.originColumn, 'props', props)\n      } else if (search.includes(this.$type)) {\n        // 处理搜索\n        this.$set(this.originColumn, 'allowSearch', true)\n      }\n    },\n    methods: {\n\n      /** 处理blur失去焦点事件 */\n      handleBlur(value) {\n        let {allowInput, options} = this.originColumn\n\n        if (allowInput === true) {\n          // 删除无用的因搜索（用户输入）而创建的项\n          if (typeof value === 'string') {\n            let indexes = []\n            options.forEach((option, index) => {\n              if (option.value.toLocaleString() === value.toLocaleString()) {\n                delete option.searchAdd\n              } else if (option.searchAdd === true) {\n                indexes.push(index)\n              }\n            })\n            // 翻转删除数组中的项\n            for (let index of indexes.reverse()) {\n              options.splice(index, 1)\n            }\n          }\n        }\n\n        this.handleBlurCommon(value)\n      },\n\n      /** 用于搜索下拉框中的内容 */\n      handleSelectFilterOption(input, option) {\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowSearch === true || allowInput === true) {\n          //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n          return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        }\n        return true\n      },\n\n      /** select 搜索时的事件，用于动态添加options */\n      handleSearchSelect(value) {\n        let {allowSearch, allowInput, options} = this.originColumn\n\n        if (allowSearch !== true && allowInput === true) {\n          // 是否找到了对应的项，找不到则添加这一项\n          let flag = false\n          for (let option of options) {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              flag = true\n              break\n            }\n          }\n          // !!value ：不添加空值\n          if (!flag && !!value) {\n            // searchAdd 是否是通过搜索添加的\n            options.push({title: value, value: value, searchAdd: true})\n          }\n\n        }\n      },\n\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      aopEvents: {\n        editActived: event => dispatchEvent(event, 'ant-select'),\n      },\n      translate: {enabled: true},\n      getValue(value) {\n        if (Array.isArray(value)) {\n          return value.join(',')\n        } else {\n          return value\n        }\n      },\n      setValue(value) {\n        let {column: {own: col}, params: {$table}} = this\n        // 判断是否是多选\n        if ((col.props || {})['mode'] === 'multiple') {\n          $table.$set(col.props, 'maxTagCount', 1)\n        }\n        if (value != null && value !== '') {\n          if (typeof value === 'string') {\n            return value === '' ? [] : value.split(',')\n          }\n          return value\n        } else {\n          return undefined\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/jeecg/JVxeTable/components/cells"}]}