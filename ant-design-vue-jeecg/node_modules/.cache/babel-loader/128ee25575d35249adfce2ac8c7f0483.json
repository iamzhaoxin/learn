{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JPopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JPopup.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JPopupOnlReport from './modal/JPopupOnlReport';\nexport default {\n  name: 'JPopup',\n  components: {\n    JPopupOnlReport: JPopupOnlReport\n  },\n  props: {\n    code: {\n      type: String,\n      default: '',\n      required: false\n    },\n    field: {\n      type: String,\n      default: '',\n      required: false\n    },\n    orgFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n    destFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n    width: {\n      type: Number,\n      default: 1200,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: '请选择',\n      required: false\n    },\n    value: {\n      type: String,\n      required: false\n    },\n    triggerChange: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    multi: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    //popup动态参数 支持系统变量语法\n    param: {\n      type: Object,\n      required: false,\n      default: function _default() {}\n    },\n\n    /** 分组ID，用于将多个popup的请求合并到一起，不传不分组 */\n    groupId: String\n  },\n  data: function data() {\n    return {\n      showText: '',\n      title: '',\n      avalid: true\n    };\n  },\n  computed: {\n    uniqGroupId: function uniqGroupId() {\n      if (this.groupId) {\n        var groupId = this.groupId,\n            code = this.code,\n            field = this.field,\n            orgFields = this.orgFields,\n            destFields = this.destFields;\n        return \"\".concat(groupId, \"_\").concat(code, \"_\").concat(field, \"_\").concat(orgFields, \"_\").concat(destFields);\n      }\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          this.showText = '';\n        } else {\n          this.showText = val;\n        }\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    if (!this.orgFields || !this.destFields || !this.code) {\n      this.$message.error('popup参数未正确配置!');\n      this.avalid = false;\n    }\n\n    if (this.destFields.split(',').length != this.orgFields.split(',').length) {\n      this.$message.error('popup参数未正确配置,原始值和目标值数量不一致!');\n      this.avalid = false;\n    }\n  },\n  methods: {\n    openModal: function openModal() {\n      if (this.disabled === false) {\n        this.$refs.jPopupOnlReport.show();\n      }\n    },\n    handleEmpty: function handleEmpty() {\n      this.showText = '';\n      var destFieldsArr = this.destFields.split(',');\n\n      if (destFieldsArr.length === 0) {\n        return;\n      }\n\n      var res = {};\n\n      for (var i = 0; i < destFieldsArr.length; i++) {\n        res[destFieldsArr[i]] = '';\n      }\n\n      if (this.triggerChange) {\n        this.$emit('callback', res);\n      } else {\n        this.$emit('input', '', res);\n      }\n    },\n    callBack: function callBack(rows) {\n      // update--begin--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n      var orgFieldsArr = this.orgFields.split(',');\n      var destFieldsArr = this.destFields.split(',');\n      var resetText = false;\n\n      if (this.field && this.field.length > 0) {\n        this.showText = '';\n        resetText = true;\n      }\n\n      var res = {};\n\n      if (orgFieldsArr.length > 0) {\n        for (var i = 0; i < orgFieldsArr.length; i++) {\n          var tempDestArr = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var rw = _step.value;\n              var val = rw[orgFieldsArr[i]];\n\n              if (!val) {\n                val = \"\";\n              }\n\n              tempDestArr.push(val);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          res[destFieldsArr[i]] = tempDestArr.join(\",\");\n        }\n\n        if (resetText === true) {\n          var tempText = [];\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = rows[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _rw = _step2.value;\n\n              var _val = _rw[orgFieldsArr[destFieldsArr.indexOf(this.field)]];\n\n              if (!_val) {\n                _val = \"\";\n              }\n\n              tempText.push(_val);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          this.showText = tempText.join(\",\");\n        } // update--end--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n\n      }\n\n      if (this.triggerChange) {\n        //v-dec时即triggerChange为true时 将整个对象给form页面 让他自己setFieldsValue\n        this.$emit('callback', res);\n      } else {\n        //v-model时 需要传一个参数field 表示当前这个字段 从而根据这个字段的顺序找到原始值\n        // this.$emit(\"input\",row[orgFieldsArr[destFieldsArr.indexOf(this.field)]])\n        this.$emit('input', this.showText, res);\n      }\n    }\n  }\n};",{"version":3,"sources":["JPopup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"components-input-demo-presuffix\" v-if=\"avalid\">\n    <!---->\n    <a-input @click=\"openModal\" :placeholder=\"placeholder\" v-model=\"showText\" readOnly :disabled=\"disabled\">\n      <a-icon slot=\"prefix\" type=\"cluster\" :title=\"title\"/>\n      <a-icon v-if=\"showText\" slot=\"suffix\" type=\"close-circle\" @click=\"handleEmpty\" title=\"清空\"/>\n    </a-input>\n\n    <j-popup-onl-report\n      ref=\"jPopupOnlReport\"\n      :code=\"code\"\n      :multi=\"multi\"\n      :groupId=\"uniqGroupId\"\n      :param=\"param\"\n      @ok=\"callBack\"\n    />\n\n  </div>\n</template>\n\n<script>\n  import JPopupOnlReport from './modal/JPopupOnlReport'\n\n  export default {\n    name: 'JPopup',\n    components: {\n      JPopupOnlReport\n    },\n    props: {\n      code: {\n        type: String,\n        default: '',\n        required: false\n      },\n      field: {\n        type: String,\n        default: '',\n        required: false\n      },\n      orgFields: {\n        type: String,\n        default: '',\n        required: false\n      },\n      destFields: {\n        type: String,\n        default: '',\n        required: false\n      },\n      width: {\n        type: Number,\n        default: 1200,\n        required: false\n      },\n      placeholder: {\n        type: String,\n        default: '请选择',\n        required: false\n      },\n      value: {\n        type: String,\n        required: false\n      },\n      triggerChange: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      disabled: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      multi: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      //popup动态参数 支持系统变量语法\n      param:{\n        type: Object,\n        required: false,\n        default: ()=>{}\n      },\n      /** 分组ID，用于将多个popup的请求合并到一起，不传不分组 */\n      groupId: String\n\n    },\n    data() {\n      return {\n        showText: '',\n        title: '',\n        avalid: true\n      }\n    },\n    computed: {\n      uniqGroupId() {\n        if (this.groupId) {\n          let { groupId, code, field, orgFields, destFields } = this\n          return `${groupId}_${code}_${field}_${orgFields}_${destFields}`\n        }\n      }\n    },\n    watch: {\n      value: {\n        immediate: true,\n        handler: function(val) {\n          if (!val) {\n            this.showText = ''\n          } else {\n            this.showText = val\n          }\n        }\n      }\n    },\n    created() {\n    },\n    mounted() {\n      if (!this.orgFields || !this.destFields || !this.code) {\n        this.$message.error('popup参数未正确配置!')\n        this.avalid = false\n      }\n      if (this.destFields.split(',').length != this.orgFields.split(',').length) {\n        this.$message.error('popup参数未正确配置,原始值和目标值数量不一致!')\n        this.avalid = false\n      }\n    },\n    methods: {\n      openModal() {\n        if (this.disabled === false) {\n          this.$refs.jPopupOnlReport.show()\n        }\n      },\n      handleEmpty() {\n        this.showText = ''\n        let destFieldsArr = this.destFields.split(',')\n        if (destFieldsArr.length === 0) {\n          return\n        }\n        let res = {}\n        for (let i = 0; i < destFieldsArr.length; i++) {\n          res[destFieldsArr[i]] = ''\n        }\n        if (this.triggerChange) {\n          this.$emit('callback', res)\n        } else {\n          this.$emit('input', '', res)\n        }\n      },\n      callBack(rows) {\n        // update--begin--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n        let orgFieldsArr = this.orgFields.split(',')\n        let destFieldsArr = this.destFields.split(',')\n        let resetText = false\n        if (this.field && this.field.length > 0) {\n          this.showText = ''\n          resetText = true\n        }\n        let res = {}\n        if (orgFieldsArr.length > 0) {\n          for (let i = 0; i < orgFieldsArr.length; i++) {\n            let tempDestArr = []\n            for(let rw of rows){\n              let val = rw[orgFieldsArr[i]]\n              if(!val){\n                val = \"\"\n              }\n              tempDestArr.push(val)\n            }\n            res[destFieldsArr[i]] = tempDestArr.join(\",\")\n          }\n          if (resetText === true) {\n            let tempText = []\n            for(let rw of rows){\n              let val = rw[orgFieldsArr[destFieldsArr.indexOf(this.field)]]\n              if(!val){\n                val = \"\"\n              }\n              tempText.push(val)\n            }\n            this.showText = tempText.join(\",\")\n          }\n          // update--end--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n        }\n        if (this.triggerChange) {\n          //v-dec时即triggerChange为true时 将整个对象给form页面 让他自己setFieldsValue\n          this.$emit('callback', res)\n        } else {\n          //v-model时 需要传一个参数field 表示当前这个字段 从而根据这个字段的顺序找到原始值\n          // this.$emit(\"input\",row[orgFieldsArr[destFieldsArr.indexOf(this.field)]])\n          this.$emit('input', this.showText, res)\n        }\n      }\n    }\n  }\n</script>\n<style scoped>\n  .components-input-demo-presuffix .anticon-close-circle {\n    cursor: pointer;\n    color: #ccc;\n    transition: color 0.3s;\n    font-size: 12px;\n  }\n\n  .components-input-demo-presuffix .anticon-close-circle:hover {\n    color: #f5222d;\n  }\n\n  .components-input-demo-presuffix .anticon-close-circle:active {\n    color: #666;\n  }\n</style>"],"sourceRoot":"src/components/jeecg"}]}