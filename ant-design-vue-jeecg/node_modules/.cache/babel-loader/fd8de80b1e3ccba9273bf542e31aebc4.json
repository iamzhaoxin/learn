{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizQueryItem.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectBizComponent\\JSelectBizQueryItem.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["import _mergeJSXProps2 from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'JSelectBizQueryItem',\n  props: {\n    queryParam: Object,\n    queryConfig: Array\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {\n    renderQueryItem: function renderQueryItem() {\n      var _this = this;\n\n      var h = this.$createElement;\n      return this.queryConfig.map(function (queryItem) {\n        var key = queryItem.key,\n            label = queryItem.label,\n            placeholder = queryItem.placeholder,\n            dictCode = queryItem.dictCode,\n            props = queryItem.props,\n            customRender = queryItem.customRender;\n        var options = {\n          props: {},\n          on: {\n            pressEnter: function pressEnter() {\n              return _this.$emit('pressEnter');\n            }\n          }\n        };\n\n        if (props != null) {\n          Object.assign(options.props, props);\n        }\n\n        if (placeholder === undefined) {\n          if (dictCode) {\n            options.props['placeholder'] = \"\\u8BF7\\u9009\\u62E9\".concat(label);\n          } else {\n            options.props['placeholder'] = \"\\u8BF7\\u8F93\\u5165\".concat(label);\n          }\n        } else {\n          options.props['placeholder'] = placeholder;\n        }\n\n        var input;\n\n        if (typeof customRender === 'function') {\n          input = customRender.call(_this, {\n            key: key,\n            options: options,\n            queryParam: _this.queryParam\n          });\n        } else if (dictCode) {\n          input = h(\"j-dict-select-tag\", _mergeJSXProps([{}, options, {\n            \"attrs\": {\n              \"dictCode\": dictCode\n            },\n            \"style\": \"width:180px;\",\n            \"model\": {\n              value: _this.queryParam[key],\n              callback: function callback($$v) {\n                _this.$set(_this.queryParam, key, $$v);\n              }\n            }\n          }]));\n        } else {\n          input = h(\"a-input\", _mergeJSXProps2([{}, options, {\n            \"model\": {\n              value: _this.queryParam[key],\n              callback: function callback($$v) {\n                _this.$set(_this.queryParam, key, $$v);\n              }\n            }\n          }]));\n        }\n\n        return h(\"a-form-item\", {\n          \"key\": key,\n          \"attrs\": {\n            \"label\": label\n          }\n        }, [input]);\n      });\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"span\", [this.renderQueryItem()]);\n  }\n};",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/components/jeecgbiz/JSelectBizComponent/JSelectBizQueryItem.js"],"names":["name","props","queryParam","Object","queryConfig","Array","data","methods","renderQueryItem","map","queryItem","key","label","placeholder","dictCode","customRender","options","on","pressEnter","$emit","assign","undefined","input","call","render"],"mappings":";;AAAA,eAAe;AACbA,EAAAA,IAAI,EAAE,qBADO;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEC,MADP;AAELC,IAAAA,WAAW,EAAEC;AAFR,GAFM;AAMbC,EAAAA,IANa,kBAMN;AACL,WAAO,EAAP;AACD,GARY;AASbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,6BACW;AAAA;;AAAA;AAChB,aAAO,KAAKJ,WAAL,CAAiBK,GAAjB,CAAqB,UAAAC,SAAS,EAAI;AAAA,YAChCC,GADgC,GAC0BD,SAD1B,CAChCC,GADgC;AAAA,YAC3BC,KAD2B,GAC0BF,SAD1B,CAC3BE,KAD2B;AAAA,YACpBC,WADoB,GAC0BH,SAD1B,CACpBG,WADoB;AAAA,YACPC,QADO,GAC0BJ,SAD1B,CACPI,QADO;AAAA,YACGb,KADH,GAC0BS,SAD1B,CACGT,KADH;AAAA,YACUc,YADV,GAC0BL,SAD1B,CACUK,YADV;AAEvC,YAAMC,OAAO,GAAG;AACdf,UAAAA,KAAK,EAAE,EADO;AAEdgB,UAAAA,EAAE,EAAE;AACFC,YAAAA,UAAU,EAAE;AAAA,qBAAM,KAAI,CAACC,KAAL,CAAW,YAAX,CAAN;AAAA;AADV;AAFU,SAAhB;;AAMA,YAAIlB,KAAK,IAAI,IAAb,EAAmB;AACjBE,UAAAA,MAAM,CAACiB,MAAP,CAAcJ,OAAO,CAACf,KAAtB,EAA6BA,KAA7B;AACD;;AACD,YAAIY,WAAW,KAAKQ,SAApB,EAA+B;AAC7B,cAAIP,QAAJ,EAAc;AACZE,YAAAA,OAAO,CAACf,KAAR,CAAc,aAAd,gCAAqCW,KAArC;AACD,WAFD,MAEO;AACLI,YAAAA,OAAO,CAACf,KAAR,CAAc,aAAd,gCAAqCW,KAArC;AACD;AACF,SAND,MAMO;AACLI,UAAAA,OAAO,CAACf,KAAR,CAAc,aAAd,IAA+BY,WAA/B;AACD;;AAED,YAAIS,KAAJ;;AACA,YAAI,OAAOP,YAAP,KAAwB,UAA5B,EAAwC;AACtCO,UAAAA,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAkB,KAAlB,EAAwB;AAACZ,YAAAA,GAAG,EAAHA,GAAD;AAAMK,YAAAA,OAAO,EAAPA,OAAN;AAAed,YAAAA,UAAU,EAAE,KAAI,CAACA;AAAhC,WAAxB,CAAR;AACD,SAFD,MAEO,IAAIY,QAAJ,EAAc;AACnBQ,UAAAA,KAAK,8CAA0BN,OAA1B;AAAA;AAAA,0BAA2EF;AAA3E;AAAA,qBAA2F,cAA3F;AAAA;AAAA,qBAA2C,KAAI,CAACZ,UAAL,CAAgBS,GAAhB,CAA3C;AAAA;AAAA,2BAA2C,KAAI,CAACT,UAAhD,EAA2DS,GAA3D;AAAA;AAAA;AAAA,cAAL;AACD,SAFM,MAEA;AACLW,UAAAA,KAAK,qCAAgBN,OAAhB;AAAA;AAAA,qBAAiC,KAAI,CAACd,UAAL,CAAgBS,GAAhB,CAAjC;AAAA;AAAA,2BAAiC,KAAI,CAACT,UAAtC,EAAiDS,GAAjD;AAAA;AAAA;AAAA,cAAL;AACD;;AACD;AAAA,iBAAyBA,GAAzB;AAAA;AAAA,qBAAqCC;AAArC;AAAA,YAA6CU,KAA7C;AACD,OA9BM,CAAP;AA+BD;AAjCM,GATI;AA4CbE,EAAAA,MA5Ca,oBA4CJ;AAAA;AACP,sBAAc,KAAKhB,eAAL,EAAd;AACD;AA9CY,CAAf","sourcesContent":["export default {\n  name: 'JSelectBizQueryItem',\n  props: {\n    queryParam: Object,\n    queryConfig: Array,\n  },\n  data() {\n    return {}\n  },\n  methods: {\n    renderQueryItem() {\n      return this.queryConfig.map(queryItem => {\n        const {key, label, placeholder, dictCode, props, customRender} = queryItem\n        const options = {\n          props: {},\n          on: {\n            pressEnter: () => this.$emit('pressEnter'),\n          }\n        }\n        if (props != null) {\n          Object.assign(options.props, props)\n        }\n        if (placeholder === undefined) {\n          if (dictCode) {\n            options.props['placeholder'] = `请选择${label}`\n          } else {\n            options.props['placeholder'] = `请输入${label}`\n          }\n        } else {\n          options.props['placeholder'] = placeholder\n        }\n\n        let input\n        if (typeof customRender === 'function') {\n          input = customRender.call(this, {key, options, queryParam: this.queryParam})\n        } else if (dictCode) {\n          input = <j-dict-select-tag {...options} vModel={this.queryParam[key]} dictCode={dictCode} style=\"width:180px;\"/>\n        } else {\n          input = <a-input {...options} vModel={this.queryParam[key]}/>\n        }\n        return <a-form-item key={key} label={label}>{input}</a-form-item>\n      })\n    },\n  },\n  render() {\n    return <span>{this.renderQueryItem()}</span>\n  },\n}"]}]}