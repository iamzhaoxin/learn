{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectMultiUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectMultiUser.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JDate from '@comp/jeecg/JDate';\nimport JSelectBizComponent from './JSelectBizComponent';\nexport default {\n  name: 'JSelectMultiUser',\n  components: {\n    JDate: JDate,\n    JSelectBizComponent: JSelectBizComponent\n  },\n  props: {\n    value: null,\n    // any type\n    queryConfig: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var h = this.$createElement;\n    return {\n      url: {\n        list: '/sys/user/list'\n      },\n      columns: [{\n        title: '姓名',\n        align: 'center',\n        width: '25%',\n        widthRight: '70%',\n        dataIndex: 'realname'\n      }, {\n        title: '账号',\n        align: 'center',\n        width: '25%',\n        dataIndex: 'username'\n      }, {\n        title: '电话',\n        align: 'center',\n        width: '20%',\n        dataIndex: 'phone'\n      }, {\n        title: '出生日期',\n        align: 'center',\n        width: '20%',\n        dataIndex: 'birthday'\n      }],\n      // 定义在这里的参数都是可以在外部传递覆盖的，可以更灵活的定制化使用的组件\n      default: {\n        name: '用户',\n        width: 1200,\n        displayKey: 'realname',\n        returnKeys: ['id', 'username'],\n        queryParamText: '账号'\n      },\n      // 多条件查询配置\n      queryConfigDefault: [{\n        key: 'sex',\n        label: '性别',\n        // 如果包含 dictCode，那么就会显示成下拉框\n        dictCode: 'sex'\n      }, {\n        key: 'birthday',\n        label: '生日',\n        placeholder: '请选择出生日期',\n        // 如果想要使用局部注册的组件，就必须要使用箭头函数\n        customRender: function customRender(_ref) {\n          var key = _ref.key,\n              queryParam = _ref.queryParam,\n              options = _ref.options;\n          return h(\"j-date\", _mergeJSXProps([{}, options, {\n            \"style\": \"width:180px;\",\n            \"model\": {\n              value: queryParam[key],\n              callback: function callback($$v) {\n                _this.$set(queryParam, key, $$v);\n              }\n            }\n          }]));\n        }\n      }]\n    };\n  },\n  computed: {\n    attrs: function attrs() {\n      return Object.assign(this.default, this.$attrs, {\n        queryConfig: this.queryConfigDefault.concat(this.queryConfig)\n      });\n    }\n  }\n};",{"version":3,"sources":["JSelectMultiUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,OAAA,KAAA,MAAA,mBAAA;AACA,OAAA,mBAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA,KAAA;AAAA,IAAA,mBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,IADA;AACA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAFA,GAHA;AAUA,EAAA,IAVA,kBAUA;AAAA;;AAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA;AAEA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,UAAA,EAAA,KAAA;AAAA,QAAA,SAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,SAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,SAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,SAAA,EAAA;AAAA,OAJA,CAFA;AAQA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,IAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA,IAFA;AAGA,QAAA,UAAA,EAAA,UAHA;AAIA,QAAA,UAAA,EAAA,CAAA,IAAA,EAAA,UAAA,CAJA;AAKA,QAAA,cAAA,EAAA;AALA,OATA;AAgBA;AACA,MAAA,kBAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,IAFA;AAGA;AACA,QAAA,QAAA,EAAA;AAJA,OADA,EAOA;AACA,QAAA,GAAA,EAAA,UADA;AAEA,QAAA,KAAA,EAAA,IAFA;AAGA,QAAA,WAAA,EAAA,SAHA;AAIA;AACA,QAAA,YAAA,EAAA,4BAAA;AAAA,cAAA,GAAA,QAAA,GAAA;AAAA,cAAA,UAAA,QAAA,UAAA;AAAA,cAAA,OAAA,QAAA,OAAA;AACA,iDAAA,OAAA;AAAA,qBAAA,cAAA;AAAA;AAAA,qBAAA,UAAA,CAAA,GAAA,CAAA;AAAA;AAAA,2BAAA,UAAA,EAAA,GAAA;AAAA;AAAA;AAAA;AACA;AAPA,OAPA;AAjBA,KAAA;AAmCA,GA9CA;AA+CA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,KAAA,OAAA,EAAA,KAAA,MAAA,EAAA;AACA,QAAA,WAAA,EAAA,KAAA,kBAAA,CAAA,MAAA,CAAA,KAAA,WAAA;AADA,OAAA,CAAA;AAGA;AALA;AA/CA,CAAA","sourcesContent":["<template>\n  <!-- 定义在这里的参数都是不可在外部覆盖的，防止出现问题 -->\n  <j-select-biz-component\n    :value=\"value\"\n    :ellipsisLength=\"25\"\n    :listUrl=\"url.list\"\n    :columns=\"columns\"\n    v-on=\"$listeners\"\n    v-bind=\"attrs\"\n  />\n</template>\n\n<script>\n  import JDate from '@comp/jeecg/JDate'\n  import JSelectBizComponent from './JSelectBizComponent'\n\n  export default {\n    name: 'JSelectMultiUser',\n    components: {JDate, JSelectBizComponent},\n    props: {\n      value: null, // any type\n      queryConfig: {\n        type: Array,\n        default: () => []\n      },\n    },\n    data() {\n      return {\n        url: { list: '/sys/user/list' },\n        columns: [\n          { title: '姓名', align: 'center', width: '25%', widthRight: '70%', dataIndex: 'realname' },\n          { title: '账号', align: 'center', width: '25%', dataIndex: 'username' },\n          { title: '电话', align: 'center', width: '20%', dataIndex: 'phone' },\n          { title: '出生日期', align: 'center', width: '20%', dataIndex: 'birthday' }\n        ],\n        // 定义在这里的参数都是可以在外部传递覆盖的，可以更灵活的定制化使用的组件\n        default: {\n          name: '用户',\n          width: 1200,\n          displayKey: 'realname',\n          returnKeys: ['id', 'username'],\n          queryParamText: '账号',\n        },\n        // 多条件查询配置\n        queryConfigDefault: [\n          {\n            key: 'sex',\n            label: '性别',\n            // 如果包含 dictCode，那么就会显示成下拉框\n            dictCode: 'sex',\n          },\n          {\n            key: 'birthday',\n            label: '生日',\n            placeholder: '请选择出生日期',\n            // 如果想要使用局部注册的组件，就必须要使用箭头函数\n            customRender: ({key, queryParam, options}) => {\n              return <j-date {...options} vModel={queryParam[key]} style=\"width:180px;\"/>\n            },\n          },\n        ],\n      }\n    },\n    computed: {\n      attrs() {\n        return Object.assign(this.default, this.$attrs, {\n          queryConfig: this.queryConfigDefault.concat(this.queryConfig)\n        })\n      }\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped></style>"],"sourceRoot":"src/components/jeecgbiz"}]}