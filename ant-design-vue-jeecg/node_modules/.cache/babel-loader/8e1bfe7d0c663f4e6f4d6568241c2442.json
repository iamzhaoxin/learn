{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\ReloadEffect.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\ReloadEffect.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["import '../../less/reload-effect.less';\nimport { randomString } from '@/utils/util'; // 修改数据特效\n\nexport default {\n  props: {\n    vNode: null,\n    // 是否启用特效\n    effect: Boolean\n  },\n  data: function data() {\n    return {\n      // vNode: null,\n      innerEffect: false,\n      // 应付同时多个特效\n      effectIdx: 0,\n      effectList: []\n    };\n  },\n  watch: {\n    vNode: {\n      deep: true,\n      immediate: true,\n      handler: function handler(vNode, old) {\n        this.innerEffect = this.effect;\n\n        if (this.innerEffect && old != null) {\n          var topLayer = this.renderSpan(old, 'top');\n          this.effectList.push(topLayer);\n        }\n      }\n    }\n  },\n  methods: {\n    // 条件渲染内容 span\n    renderVNode: function renderVNode() {\n      var _this = this;\n\n      if (this.vNode == null) {\n        return null;\n      }\n\n      var bottom = this.renderSpan(this.vNode, 'bottom'); // 启用了特效，并且有旧数据，就渲染特效顶层\n\n      if (this.innerEffect && this.effectList.length > 0) {\n        this.$emit('effect-begin'); // 1.4s 以后关闭特效\n\n        window.setTimeout(function () {\n          var item = _this.effectList[_this.effectIdx];\n\n          if (item && item.elm) {\n            // 特效结束后，展示先把 display 设为 none，而不是直接删掉该元素，\n            // 目的是为了防止页面重新渲染，导致动画重置\n            item.elm.style.display = 'none';\n          } // 当所有的层级动画都结束时，再删掉所有元素\n\n\n          if (++_this.effectIdx === _this.effectList.length) {\n            _this.innerEffect = false;\n            _this.effectIdx = 0;\n            _this.effectList = [];\n\n            _this.$emit('effect-end');\n          }\n        }, 1400);\n        return [this.effectList, bottom];\n      } else {\n        return bottom;\n      }\n    },\n    // 渲染内容 span\n    renderSpan: function renderSpan(vNode, layer) {\n      var options = {\n        key: layer + this.effectIdx + randomString(6),\n        class: ['j-vxe-reload-effect-span', \"layer-\".concat(layer)],\n        style: {}\n      };\n\n      if (layer === 'top') {\n        // 最新渲染的在下面\n        options.style['z-index'] = 9999 - this.effectIdx;\n      }\n\n      return this.$createElement('span', options, [vNode]);\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      class: ['j-vxe-reload-effect-box']\n    }, [this.renderVNode()]);\n  }\n};",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/components/jeecg/JVxeTable/components/cells/ReloadEffect.js"],"names":["randomString","props","vNode","effect","Boolean","data","innerEffect","effectIdx","effectList","watch","deep","immediate","handler","old","topLayer","renderSpan","push","methods","renderVNode","bottom","length","$emit","window","setTimeout","item","elm","style","display","layer","options","key","class","$createElement","render","h"],"mappings":"AAAA,OAAO,+BAAP;AACA,SAASA,YAAT,QAA6B,cAA7B,C,CAEA;;AACA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,IADF;AAEL;AACAC,IAAAA,MAAM,EAAEC;AAHH,GADM;AAMbC,EAAAA,IANa,kBAMN;AACL,WAAO;AACL;AACAC,MAAAA,WAAW,EAAE,KAFR;AAGL;AACAC,MAAAA,SAAS,EAAE,CAJN;AAKLC,MAAAA,UAAU,EAAE;AALP,KAAP;AAOD,GAdY;AAebC,EAAAA,KAAK,EAAE;AACLP,IAAAA,KAAK,EAAE;AACLQ,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,OAHK,mBAGGV,KAHH,EAGUW,GAHV,EAGe;AAClB,aAAKP,WAAL,GAAmB,KAAKH,MAAxB;;AACA,YAAI,KAAKG,WAAL,IAAoBO,GAAG,IAAI,IAA/B,EAAqC;AACnC,cAAIC,QAAQ,GAAG,KAAKC,UAAL,CAAgBF,GAAhB,EAAqB,KAArB,CAAf;AACA,eAAKL,UAAL,CAAgBQ,IAAhB,CAAqBF,QAArB;AACD;AACF;AATI;AADF,GAfM;AA4BbG,EAAAA,OAAO,EAAE;AAEP;AACAC,IAAAA,WAHO,yBAGO;AAAA;;AACZ,UAAI,KAAKhB,KAAL,IAAc,IAAlB,EAAwB;AACtB,eAAO,IAAP;AACD;;AACD,UAAIiB,MAAM,GAAG,KAAKJ,UAAL,CAAgB,KAAKb,KAArB,EAA4B,QAA5B,CAAb,CAJY,CAKZ;;AACA,UAAI,KAAKI,WAAL,IAAoB,KAAKE,UAAL,CAAgBY,MAAhB,GAAyB,CAAjD,EAAoD;AAClD,aAAKC,KAAL,CAAW,cAAX,EADkD,CAElD;;AACAC,QAAAA,MAAM,CAACC,UAAP,CAAkB,YAAM;AACtB,cAAIC,IAAI,GAAG,KAAI,CAAChB,UAAL,CAAgB,KAAI,CAACD,SAArB,CAAX;;AACA,cAAIiB,IAAI,IAAIA,IAAI,CAACC,GAAjB,EAAsB;AACpB;AACA;AACAD,YAAAA,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACD,WANqB,CAOtB;;;AACA,cAAI,EAAE,KAAI,CAACpB,SAAP,KAAqB,KAAI,CAACC,UAAL,CAAgBY,MAAzC,EAAiD;AAC/C,YAAA,KAAI,CAACd,WAAL,GAAmB,KAAnB;AACA,YAAA,KAAI,CAACC,SAAL,GAAiB,CAAjB;AACA,YAAA,KAAI,CAACC,UAAL,GAAkB,EAAlB;;AACA,YAAA,KAAI,CAACa,KAAL,CAAW,YAAX;AACD;AACF,SAdD,EAcG,IAdH;AAeA,eAAO,CAAC,KAAKb,UAAN,EAAkBW,MAAlB,CAAP;AACD,OAnBD,MAmBO;AACL,eAAOA,MAAP;AACD;AACF,KA/BM;AAgCP;AACAJ,IAAAA,UAjCO,sBAiCIb,KAjCJ,EAiCW0B,KAjCX,EAiCkB;AACvB,UAAIC,OAAO,GAAG;AACZC,QAAAA,GAAG,EAAEF,KAAK,GAAG,KAAKrB,SAAb,GAAyBP,YAAY,CAAC,CAAD,CAD9B;AAEZ+B,QAAAA,KAAK,EAAE,CAAC,0BAAD,kBAAsCH,KAAtC,EAFK;AAGZF,QAAAA,KAAK,EAAE;AAHK,OAAd;;AAKA,UAAIE,KAAK,KAAK,KAAd,EAAqB;AACnB;AACAC,QAAAA,OAAO,CAACH,KAAR,CAAc,SAAd,IAA4B,OAAO,KAAKnB,SAAxC;AACD;;AACD,aAAO,KAAKyB,cAAL,CAAoB,MAApB,EAA4BH,OAA5B,EAAqC,CAAC3B,KAAD,CAArC,CAAP;AACD;AA5CM,GA5BI;AA0Eb+B,EAAAA,MA1Ea,kBA0ENC,CA1EM,EA0EH;AACR,WAAOA,CAAC,CAAC,KAAD,EAAQ;AACdH,MAAAA,KAAK,EAAE,CAAC,yBAAD;AADO,KAAR,EAEL,CAAC,KAAKb,WAAL,EAAD,CAFK,CAAR;AAGD;AA9EY,CAAf","sourcesContent":["import '../../less/reload-effect.less'\nimport { randomString } from '@/utils/util'\n\n// 修改数据特效\nexport default {\n  props: {\n    vNode: null,\n    // 是否启用特效\n    effect: Boolean,\n  },\n  data() {\n    return {\n      // vNode: null,\n      innerEffect: false,\n      // 应付同时多个特效\n      effectIdx: 0,\n      effectList: [],\n    }\n  },\n  watch: {\n    vNode: {\n      deep: true,\n      immediate: true,\n      handler(vNode, old) {\n        this.innerEffect = this.effect\n        if (this.innerEffect && old != null) {\n          let topLayer = this.renderSpan(old, 'top')\n          this.effectList.push(topLayer)\n        }\n      },\n    },\n  },\n  methods: {\n\n    // 条件渲染内容 span\n    renderVNode() {\n      if (this.vNode == null) {\n        return null\n      }\n      let bottom = this.renderSpan(this.vNode, 'bottom')\n      // 启用了特效，并且有旧数据，就渲染特效顶层\n      if (this.innerEffect && this.effectList.length > 0) {\n        this.$emit('effect-begin')\n        // 1.4s 以后关闭特效\n        window.setTimeout(() => {\n          let item = this.effectList[this.effectIdx]\n          if (item && item.elm) {\n            // 特效结束后，展示先把 display 设为 none，而不是直接删掉该元素，\n            // 目的是为了防止页面重新渲染，导致动画重置\n            item.elm.style.display = 'none'\n          }\n          // 当所有的层级动画都结束时，再删掉所有元素\n          if (++this.effectIdx === this.effectList.length) {\n            this.innerEffect = false\n            this.effectIdx = 0\n            this.effectList = []\n            this.$emit('effect-end')\n          }\n        }, 1400)\n        return [this.effectList, bottom]\n      } else {\n        return bottom\n      }\n    },\n    // 渲染内容 span\n    renderSpan(vNode, layer) {\n      let options = {\n        key: layer + this.effectIdx + randomString(6),\n        class: ['j-vxe-reload-effect-span', `layer-${layer}`],\n        style: {},\n      }\n      if (layer === 'top') {\n        // 最新渲染的在下面\n        options.style['z-index'] = (9999 - this.effectIdx)\n      }\n      return this.$createElement('span', options, [vNode])\n    },\n  },\n  render(h) {\n    return h('div', {\n      class: ['j-vxe-reload-effect-box'],\n    }, [this.renderVNode()])\n  },\n}"]}]}