{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\JVxeCells\\JVxeSelectDictSearchCell.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\JVxeCells\\JVxeSelectDictSearchCell.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _regeneratorRuntime from \"D:\\\\activiti\\\\project01\\\\jeecg-boot-activiti-master\\\\ant-design-vue-jeecg\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport debounce from 'lodash/debounce';\nimport { getAction } from '@/api/manage';\nimport { cloneObject } from '@/utils/util';\nimport { filterDictText } from '@/components/dict/JDictSelectUtil';\nimport { ajaxGetDictItems, getDictItemsFromCache } from '@/api/api';\nimport JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\n/** 公共资源 */\n\nvar common = {\n  /** value - label map，防止重复查询（刷新清空缓存） */\n  labelMap: new Map(),\n\n  /** 公共data */\n  data: function data() {\n    return {\n      loading: false,\n      innerSelectValue: null,\n      innerOptions: []\n    };\n  },\n\n  /** 公共计算属性 */\n  computed: {\n    dict: function dict() {\n      return this.originColumn.dict;\n    },\n    options: function options() {\n      if (this.isAsync) {\n        return this.innerOptions;\n      } else {\n        return this.originColumn.options || [];\n      }\n    },\n    // 是否是异步模式\n    isAsync: function isAsync() {\n      var isAsync = this.originColumn.async;\n      return isAsync != null && isAsync !== '' ? !!isAsync : true;\n    }\n  },\n\n  /** 公共属性监听 */\n  watch: {\n    innerValue: {\n      immediate: true,\n      handler: function handler(value) {\n        if (value == null || value === '') {\n          this.innerSelectValue = null;\n        } else {\n          this.loadDataByValue(value);\n        }\n      }\n    },\n    dict: function dict() {\n      this.loadDataByDict();\n    }\n  },\n\n  /** 公共方法 */\n  methods: {\n    // 根据 value 查询数据，用于回显\n    loadDataByValue: function () {\n      var _loadDataByValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n        var _ref, success, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.isAsync) {\n                  _context.next = 12;\n                  break;\n                }\n\n                if (!(this.innerSelectValue !== value)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                if (!common.labelMap.has(value)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.innerOptions = cloneObject(common.labelMap.get(value));\n                _context.next = 12;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return getAction(\"/sys/dict/loadDictItem/\".concat(this.dict), {\n                  key: value\n                });\n\n              case 8:\n                _ref = _context.sent;\n                success = _ref.success;\n                result = _ref.result;\n\n                if (success && result && result.length > 0) {\n                  this.innerOptions = [{\n                    value: value,\n                    text: result[0]\n                  }];\n                  common.labelMap.set(value, cloneObject(this.innerOptions));\n                }\n\n              case 12:\n                this.innerSelectValue = (value || '').toString();\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadDataByValue(_x) {\n        return _loadDataByValue.apply(this, arguments);\n      }\n\n      return loadDataByValue;\n    }(),\n    // 初始化字典\n    loadDataByDict: function () {\n      var _loadDataByDict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var dictStr, arr, tbInfo, cache, _ref2, success, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.isAsync) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                if (!(!this.originColumn.options || this.originColumn.options.length === 0)) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                // 根据字典Code, 初始化字典数组\n                dictStr = '';\n\n                if (!this.dict) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                arr = this.dict.split(',');\n\n                if (arr[0].indexOf('where') > 0) {\n                  tbInfo = arr[0].split('where');\n                  dictStr = tbInfo[0].trim() + ',' + arr[1] + ',' + arr[2] + ',' + encodeURIComponent(tbInfo[1]);\n                } else {\n                  dictStr = this.dict;\n                }\n\n                if (!(this.dict.indexOf(',') === -1)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                //优先从缓存中读取字典配置\n                cache = getDictItemsFromCache(this.dict);\n\n                if (!cache) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                this.innerOptions = cache;\n                return _context2.abrupt(\"return\");\n\n              case 11:\n                _context2.next = 13;\n                return ajaxGetDictItems(dictStr, null);\n\n              case 13:\n                _ref2 = _context2.sent;\n                success = _ref2.success;\n                result = _ref2.result;\n\n                if (success) {\n                  this.innerOptions = result;\n                }\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadDataByDict() {\n        return _loadDataByDict.apply(this, arguments);\n      }\n\n      return loadDataByDict;\n    }()\n  }\n}; // 显示组件，自带翻译\n\nexport var DictSearchSpanCell = {\n  name: 'JVxeSelectSearchSpanCell',\n  mixins: [JVxeCellMixins],\n  data: function data() {\n    return _objectSpread({}, common.data.apply(this));\n  },\n  computed: _objectSpread({}, common.computed),\n  watch: _objectSpread({}, common.watch),\n  methods: _objectSpread({}, common.methods),\n  render: function render(h) {\n    return h('span', {}, [filterDictText(this.innerOptions, this.innerSelectValue || this.innerValue)]);\n  }\n}; // 请求id\n\nvar requestId = 0; // 输入选择组件\n\nexport var DictSearchInputCell = {\n  name: 'JVxeSelectSearchInputCell',\n  mixins: [JVxeCellMixins],\n  data: function data() {\n    var _this = this;\n\n    var h = this.$createElement;\n    return _objectSpread({}, common.data.apply(this), {\n      hasRequest: false,\n      scopedSlots: {\n        notFoundContent: function notFoundContent() {\n          if (_this.loading) {\n            return h(\"a-spin\", {\n              \"attrs\": {\n                \"size\": \"small\"\n              }\n            });\n          } else if (_this.hasRequest) {\n            return h(\"div\", [\"\\u6CA1\\u6709\\u67E5\\u8BE2\\u5230\\u4EFB\\u4F55\\u6570\\u636E\"]);\n          } else {\n            return h(\"div\", [_this.tipsContent]);\n          }\n        }\n      }\n    });\n  },\n  computed: _objectSpread({}, common.computed, {\n    tipsContent: function tipsContent() {\n      return this.originColumn.tipsContent || '请输入搜索内容';\n    },\n    filterOption: function filterOption() {\n      if (this.isAsync) {\n        return null;\n      }\n\n      return function (input, option) {\n        return option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n      };\n    }\n  }),\n  watch: _objectSpread({}, common.watch),\n  created: function created() {\n    this.loadData = debounce(this.loadData, 300); //消抖\n  },\n  methods: _objectSpread({}, common.methods, {\n    loadData: function loadData(value) {\n      var _this2 = this;\n\n      var currentRequestId = ++requestId;\n      this.loading = true;\n      this.innerOptions = [];\n\n      if (value == null || value.trim() === '') {\n        this.loading = false;\n        this.hasRequest = false;\n        return;\n      } // 字典code格式：table,text,code\n\n\n      this.hasRequest = true;\n      getAction(\"/sys/dict/loadDict/\".concat(this.dict), {\n        keyword: value\n      }).then(function (res) {\n        if (currentRequestId !== requestId) {\n          return;\n        }\n\n        var success = res.success,\n            result = res.result,\n            message = res.message;\n\n        if (success) {\n          _this2.innerOptions = result;\n          result.forEach(function (item) {\n            common.labelMap.set(item.value, [item]);\n          });\n        } else {\n          _this2.$message.warning(message);\n        }\n      }).finally(function () {\n        _this2.loading = false;\n      });\n    },\n    handleChange: function handleChange(selectedValue) {\n      this.innerSelectValue = selectedValue;\n      this.handleChangeCommon(this.innerSelectValue);\n    },\n    handleSearch: function handleSearch(value) {\n      if (this.isAsync) {\n        // 在输入时也应该开启加载，因为loadData加了消抖，所以会有800ms的用户主观上认为的卡顿时间\n        this.loading = true;\n\n        if (this.innerOptions.length > 0) {\n          this.innerOptions = [];\n        }\n\n        this.loadData(value);\n      }\n    },\n    renderOptionItem: function renderOptionItem() {\n      var h = this.$createElement;\n      var options = [];\n      this.options.forEach(function (_ref3) {\n        var value = _ref3.value,\n            text = _ref3.text,\n            label = _ref3.label,\n            title = _ref3.title,\n            disabled = _ref3.disabled;\n        options.push(h(\"a-select-option\", {\n          \"key\": value,\n          \"attrs\": {\n            \"value\": value,\n            \"disabled\": disabled\n          }\n        }, [text || label || title]));\n      });\n      return options;\n    }\n  }),\n  render: function render() {\n    var h = arguments[0];\n    return h(\"a-select\", _mergeJSXProps([{\n      \"attrs\": {\n        \"showSearch\": true,\n        \"allowClear\": true,\n        \"value\": this.innerSelectValue,\n        \"filterOption\": this.filterOption\n      },\n      \"style\": \"width: 100%\"\n    }, this.cellProps, {\n      \"on\": {\n        \"search\": this.handleSearch,\n        \"change\": this.handleChange\n      },\n      \"scopedSlots\": this.scopedSlots\n    }]), [this.renderOptionItem()]);\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    aopEvents: {\n      editActived: function editActived(event) {\n        return dispatchEvent(event, 'ant-select');\n      }\n    }\n  }\n};",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/components/JVxeCells/JVxeSelectDictSearchCell.js"],"names":["debounce","getAction","cloneObject","filterDictText","ajaxGetDictItems","getDictItemsFromCache","JVxeCellMixins","dispatchEvent","common","labelMap","Map","data","loading","innerSelectValue","innerOptions","computed","dict","originColumn","options","isAsync","async","watch","innerValue","immediate","handler","value","loadDataByValue","loadDataByDict","methods","has","get","key","success","result","length","text","set","toString","dictStr","arr","split","indexOf","tbInfo","trim","encodeURIComponent","cache","DictSearchSpanCell","name","mixins","apply","render","h","requestId","DictSearchInputCell","hasRequest","scopedSlots","notFoundContent","tipsContent","filterOption","input","option","componentOptions","children","toLowerCase","created","loadData","currentRequestId","keyword","then","res","message","forEach","item","$message","warning","finally","handleChange","selectedValue","handleChangeCommon","handleSearch","renderOptionItem","label","title","disabled","push","cellProps","enhanced","aopEvents","editActived","event"],"mappings":"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","sourcesContent":["import debounce from 'lodash/debounce'\nimport { getAction } from '@/api/manage'\nimport { cloneObject } from '@/utils/util'\nimport { filterDictText } from '@/components/dict/JDictSelectUtil'\nimport { ajaxGetDictItems, getDictItemsFromCache } from '@/api/api'\nimport JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\n/** 公共资源 */\nconst common = {\n  /** value - label map，防止重复查询（刷新清空缓存） */\n  labelMap: new Map(),\n\n  /** 公共data */\n  data() {\n    return {\n      loading: false,\n      innerSelectValue: null,\n      innerOptions: [],\n    }\n  },\n  /** 公共计算属性 */\n  computed: {\n    dict() {\n      return this.originColumn.dict\n    },\n    options() {\n      if (this.isAsync) {\n        return this.innerOptions\n      } else {\n        return this.originColumn.options || []\n      }\n    },\n    // 是否是异步模式\n    isAsync() {\n      let isAsync = this.originColumn.async\n      return (isAsync != null && isAsync !== '') ? !!isAsync : true\n    },\n  },\n  /** 公共属性监听 */\n  watch: {\n    innerValue: {\n      immediate: true,\n      handler(value) {\n        if (value == null || value === '') {\n          this.innerSelectValue = null\n        } else {\n          this.loadDataByValue(value)\n        }\n      }\n    },\n    dict() {\n      this.loadDataByDict()\n    }\n  },\n  /** 公共方法 */\n  methods: {\n\n    // 根据 value 查询数据，用于回显\n    async loadDataByValue(value) {\n      if (this.isAsync) {\n        if (this.innerSelectValue !== value) {\n          if (common.labelMap.has(value)) {\n            this.innerOptions = cloneObject(common.labelMap.get(value))\n          } else {\n            let {success, result} = await getAction(`/sys/dict/loadDictItem/${this.dict}`, {key: value})\n            if (success && result && result.length > 0) {\n              this.innerOptions = [{value: value, text: result[0]}]\n              common.labelMap.set(value, cloneObject(this.innerOptions))\n            }\n          }\n        }\n      }\n      this.innerSelectValue = (value || '').toString()\n    },\n\n    // 初始化字典\n    async loadDataByDict() {\n      if (!this.isAsync) {\n        // 如果字典项集合有数据\n        if (!this.originColumn.options || this.originColumn.options.length === 0) {\n          // 根据字典Code, 初始化字典数组\n          let dictStr = ''\n          if (this.dict) {\n            let arr = this.dict.split(',')\n            if (arr[0].indexOf('where') > 0) {\n              let tbInfo = arr[0].split('where')\n              dictStr = tbInfo[0].trim() + ',' + arr[1] + ',' + arr[2] + ',' + encodeURIComponent(tbInfo[1])\n            } else {\n              dictStr = this.dict\n            }\n            if (this.dict.indexOf(',') === -1) {\n              //优先从缓存中读取字典配置\n              let cache = getDictItemsFromCache(this.dict)\n              if (cache) {\n                this.innerOptions = cache\n                return\n              }\n            }\n            let {success, result} = await ajaxGetDictItems(dictStr, null)\n            if (success) {\n              this.innerOptions = result\n            }\n          }\n        }\n      }\n    },\n\n  },\n\n}\n\n// 显示组件，自带翻译\nexport const DictSearchSpanCell = {\n  name: 'JVxeSelectSearchSpanCell',\n  mixins: [JVxeCellMixins],\n  data() {\n    return {\n      ...common.data.apply(this),\n    }\n  },\n  computed: {\n    ...common.computed,\n  },\n  watch: {\n    ...common.watch,\n  },\n  methods: {\n    ...common.methods,\n  },\n  render(h) {\n    return h('span', {}, [\n      filterDictText(this.innerOptions, this.innerSelectValue || this.innerValue)\n    ])\n  },\n}\n\n// 请求id\nlet requestId = 0\n\n// 输入选择组件\nexport const DictSearchInputCell = {\n  name: 'JVxeSelectSearchInputCell',\n  mixins: [JVxeCellMixins],\n  data() {\n    return {\n      ...common.data.apply(this),\n\n      hasRequest: false,\n      scopedSlots: {\n        notFoundContent: () => {\n          if (this.loading) {\n            return <a-spin size=\"small\"/>\n          } else if (this.hasRequest) {\n            return <div>没有查询到任何数据</div>\n          } else {\n            return <div>{this.tipsContent}</div>\n          }\n        }\n      }\n    }\n  },\n  computed: {\n    ...common.computed,\n    tipsContent() {\n      return this.originColumn.tipsContent || '请输入搜索内容'\n    },\n    filterOption() {\n      if (this.isAsync) {\n        return null\n      }\n      return (input, option) => option.componentOptions.children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    },\n  },\n  watch: {\n    ...common.watch,\n  },\n  created() {\n    this.loadData = debounce(this.loadData, 300)//消抖\n  },\n  methods: {\n    ...common.methods,\n\n    loadData(value) {\n      const currentRequestId = ++requestId\n      this.loading = true\n      this.innerOptions = []\n      if (value == null || value.trim() === '') {\n        this.loading = false\n        this.hasRequest = false\n        return\n      }\n      // 字典code格式：table,text,code\n      this.hasRequest = true\n      getAction(`/sys/dict/loadDict/${this.dict}`, {keyword: value}).then(res => {\n        if (currentRequestId !== requestId) {\n          return\n        }\n        let {success, result, message} = res\n        if (success) {\n          this.innerOptions = result\n          result.forEach((item) => {\n            common.labelMap.set(item.value, [item])\n          })\n        } else {\n          this.$message.warning(message)\n        }\n      }).finally(() => {\n        this.loading = false\n      })\n    },\n\n    handleChange(selectedValue) {\n      this.innerSelectValue = selectedValue\n      this.handleChangeCommon(this.innerSelectValue)\n    },\n    handleSearch(value) {\n      if (this.isAsync) {\n        // 在输入时也应该开启加载，因为loadData加了消抖，所以会有800ms的用户主观上认为的卡顿时间\n        this.loading = true\n        if (this.innerOptions.length > 0) {\n          this.innerOptions = []\n        }\n        this.loadData(value)\n      }\n    },\n\n    renderOptionItem() {\n      let options = []\n      this.options.forEach(({value, text, label, title, disabled}) => {\n        options.push(\n          <a-select-option key={value} value={value} disabled={disabled}>{text || label || title}</a-select-option>\n        )\n      })\n      return options\n    },\n  },\n  render() {\n    return (\n      <a-select\n        showSearch\n        allowClear\n        value={this.innerSelectValue}\n        filterOption={this.filterOption}\n        style=\"width: 100%\"\n        {...this.cellProps}\n        onSearch={this.handleSearch}\n        onChange={this.handleChange}\n        scopedSlots={this.scopedSlots}\n      >\n        {this.renderOptionItem()}\n      </a-select>\n    )\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    aopEvents: {\n      editActived: event => dispatchEvent(event, 'ant-select'),\n    },\n  }\n}"]}]}