{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\extends\\BEcharts\\BEcharts.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\extends\\BEcharts\\BEcharts.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nimport * as echart from 'echarts';\nimport ResizeListener from 'element-resize-detector';\nexport default {\n  props: {\n    option: {\n      type: Object,\n      default: {}\n    },\n\n    /* 主题 default light dark*/\n    theme: {\n      type: String,\n      default: 'light'\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  watch: {\n    option: function option() {\n      this.updateChartView();\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.chart = echart.init(this.$el, this.theme);\n    this.updateChartView();\n    this.chart.on('click', function (params) {\n      _this.$emit('click', params);\n    });\n    window.addEventListener('resize', this.handleWindowResize);\n    this.addChartResizeListener();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  },\n  methods: {\n    /**\n     * 更新echart视图\n     */\n    updateChartView: function updateChartView() {\n      if (!this.chart) return;\n      var option = this.option;\n      this.chart.setOption(option, true);\n    },\n\n    /**\n     * 对chart元素尺寸进行监听，当发生变化时同步更新echart视图\n     */\n    addChartResizeListener: function addChartResizeListener() {\n      var _this2 = this;\n\n      var instance = ResizeListener({\n        strategy: 'scroll',\n        callOnAdd: true\n      });\n      instance.listenTo(this.$el, function () {\n        if (!_this2.chart) return;\n\n        _this2.chart.resize();\n      });\n    },\n\n    /**\n     * 当窗口缩放时，echart动态调整自身大小\n     */\n    handleWindowResize: function handleWindowResize() {\n      if (!this.chart) return;\n      this.chart.resize();\n    }\n  }\n};",{"version":3,"sources":["BEcharts.vue"],"names":[],"mappings":";;;;;AAMA,OAAA,KAAA,MAAA,MAAA,SAAA;AACA,OAAA,cAAA,MAAA,yBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;;AAKA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AANA,GADA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GAhBA;AAiBA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,eAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,QAAA,KAAA,GAAA,IAAA;;AACA,SAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA;AACA,SAAA,eAAA;AACA,SAAA,KAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,MAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,MAAA;AACA,KAFA;AAGA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,kBAAA;AACA,SAAA,sBAAA;AACA,GA/BA;AAgCA,EAAA,aAhCA,2BAgCA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,kBAAA;AACA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA;;;AAGA,IAAA,eAJA,6BAIA;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,MAAA,EAAA,IAAA;AACA,KARA;;AASA;;;AAGA,IAAA,sBAZA,oCAYA;AAAA;;AACA,UAAA,QAAA,GAAA,cAAA,CAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,SAAA,EAAA;AAFA,OAAA,CAAA;AAKA,MAAA,QAAA,CAAA,QAAA,CAAA,KAAA,GAAA,EAAA,YAAA;AACA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA;;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA,OAHA;AAIA,KAtBA;;AAuBA;;;AAGA,IAAA,kBA1BA,gCA0BA;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,WAAA,KAAA,CAAA,MAAA;AACA;AA7BA;AAnCA,CAAA","sourcesContent":["<template>\n    <div class=\"b-echarts\">\n    </div>\n</template>\n\n<script>\n  import * as echart from 'echarts';\n  import ResizeListener from 'element-resize-detector';\n    export default {\n      props: {\n        option: {\n          type: Object,\n          default: {}\n        },\n        /* 主题 default light dark*/\n        theme: {\n          type: String,\n          default: 'light'\n        }\n      },\n      data() {\n        return {\n          chart: null\n        };\n      },\n      watch:{\n        option(){\n          this.updateChartView();\n        }\n      },\n      mounted() {\n        const _this = this;\n        this.chart = echart.init(this.$el, this.theme);\n        this.updateChartView();\n        this.chart.on('click',(params)=>{\n          _this.$emit('click',params);\n        })\n        window.addEventListener('resize', this.handleWindowResize);\n        this.addChartResizeListener();\n      },\n      beforeDestroy() {\n        window.removeEventListener('resize', this.handleWindowResize);\n      },\n      methods: {\n        /**\n         * 更新echart视图\n         */\n        updateChartView() {\n          if (!this.chart) return;\n          let option = this.option;\n          this.chart.setOption(option, true);\n        },\n        /**\n         * 对chart元素尺寸进行监听，当发生变化时同步更新echart视图\n         */\n        addChartResizeListener() {\n          const instance = ResizeListener({\n            strategy: 'scroll',\n            callOnAdd: true\n          });\n\n          instance.listenTo(this.$el, () => {\n            if (!this.chart) return;\n            this.chart.resize();\n          });\n        },\n        /**\n         * 当窗口缩放时，echart动态调整自身大小\n         */\n        handleWindowResize() {\n          if (!this.chart) return;\n          this.chart.resize();\n        }\n      }\n    };\n</script>\n<style scoped lang=\"less\">\n  .b-echarts{\n    width: 100%;\n    height: 100%;\n  }\n</style>"],"sourceRoot":"src/extends/BEcharts"}]}