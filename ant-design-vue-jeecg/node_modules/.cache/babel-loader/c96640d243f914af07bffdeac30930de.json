{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\activiti\\applyHome.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\activiti\\applyHome.vue","mtime":1621944120992},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { activitiMixin } from '@/views/activiti/mixins/activitiMixin';\nimport JEllipsis from '@/components/jeecg/JEllipsis';\nimport JTreeSelect from '@/components/jeecg/JTreeSelect';\nimport { initDictOptions, filterDictText } from '@/components/dict/JDictSelectUtil';\nimport historicDetail from '@/views/activiti/historicDetail';\nexport default {\n  name: \"applyHome\",\n  mixins: [activitiMixin],\n  components: {\n    JEllipsis: JEllipsis,\n    JTreeSelect: JTreeSelect,\n    historicDetail: historicDetail\n  },\n  data: function data() {\n    return {\n      description: '所有',\n      dictOptions: [],\n      url: {\n        getProcessDataList: \"/activiti_process/listData\",\n        getFirstNode: '/actProcessIns/getFirstNode',\n        applyBusiness: '/actBusiness/apply'\n      },\n      // 查询条件\n      queryParam: {\n        createTimeRange: [],\n        keyWord: ''\n      },\n      // 表头\n      labelCol: {\n        xs: {\n          span: 4\n        },\n        sm: {\n          span: 4\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 20\n        },\n        sm: {\n          span: 20\n        }\n      },\n      processModalVisible: null,\n      activeKeyAll: [],\n      activeKey: [],\n      processDataMap: {},\n      searchProcessKey: null,\n      addApplyLoading: false,\n      lcModa: {\n        title: '',\n        disabled: false,\n        visible: false,\n        formComponent: null,\n        isNew: false\n      }\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    this.initDictConfig();\n    this.getProcessList();\n  },\n  methods: {\n    initDictConfig: function initDictConfig() {\n      var _this = this;\n\n      //初始化字典 - 流程分类\n      initDictOptions('bpm_process_type').then(function (res) {\n        if (res.success) {\n          _this.dictOptions = res.result;\n        }\n      });\n    },\n    filterDictText: function filterDictText(dictOptions, text) {\n      if (dictOptions instanceof Array) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = dictOptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var dictItem = _step.value;\n\n            if (text === dictItem.value) {\n              return dictItem.text;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return text || text == 'null' ? '' : text;\n    },\n\n    /*加载流程列表*/\n    getProcessList: function getProcessList() {\n      var _this2 = this;\n\n      this.addApplyLoading = true;\n      this.getAction(this.url.getProcessDataList, {\n        status: 1,\n        roles: true\n      }).then(function (res) {\n        _this2.activeKeyAll = [];\n\n        if (res.success) {\n          var result = res.result || [];\n\n          if (result.length > 0) {\n            var searchProcessKey = _this2.searchProcessKey;\n\n            if (searchProcessKey) {\n              //过滤条件\n              result = _.filter(result, function (o) {\n                return o.name.indexOf(searchProcessKey) > -1;\n              });\n            }\n\n            _this2.processDataMap = _.groupBy(result, 'categoryId');\n\n            for (var categoryId in _this2.processDataMap) {\n              _this2.activeKeyAll.push(categoryId);\n            }\n\n            _this2.activeKey = _this2.activeKeyAll;\n          }\n\n          _this2.processModalVisible = true;\n        } else {\n          _this2.$message.warning(res.message);\n        }\n      }).finally(function () {\n        return _this2.addApplyLoading = false;\n      });\n    },\n    onSearchProcess: function onSearchProcess(value) {\n      this.searchProcessKey = value;\n      this.getProcessList();\n    },\n    chooseProcess: function chooseProcess(v) {\n      if (!v.routeName) {\n        this.$message.warning(\"该流程信息未配置表单，请联系开发人员！\");\n        return;\n      }\n\n      this.lcModa.formComponent = this.getFormComponent(v.routeName).component;\n      this.lcModa.title = '发起流程：' + v.name;\n      this.lcModa.isNew = true;\n      this.lcModa.processData = v;\n      this.lcModa.visible = true;\n      console.log(\"发起\", v);\n    },\n\n    /*提交成功申请后*/\n    afterSub: function afterSub(formData) {\n      this.lcModa.visible = false;\n      this.$message(\"请前往我的申请列表提交审批！\");\n    },\n\n    /*前往我的申请页面*/\n    handleToApplyList: function handleToApplyList() {\n      this.$router.push({\n        path: '/activiti/applyList'\n      });\n    }\n  }\n};",{"version":3,"sources":["applyHome.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <!--流程申请选择-->\r\n    <a-input-search style=\"margin-bottom: 10px;margin-right:10px;width: 200px\" v-model=\"searchProcessKey\"\r\n                    placeholder=\"输入流程名称\" @search=\"onSearchProcess\" />\r\n    <a-button @click=\"onSearchProcess(searchProcessKey)\" type=\"primary\">查询</a-button>\r\n    <a-button @click=\"onSearchProcess('')\">重置</a-button>\r\n    <a-button @click=\"handleToApplyList\" type=\"primary\" style=\"float: right;\">前往我的申请列表</a-button>\r\n      <a-empty description=\"无流程可供选择\" v-if=\"activeKeyAll.length==0\" />\r\n      <div v-else>\r\n        <a-collapse v-model=\"activeKey\">\r\n          <a-collapse-panel v-for=\"(value, index)  in activeKeyAll\" :header=\"filterDictText(dictOptions,value)||'未分类'\" :key=\"value\">\r\n            <a-list :grid=\"{ gutter: 10,column:4}\" :dataSource=\"processDataMap[value]\">\r\n              <a-list-item slot=\"renderItem\" slot-scope=\"item\">\r\n                <a-card>\r\n                  <div slot=\"title\">\r\n                    <a-row>\r\n                      <a-col span=\"12\" :title=\"item.name\">{{item.name}} </a-col>\r\n                      <a-col span=\"12\" style=\"text-align: right;\">\r\n                        <a href=\"javascript:void (0)\" @click=\"chooseProcess(item)\">发起申请</a>\r\n                      </a-col>\r\n                    </a-row>\r\n                  </div>\r\n                  <b>版本：</b>v.{{item.version}}\r\n                  <br/>\r\n                  <b>说明：</b>{{item.description}}\r\n                </a-card>\r\n              </a-list-item>\r\n            </a-list>\r\n          </a-collapse-panel>\r\n        </a-collapse>\r\n      </div>\r\n    <!--流程表单-->\r\n    <a-modal :destroyOnClose=\"true\" :title=\"lcModa.title\" v-model=\"lcModa.visible\" :footer=\"null\" :maskClosable=\"false\" width=\"80%\">\r\n      <component :disabled=\"lcModa.disabled\" v-if=\"lcModa.visible\" :is=\"lcModa.formComponent\"\r\n                 :processData=\"lcModa.processData\" :isNew = \"lcModa.isNew\"\r\n                 @afterSubmit=\"afterSub\" @close=\"lcModa.visible=false,lcModa.disabled = false\"></component>\r\n    </a-modal>\r\n  </a-card>\r\n\r\n</template>\r\n\r\n<script>\r\n  import { activitiMixin } from '@/views/activiti/mixins/activitiMixin'\r\n  import JEllipsis from '@/components/jeecg/JEllipsis'\r\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\r\n  import {initDictOptions, filterDictText} from '@/components/dict/JDictSelectUtil'\r\n  import historicDetail from '@/views/activiti/historicDetail'\r\n  export default {\r\n    name: \"applyHome\",\r\n    mixins:[activitiMixin],\r\n    components: {\r\n      JEllipsis\r\n      ,JTreeSelect\r\n      ,historicDetail\r\n    },\r\n    data () {\r\n      return {\r\n        description: '所有',\r\n        dictOptions:[],\r\n        url: {\r\n          getProcessDataList: \"/activiti_process/listData\",\r\n          getFirstNode:'/actProcessIns/getFirstNode',\r\n          applyBusiness:'/actBusiness/apply',\r\n        },\r\n        // 查询条件\r\n        queryParam: {\r\n          createTimeRange:[],\r\n          keyWord:'',\r\n        },\r\n        // 表头\r\n        labelCol: {\r\n          xs: { span: 4 },\r\n          sm: { span: 4 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 20 },\r\n          sm: { span: 20 },\r\n        },\r\n        processModalVisible: null,\r\n        activeKeyAll: [],\r\n        activeKey: [],\r\n        processDataMap: {},\r\n        searchProcessKey: null,\r\n        addApplyLoading: false,\r\n        lcModa: {\r\n          title:'',\r\n          disabled:false,\r\n          visible:false,\r\n          formComponent : null,\r\n          isNew : false\r\n        },\r\n      }\r\n    },\r\n    computed:{\r\n    },\r\n    mounted() {\r\n      this.initDictConfig()\r\n      this.getProcessList()\r\n    },\r\n    methods: {\r\n\r\n      initDictConfig() {\r\n        //初始化字典 - 流程分类\r\n        initDictOptions('bpm_process_type').then((res) => {\r\n          if (res.success) {\r\n            this.dictOptions = res.result;\r\n          }\r\n        });\r\n      },\r\n      filterDictText(dictOptions, text) {\r\n        if (dictOptions instanceof Array) {\r\n          for (let dictItem of dictOptions) {\r\n            if (text === dictItem.value) {\r\n              return dictItem.text\r\n            }\r\n          }\r\n        }\r\n        return text||text=='null'?'':text\r\n      },\r\n      /*加载流程列表*/\r\n      getProcessList() {\r\n        this.addApplyLoading = true;\r\n        this.getAction(this.url.getProcessDataList,{status:1,roles:true}).then(res => {\r\n          this.activeKeyAll = [];\r\n          if (res.success) {\r\n            var result = res.result||[];\r\n            if (result.length>0){\r\n              let searchProcessKey = this.searchProcessKey;\r\n              if (searchProcessKey){ //过滤条件\r\n                result = _.filter(result, function(o) { return o.name.indexOf(searchProcessKey)>-1; });\r\n              }\r\n              this.processDataMap = _.groupBy(result,'categoryId');\r\n              for (const categoryId in this.processDataMap) {\r\n                this.activeKeyAll.push(categoryId)\r\n              }\r\n              this.activeKey = this.activeKeyAll;\r\n            }\r\n            this.processModalVisible = true;\r\n          }else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        }).finally(()=>this.addApplyLoading = false);\r\n      },\r\n      onSearchProcess(value) {\r\n        this.searchProcessKey = value;\r\n        this.getProcessList()\r\n      },\r\n      chooseProcess(v) {\r\n        if (!v.routeName) {\r\n          this.$message.warning(\r\n            \"该流程信息未配置表单，请联系开发人员！\"\r\n          );\r\n          return;\r\n        }\r\n        this.lcModa.formComponent = this.getFormComponent(v.routeName).component;\r\n        this.lcModa.title = '发起流程：'+v.name;\r\n        this.lcModa.isNew = true;\r\n        this.lcModa.processData = v;\r\n        this.lcModa.visible = true;\r\n        console.log(\"发起\",v)\r\n      },\r\n      /*提交成功申请后*/\r\n      afterSub(formData){\r\n          this.lcModa.visible = false;\r\n          this.$message(\"请前往我的申请列表提交审批！\")\r\n      },\r\n      /*前往我的申请页面*/\r\n      handleToApplyList() {\r\n        this.$router.push({path:'/activiti/applyList'})\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  @import '~@assets/less/common.less';\r\n</style>"],"sourceRoot":"src/views/activiti"}]}