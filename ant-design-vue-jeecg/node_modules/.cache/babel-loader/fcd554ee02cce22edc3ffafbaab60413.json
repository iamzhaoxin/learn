{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\dict\\JDictSelectTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\dict\\JDictSelectTag.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ajaxGetDictItems, getDictItemsFromCache } from '@/api/api';\nexport default {\n  name: \"JDictSelectTag\",\n  props: {\n    dictCode: String,\n    placeholder: String,\n    triggerChange: Boolean,\n    disabled: Boolean,\n    value: [String, Number],\n    type: String,\n    getPopupContainer: {\n      type: Function,\n      default: function _default(node) {\n        return node.parentNode;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      dictOptions: [],\n      tagType: \"\"\n    };\n  },\n  watch: {\n    dictCode: {\n      immediate: true,\n      handler: function handler() {\n        this.initDictData();\n      }\n    }\n  },\n  created: function created() {\n    // console.log(this.dictCode);\n    if (!this.type || this.type === \"list\") {\n      this.tagType = \"select\";\n    } else {\n      this.tagType = this.type;\n    } //获取字典数据\n    // this.initDictData();\n\n  },\n  computed: {\n    getValueSting: function getValueSting() {\n      // update-begin author:wangshuai date:20200601 for: 不显示placeholder的文字 ------\n      // 当有null或“” placeholder不显示\n      return this.value != null ? this.value.toString() : undefined; // update-end author:wangshuai date:20200601 for: 不显示placeholder的文字 ------\n    }\n  },\n  methods: {\n    initDictData: function initDictData() {\n      var _this = this;\n\n      //优先从缓存中读取字典配置\n      if (getDictItemsFromCache(this.dictCode)) {\n        this.dictOptions = getDictItemsFromCache(this.dictCode);\n        return;\n      } //根据字典Code, 初始化字典数组\n\n\n      ajaxGetDictItems(this.dictCode, null).then(function (res) {\n        if (res.success) {\n          //                console.log(res.result);\n          _this.dictOptions = res.result;\n        }\n      });\n    },\n    handleInput: function handleInput(e) {\n      var val;\n\n      if (this.tagType == \"radio\") {\n        val = e.target.value;\n      } else {\n        val = e;\n      }\n\n      console.log(val);\n\n      if (this.triggerChange) {\n        this.$emit('change', val);\n      } else {\n        this.$emit('input', val);\n      }\n    },\n    setCurrentDictOptions: function setCurrentDictOptions(dictOptions) {\n      this.dictOptions = dictOptions;\n    },\n    getCurrentDictOptions: function getCurrentDictOptions() {\n      return this.dictOptions;\n    }\n  }\n};",{"version":3,"sources":["JDictSelectTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,SAAA,gBAAA,EAAA,qBAAA,QAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,MADA;AAEA,IAAA,WAAA,EAAA,MAFA;AAGA,IAAA,aAAA,EAAA,OAHA;AAIA,IAAA,QAAA,EAAA,OAJA;AAKA,IAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CALA;AAMA,IAAA,IAAA,EAAA,MANA;AAOA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,kBAAA,IAAA;AAAA,eAAA,IAAA,CAAA,UAAA;AAAA;AAFA;AAPA,GAFA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAnBA;AAoBA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA,aAAA,YAAA;AACA;AAJA;AADA,GApBA;AA4BA,EAAA,OA5BA,qBA4BA;AACA;AACA,QAAA,CAAA,KAAA,IAAA,IAAA,KAAA,IAAA,KAAA,MAAA,EAAA;AACA,WAAA,OAAA,GAAA,QAAA;AACA,KAFA,MAEA;AACA,WAAA,OAAA,GAAA,KAAA,IAAA;AACA,KANA,CAOA;AACA;;AACA,GArCA;AAsCA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA;AACA;AACA,aAAA,KAAA,KAAA,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,QAAA,EAAA,GAAA,SAAA,CAHA,CAIA;AACA;AANA,GAtCA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA;AACA,UAAA,qBAAA,CAAA,KAAA,QAAA,CAAA,EAAA;AACA,aAAA,WAAA,GAAA,qBAAA,CAAA,KAAA,QAAA,CAAA;AACA;AACA,OALA,CAOA;;;AACA,MAAA,gBAAA,CAAA,KAAA,QAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,GAAA,CAAA,MAAA;AACA;AACA,OALA;AAMA,KAfA;AAgBA,IAAA,WAhBA,uBAgBA,CAhBA,EAgBA;AACA,UAAA,GAAA;;AACA,UAAA,KAAA,OAAA,IAAA,OAAA,EAAA;AACA,QAAA,GAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,OAFA,MAEA;AACA,QAAA,GAAA,GAAA,CAAA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,GAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AACA,KA7BA;AA8BA,IAAA,qBA9BA,iCA8BA,WA9BA,EA8BA;AACA,WAAA,WAAA,GAAA,WAAA;AACA,KAhCA;AAiCA,IAAA,qBAjCA,mCAiCA;AACA,aAAA,KAAA,WAAA;AACA;AAnCA;AA9CA,CAAA","sourcesContent":["<template>\n  <a-radio-group v-if=\"tagType=='radio'\" @change=\"handleInput\" :value=\"getValueSting\" :disabled=\"disabled\">\n    <a-radio v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">{{ item.text }}</a-radio>\n  </a-radio-group>\n\n  <a-radio-group v-else-if=\"tagType=='radioButton'\"  buttonStyle=\"solid\" @change=\"handleInput\" :value=\"getValueSting\" :disabled=\"disabled\">\n    <a-radio-button v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">{{ item.text }}</a-radio-button>\n  </a-radio-group>\n\n  <a-select v-else-if=\"tagType=='select'\" :getPopupContainer = \"getPopupContainer\" :placeholder=\"placeholder\" :disabled=\"disabled\" :value=\"getValueSting\" @change=\"handleInput\">\n    <a-select-option :value=\"undefined\">请选择</a-select-option>\n    <a-select-option v-for=\"(item, key) in dictOptions\" :key=\"key\" :value=\"item.value\">\n      <span style=\"display: inline-block;width: 100%\" :title=\" item.text || item.label \">\n        {{ item.text || item.label }}\n      </span>\n    </a-select-option>\n  </a-select>\n</template>\n\n<script>\n  import {ajaxGetDictItems,getDictItemsFromCache} from '@/api/api'\n\n  export default {\n    name: \"JDictSelectTag\",\n    props: {\n      dictCode: String,\n      placeholder: String,\n      triggerChange: Boolean,\n      disabled: Boolean,\n      value: [String, Number],\n      type: String,\n      getPopupContainer:{\n        type: Function,\n        default: (node) => node.parentNode\n      }\n    },\n    data() {\n      return {\n        dictOptions: [],\n        tagType:\"\"\n      }\n    },\n    watch:{\n      dictCode:{\n        immediate:true,\n        handler() {\n          this.initDictData()\n        },\n      }\n    },\n    created() {\n      // console.log(this.dictCode);\n      if(!this.type || this.type===\"list\"){\n        this.tagType = \"select\"\n      }else{\n        this.tagType = this.type\n      }\n      //获取字典数据\n      // this.initDictData();\n    },\n    computed: {\n      getValueSting(){\n        // update-begin author:wangshuai date:20200601 for: 不显示placeholder的文字 ------\n        // 当有null或“” placeholder不显示\n        return this.value != null ? this.value.toString() : undefined;\n        // update-end author:wangshuai date:20200601 for: 不显示placeholder的文字 ------\n      },\n    },\n    methods: {\n      initDictData() {\n        //优先从缓存中读取字典配置\n        if(getDictItemsFromCache(this.dictCode)){\n          this.dictOptions = getDictItemsFromCache(this.dictCode);\n          return\n        }\n\n        //根据字典Code, 初始化字典数组\n        ajaxGetDictItems(this.dictCode, null).then((res) => {\n          if (res.success) {\n//                console.log(res.result);\n            this.dictOptions = res.result;\n          }\n        })\n      },\n      handleInput(e) {\n        let val;\n        if(this.tagType==\"radio\"){\n          val = e.target.value\n        }else{\n          val = e\n        }\n        console.log(val);\n        if(this.triggerChange){\n          this.$emit('change', val);\n        }else{\n          this.$emit('input', val);\n        }\n      },\n      setCurrentDictOptions(dictOptions){\n        this.dictOptions = dictOptions\n      },\n      getCurrentDictOptions(){\n        return this.dictOptions\n      }\n    }\n  }\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components/dict"}]}