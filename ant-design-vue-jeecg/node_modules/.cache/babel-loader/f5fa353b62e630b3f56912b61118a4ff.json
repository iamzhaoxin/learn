{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\permission.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\permission.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from 'vue';\nimport router from './router';\nimport store from './store';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport notification from 'ant-design-vue/es/notification';\nimport { ACCESS_TOKEN, INDEX_MAIN_PAGE_PATH } from '@/store/mutation-types';\nimport { generateIndexRouter } from \"@/utils/util\";\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/test/cesium', '/user/login', '/user/register', '/user/register-result', '/user/alteration']; // no redirect whitelist\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // start progress bar\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    /* has token */\n    if (to.path === '/user/login') {\n      next({\n        path: INDEX_MAIN_PAGE_PATH\n      });\n      NProgress.done();\n    } else {\n      if (store.getters.permissionList.length === 0) {\n        store.dispatch('GetPermissionList').then(function (res) {\n          var menuData = res.result.menu; //console.log(res.message)\n\n          if (menuData === null || menuData === \"\" || menuData === undefined) {\n            return;\n          }\n\n          var constRoutes = [];\n          constRoutes = generateIndexRouter(menuData); // 添加主界面路由\n\n          store.dispatch('UpdateAppRouter', {\n            constRoutes: constRoutes\n          }).then(function () {\n            // 根据roles权限生成可访问的路由表\n            // 动态添加可访问路由表\n            router.addRoutes(store.getters.addRouters);\n            var redirect = decodeURIComponent(from.query.redirect || to.path);\n\n            if (to.path === redirect) {\n              // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n              next(_objectSpread({}, to, {\n                replace: true\n              }));\n            } else {\n              // 跳转到目的路由\n              next({\n                path: redirect\n              });\n            }\n          });\n        }).catch(function () {\n          /* notification.error({\n             message: '系统提示',\n             description: '请求用户信息失败，请重试！'\n           })*/\n          store.dispatch('Logout').then(function () {\n            next({\n              path: '/user/login',\n              query: {\n                redirect: to.fullPath\n              }\n            });\n          });\n        });\n      } else {\n        next();\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next({\n        path: '/user/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n      NProgress.done(); // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/permission.js"],"names":["Vue","router","store","NProgress","notification","ACCESS_TOKEN","INDEX_MAIN_PAGE_PATH","generateIndexRouter","configure","showSpinner","whiteList","beforeEach","to","from","next","start","ls","get","path","done","getters","permissionList","length","dispatch","then","res","menuData","result","menu","undefined","constRoutes","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","catch","fullPath","indexOf","afterEach"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,YAAT,EAAsBC,oBAAtB,QAAkD,wBAAlD;AACA,SAASC,mBAAT,QAAoC,cAApC;AAEAJ,SAAS,CAACK,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,IAAMC,SAAS,GAAG,CAAC,cAAD,EAAgB,aAAhB,EAA+B,gBAA/B,EAAiD,uBAAjD,EAAyE,kBAAzE,CAAlB,C,CAA+G;;AAE/GT,MAAM,CAACU,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCX,EAAAA,SAAS,CAACY,KAAV,GADoC,CAClB;;AAElB,MAAIf,GAAG,CAACgB,EAAJ,CAAOC,GAAP,CAAWZ,YAAX,CAAJ,EAA8B;AAC5B;AACA,QAAIO,EAAE,CAACM,IAAH,KAAY,aAAhB,EAA+B;AAC7BJ,MAAAA,IAAI,CAAC;AAAEI,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAJ;AACAH,MAAAA,SAAS,CAACgB,IAAV;AACD,KAHD,MAGO;AACL,UAAIjB,KAAK,CAACkB,OAAN,CAAcC,cAAd,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;AAC7CpB,QAAAA,KAAK,CAACqB,QAAN,CAAe,mBAAf,EAAoCC,IAApC,CAAyC,UAAAC,GAAG,EAAI;AAC1C,cAAMC,QAAQ,GAAGD,GAAG,CAACE,MAAJ,CAAWC,IAA5B,CAD0C,CAE1C;;AACA,cAAIF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,EAAlC,IAAwCA,QAAQ,KAAKG,SAAzD,EAAoE;AAClE;AACD;;AACD,cAAIC,WAAW,GAAG,EAAlB;AACAA,UAAAA,WAAW,GAAGvB,mBAAmB,CAACmB,QAAD,CAAjC,CAP0C,CAQ1C;;AACAxB,UAAAA,KAAK,CAACqB,QAAN,CAAe,iBAAf,EAAmC;AAAEO,YAAAA,WAAW,EAAXA;AAAF,WAAnC,EAAoDN,IAApD,CAAyD,YAAM;AAC7D;AACA;AACAvB,YAAAA,MAAM,CAAC8B,SAAP,CAAiB7B,KAAK,CAACkB,OAAN,CAAcY,UAA/B;AACA,gBAAMC,QAAQ,GAAGC,kBAAkB,CAACrB,IAAI,CAACsB,KAAL,CAAWF,QAAX,IAAuBrB,EAAE,CAACM,IAA3B,CAAnC;;AACA,gBAAIN,EAAE,CAACM,IAAH,KAAYe,QAAhB,EAA0B;AACxB;AACAnB,cAAAA,IAAI,mBAAMF,EAAN;AAAUwB,gBAAAA,OAAO,EAAE;AAAnB,iBAAJ;AACD,aAHD,MAGO;AACL;AACAtB,cAAAA,IAAI,CAAC;AAAEI,gBAAAA,IAAI,EAAEe;AAAR,eAAD,CAAJ;AACD;AACF,WAZD;AAaD,SAtBL,EAuBGI,KAvBH,CAuBS,YAAM;AACZ;;;;AAICnC,UAAAA,KAAK,CAACqB,QAAN,CAAe,QAAf,EAAyBC,IAAzB,CAA8B,YAAM;AAClCV,YAAAA,IAAI,CAAC;AAAEI,cAAAA,IAAI,EAAE,aAAR;AAAuBiB,cAAAA,KAAK,EAAE;AAAEF,gBAAAA,QAAQ,EAAErB,EAAE,CAAC0B;AAAf;AAA9B,aAAD,CAAJ;AACD,WAFD;AAGD,SA/BH;AAgCD,OAjCD,MAiCO;AACLxB,QAAAA,IAAI;AACL;AACF;AACF,GA3CD,MA2CO;AACL,QAAIJ,SAAS,CAAC6B,OAAV,CAAkB3B,EAAE,CAACM,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAJ,MAAAA,IAAI;AACL,KAHD,MAGO;AACLA,MAAAA,IAAI,CAAC;AAAEI,QAAAA,IAAI,EAAE,aAAR;AAAuBiB,QAAAA,KAAK,EAAE;AAAEF,UAAAA,QAAQ,EAAErB,EAAE,CAAC0B;AAAf;AAA9B,OAAD,CAAJ;AACAnC,MAAAA,SAAS,CAACgB,IAAV,GAFK,CAEY;AAClB;AACF;AACF,CAvDD;AAyDAlB,MAAM,CAACuC,SAAP,CAAiB,YAAM;AACrBrC,EAAAA,SAAS,CAACgB,IAAV,GADqB,CACJ;AAClB,CAFD","sourcesContent":["import Vue from 'vue'\nimport router from './router'\nimport store from './store'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport notification from 'ant-design-vue/es/notification'\nimport { ACCESS_TOKEN,INDEX_MAIN_PAGE_PATH } from '@/store/mutation-types'\nimport { generateIndexRouter } from \"@/utils/util\"\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/test/cesium','/user/login', '/user/register', '/user/register-result','/user/alteration'] // no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start() // start progress bar\n\n  if (Vue.ls.get(ACCESS_TOKEN)) {\n    /* has token */\n    if (to.path === '/user/login') {\n      next({ path: INDEX_MAIN_PAGE_PATH })\n      NProgress.done()\n    } else {\n      if (store.getters.permissionList.length === 0) {\n        store.dispatch('GetPermissionList').then(res => {\n              const menuData = res.result.menu;\n              //console.log(res.message)\n              if (menuData === null || menuData === \"\" || menuData === undefined) {\n                return;\n              }\n              let constRoutes = [];\n              constRoutes = generateIndexRouter(menuData);\n              // 添加主界面路由\n              store.dispatch('UpdateAppRouter',  { constRoutes }).then(() => {\n                // 根据roles权限生成可访问的路由表\n                // 动态添加可访问路由表\n                router.addRoutes(store.getters.addRouters)\n                const redirect = decodeURIComponent(from.query.redirect || to.path)\n                if (to.path === redirect) {\n                  // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n                  next({ ...to, replace: true })\n                } else {\n                  // 跳转到目的路由\n                  next({ path: redirect })\n                }\n              })\n            })\n          .catch(() => {\n           /* notification.error({\n              message: '系统提示',\n              description: '请求用户信息失败，请重试！'\n            })*/\n            store.dispatch('Logout').then(() => {\n              next({ path: '/user/login', query: { redirect: to.fullPath } })\n            })\n          })\n      } else {\n        next()\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next()\n    } else {\n      next({ path: '/user/login', query: { redirect: to.fullPath } })\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  NProgress.done() // finish progress bar\n})\n"]}]}