{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleAuthModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleAuthModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryTreeListForDeptRole, queryDeptRolePermission, saveDeptRolePermission } from '@/api/api';\nimport RoleDataruleModal from './RoleDataruleModal.vue';\nimport DeptRoleDataruleModal from './DeptRoleDataruleModal';\nexport default {\n  name: \"DeptRoleAuthModal\",\n  components: {\n    DeptRoleDataruleModal: DeptRoleDataruleModal,\n    RoleDataruleModal: RoleDataruleModal\n  },\n  data: function data() {\n    return {\n      departId: \"\",\n      roleId: \"\",\n      treeData: [],\n      defaultCheckedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      expandedKeysss: [],\n      allTreeKeys: [],\n      autoExpandParent: true,\n      checkStrictly: true,\n      title: \"部门角色权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys: []\n    };\n  },\n  methods: {\n    switchCheckStrictly: function switchCheckStrictly(v) {\n      if (v == 1) {\n        this.checkStrictly = false;\n      } else if (v == 2) {\n        this.checkStrictly = true;\n      }\n    },\n    onTreeNodeSelect: function onTreeNodeSelect(id) {\n      if (id && id.length > 0) {\n        this.selectedKeys = id;\n      }\n\n      this.$refs.datarule.show(this.selectedKeys[0], this.departId, this.roleId);\n    },\n    onCheck: function onCheck(o) {\n      if (this.checkStrictly) {\n        this.checkedKeys = o.checked;\n      } else {\n        this.checkedKeys = o;\n      }\n    },\n    show: function show(roleId, departId) {\n      this.departId = departId;\n      this.roleId = roleId;\n      this.visible = true;\n    },\n    close: function close() {\n      this.reset();\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    reset: function reset() {\n      this.expandedKeysss = [];\n      this.checkedKeys = [];\n      this.defaultCheckedKeys = [];\n      this.loading = false;\n    },\n    expandAll: function expandAll() {\n      this.expandedKeysss = this.allTreeKeys;\n    },\n    closeAll: function closeAll() {\n      this.expandedKeysss = [];\n    },\n    checkALL: function checkALL() {\n      this.checkedKeys = this.allTreeKeys;\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.checkedKeys = [];\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleSubmit: function handleSubmit(exit) {\n      var _this = this;\n\n      var that = this;\n      var params = {\n        roleId: that.roleId,\n        permissionIds: that.checkedKeys.join(\",\"),\n        lastpermissionIds: that.defaultCheckedKeys.join(\",\")\n      };\n      that.loading = true;\n      console.log(\"请求参数：\", params);\n      saveDeptRolePermission(params).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.loading = false;\n\n          if (exit) {\n            that.close();\n          }\n        } else {\n          that.$message.error(res.message);\n          that.loading = false;\n\n          if (exit) {\n            that.close();\n          }\n        }\n\n        _this.loadData();\n      });\n    },\n    convertTreeListToKeyLeafPairs: function convertTreeListToKeyLeafPairs(treeList) {\n      var keyLeafPair = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = treeList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              key = _step$value.key,\n              isLeaf = _step$value.isLeaf,\n              children = _step$value.children;\n          keyLeafPair.push({\n            key: key,\n            isLeaf: isLeaf\n          });\n\n          if (children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return keyLeafPair;\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      queryTreeListForDeptRole({\n        departId: this.departId\n      }).then(function (res) {\n        _this2.treeData = res.result.treeList;\n        _this2.allTreeKeys = res.result.ids;\n        queryDeptRolePermission({\n          roleId: _this2.roleId\n        }).then(function (res) {\n          _this2.checkedKeys = _toConsumableArray(res.result);\n          _this2.defaultCheckedKeys = _toConsumableArray(res.result);\n          _this2.expandedKeysss = _this2.allTreeKeys;\n        });\n      });\n    }\n  },\n  watch: {\n    visible: function visible() {\n      if (this.visible) {\n        this.loadData();\n      }\n    }\n  }\n};",{"version":3,"sources":["DeptRoleAuthModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=650\n    placement=\"right\"\n    :closable=\"true\"\n    @close=\"close\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n\n    <a-form>\n      <a-form-item label='所拥有的部门权限'>\n\n        <a-tree\n          v-if=\"treeData.length>0\"\n          checkable\n          @check=\"onCheck\"\n          :checkedKeys=\"checkedKeys\"\n          :treeData=\"treeData\"\n          @expand=\"onExpand\"\n          @select=\"onTreeNodeSelect\"\n          :selectedKeys=\"selectedKeys\"\n          :expandedKeys=\"expandedKeysss\"\n          :checkStrictly=\"checkStrictly\">\n          <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\n            {{ slotTitle }}<a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\n          </span>\n        </a-tree>\n        <div v-else><h3>无可配置部门权限!</h3></div>\n      </a-form-item>\n    </a-form>\n\n    <div class=\"drawer-bootom-button\">\n      <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"switchCheckStrictly(1)\">父子关联</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"switchCheckStrictly(2)\">取消关联</a-menu-item>\n          <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\n          <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\n          <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\n          <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\n        </a-menu>\n        <a-button>\n          树操作 <a-icon type=\"up\" />\n        </a-button>\n      </a-dropdown>\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"close\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit(false)\" type=\"primary\" :loading=\"loading\" ghost style=\"margin-right: 0.8rem\">仅保存</a-button>\n      <a-button @click=\"handleSubmit(true)\" type=\"primary\" :loading=\"loading\">保存并关闭</a-button>\n    </div>\n    <dept-role-datarule-modal ref=\"datarule\"></dept-role-datarule-modal>\n  </a-drawer>\n\n</template>\n<script>\n  import {queryTreeListForDeptRole,queryDeptRolePermission,saveDeptRolePermission} from '@/api/api'\n  import RoleDataruleModal from './RoleDataruleModal.vue'\n  import DeptRoleDataruleModal from './DeptRoleDataruleModal'\n\n  export default {\n    name: \"DeptRoleAuthModal\",\n    components:{\n      DeptRoleDataruleModal,\n      RoleDataruleModal\n    },\n    data(){\n      return {\n        departId:\"\",\n        roleId:\"\",\n        treeData: [],\n        defaultCheckedKeys:[],\n        checkedKeys:[],\n        halfCheckedKeys:[],\n        expandedKeysss:[],\n        allTreeKeys:[],\n        autoExpandParent: true,\n        checkStrictly: true,\n        title:\"部门角色权限配置\",\n        visible: false,\n        loading: false,\n        selectedKeys:[]\n      }\n    },\n    methods: {\n      switchCheckStrictly (v) {\n        if(v==1){\n          this.checkStrictly = false\n        }else if(v==2){\n          this.checkStrictly = true\n        }\n      },\n      onTreeNodeSelect(id){\n        if(id && id.length>0){\n          this.selectedKeys = id\n        }\n        this.$refs.datarule.show(this.selectedKeys[0],this.departId,this.roleId)\n      },\n      onCheck (o) {\n        if(this.checkStrictly){\n          this.checkedKeys = o.checked;\n        }else{\n          this.checkedKeys = o\n        }\n      },\n      show(roleId,departId){\n        this.departId = departId\n        this.roleId=roleId\n        this.visible = true;\n      },\n      close () {\n        this.reset()\n        this.$emit('close');\n        this.visible = false;\n      },\n      onExpand(expandedKeys){\n        this.expandedKeysss = expandedKeys;\n        this.autoExpandParent = false\n      },\n      reset () {\n        this.expandedKeysss = []\n        this.checkedKeys = []\n        this.defaultCheckedKeys = []\n        this.loading = false\n      },\n      expandAll () {\n        this.expandedKeysss = this.allTreeKeys\n      },\n      closeAll () {\n        this.expandedKeysss = []\n      },\n      checkALL () {\n        this.checkedKeys = this.allTreeKeys\n      },\n      cancelCheckALL () {\n        this.checkedKeys = []\n      },\n      handleCancel () {\n        this.close()\n      },\n      handleSubmit(exit) {\n        let that = this;\n        let params =  {\n          roleId:that.roleId,\n          permissionIds:that.checkedKeys.join(\",\"),\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n        };\n        that.loading = true;\n        console.log(\"请求参数：\",params);\n        saveDeptRolePermission(params).then((res)=>{\n          if(res.success){\n            that.$message.success(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }else {\n            that.$message.error(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }\n          this.loadData();\n        })\n      },\n      convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n        for(const {key, isLeaf, children} of treeList) {\n          keyLeafPair.push({key, isLeaf})\n          if(children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n          }\n        }\n        return keyLeafPair;\n      },\n      loadData(){\n        queryTreeListForDeptRole({departId:this.departId}).then((res) => {\n          this.treeData = res.result.treeList\n          this.allTreeKeys = res.result.ids\n          queryDeptRolePermission({roleId:this.roleId}).then((res)=>{\n            this.checkedKeys = [...res.result];\n            this.defaultCheckedKeys = [...res.result];\n            this.expandedKeysss = this.allTreeKeys;\n          })\n        })\n      }\n    },\n    watch: {\n      visible () {\n        if (this.visible ) {\n          this.loadData();\n        }\n      }\n    }\n  }\n\n</script>\n<style lang=\"less\" scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n\n</style>"],"sourceRoot":"src/views/system/modules"}]}