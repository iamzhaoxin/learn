{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysCategoryModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\SysCategoryModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction, getAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport JTreeSelect from '@/components/jeecg/JTreeSelect';\nexport default {\n  name: \"SysCategoryModal\",\n  components: {\n    JTreeSelect: JTreeSelect\n  },\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      title: \"操作\",\n      width: 800,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        code: {\n          rules: [{\n            required: true,\n            message: '请输入类型编码!'\n          }, {\n            validator: this.validateMyCode\n          }]\n        },\n        pid: {},\n        name: {\n          rules: [{\n            required: true,\n            message: '请输入类型名称!'\n          }]\n        }\n      },\n      url: {\n        add: \"/sys/category/add\",\n        edit: \"/sys/category/edit\",\n        checkCode: \"/sys/category/checkCode\"\n      },\n      expandedRowKeys: [],\n      pidField: \"pid\",\n      subExpandedKeys: []\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'pid', 'name', 'code'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this2.model, values);\n          console.log(\"表单提交数据\", formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.submitSuccess(formData);\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    popupCallback: function popupCallback(row) {\n      this.form.setFieldsValue(pick(row, 'pid', 'name', 'code'));\n    },\n    submitSuccess: function submitSuccess(formData) {\n      if (!formData.id) {\n        var treeData = this.$refs.treeSelect.getCurrTreeData();\n        this.expandedRowKeys = [];\n        this.getExpandKeysByPid(formData[this.pidField], treeData, treeData);\n\n        if (formData.pid && this.expandedRowKeys.length == 0) {\n          this.expandedRowKeys = this.subExpandedKeys;\n        }\n\n        this.$emit('ok', formData, this.expandedRowKeys.reverse());\n      } else {\n        this.$emit('ok', formData);\n      }\n    },\n    getExpandKeysByPid: function getExpandKeysByPid(pid, arr, all) {\n      if (pid && arr && arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].key == pid) {\n            this.expandedRowKeys.push(arr[i].key);\n            this.getExpandKeysByPid(arr[i]['parentId'], all, all);\n          } else {\n            this.getExpandKeysByPid(pid, arr[i].children, all);\n          }\n        }\n      }\n    },\n    validateMyCode: function validateMyCode(rule, value, callback) {\n      var params = {\n        pid: this.form.getFieldValue('pid'),\n        code: value\n      };\n      getAction(this.url.checkCode, params).then(function (res) {\n        if (res.success) {\n          callback();\n        } else {\n          callback(res.message);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["SysCategoryModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-modal\n    :title=\"title\"\n    :width=\"width\"\n    :visible=\"visible\"\n    :confirmLoading=\"confirmLoading\"\n    @ok=\"handleOk\"\n    @cancel=\"handleCancel\"\n    :destroyOnClose=\"true\"\n    cancelText=\"关闭\">\n    <a-spin :spinning=\"confirmLoading\">\n      <a-form :form=\"form\">\n\n        <a-form-item label=\"父级节点\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <j-tree-select\n            ref=\"treeSelect\"\n            placeholder=\"请选择父级节点\"\n            v-decorator=\"['pid', validatorRules.pid]\"\n            dict=\"sys_category,name,id\"\n            pidField=\"pid\"\n            pidValue=\"0\">\n          </j-tree-select>\n        </a-form-item>\n          \n        <a-form-item label=\"分类名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input v-decorator=\"[ 'name', validatorRules.name]\" placeholder=\"请输入分类名称\"></a-input>\n        </a-form-item>\n          \n        <!--<a-form-item label=\"类型编码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <a-input v-decorator=\"[ 'code', validatorRules.code]\" placeholder=\"请输入类型编码\"></a-input>\n        </a-form-item>-->\n\n        <!--<a-form-item :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n          <span style=\"font-size: 12px;color:red\" slot=\"label\">编码规则(注)</span>\n          <span style=\"font-size: 12px;color:red\">\n            编码值前缀需和父节点保持一致,比如父级节点编码是A01则当前编码必须以A01开头\n          </span>\n        </a-form-item>-->\n          \n        \n      </a-form>\n    </a-spin>\n  </a-modal>\n</template>\n\n<script>\n\n  import { httpAction,getAction } from '@/api/manage'\n  import pick from 'lodash.pick'\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\n  \n  export default {\n    name: \"SysCategoryModal\",\n    components: { \n      JTreeSelect\n    },\n    data () {\n      return {\n        form: this.$form.createForm(this),\n        title:\"操作\",\n        width:800,\n        visible: false,\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n\n        confirmLoading: false,\n        validatorRules:{\n          code:{\n            rules: [{\n              required: true, message: '请输入类型编码!'\n            },{\n              validator: this.validateMyCode\n            }]\n          },\n          pid:{},\n          name:{rules: [{ required: true, message: '请输入类型名称!' }]}\n        },\n        url: {\n          add: \"/sys/category/add\",\n          edit: \"/sys/category/edit\",\n          checkCode:\"/sys/category/checkCode\",\n        },\n        expandedRowKeys:[],\n        pidField:\"pid\",\n        subExpandedKeys:[]\n     \n      }\n    },\n    created () {\n    },\n    methods: {\n      add () {\n        this.edit({});\n      },\n      edit (record) {\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'pid','name','code'))\n        })\n      },\n      close () {\n        this.$emit('close');\n        this.visible = false;\n      },\n      handleOk () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = '';\n            if(!this.model.id){\n              httpurl+=this.url.add;\n              method = 'post';\n            }else{\n              httpurl+=this.url.edit;\n               method = 'put';\n            }\n            let formData = Object.assign(this.model, values);\n            console.log(\"表单提交数据\",formData)\n            httpAction(httpurl,formData,method).then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.submitSuccess(formData)\n              }else{\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n              that.close();\n            })\n          }\n         \n        })\n      },\n      handleCancel () {\n        this.close()\n      },\n      popupCallback(row){\n        this.form.setFieldsValue(pick(row,'pid','name','code'))\n      },\n      submitSuccess(formData){\n        if(!formData.id){\n          let treeData = this.$refs.treeSelect.getCurrTreeData()\n          this.expandedRowKeys=[]\n          this.getExpandKeysByPid(formData[this.pidField],treeData,treeData)\n          if(formData.pid && this.expandedRowKeys.length==0){\n            this.expandedRowKeys = this.subExpandedKeys;\n          }\n          this.$emit('ok',formData,this.expandedRowKeys.reverse());\n        }else{\n          this.$emit('ok',formData);\n      }\n      },\n      getExpandKeysByPid(pid,arr,all){\n        if(pid && arr && arr.length>0){\n          for(let i=0;i<arr.length;i++){\n            if(arr[i].key==pid){\n              this.expandedRowKeys.push(arr[i].key)\n              this.getExpandKeysByPid(arr[i]['parentId'],all,all)\n            }else{\n              this.getExpandKeysByPid(pid,arr[i].children,all)\n            }\n          }\n        }\n      },\n      validateMyCode(rule, value, callback){\n        let params = {\n          pid: this.form.getFieldValue('pid'),\n          code: value\n        }\n        getAction(this.url.checkCode,params).then((res) => {\n          if (res.success) {\n            callback()\n          } else {\n            callback(res.message)\n          }\n        })\n      },\n      \n      \n    }\n  }\n</script>"],"sourceRoot":"src/views/system/modules"}]}