{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\jeecg\\ImagCropper.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\jeecg\\ImagCropper.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["var _name$components$data;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VueCropper } from 'vue-cropper';\nexport default (_name$components$data = {\n  name: 'ImagCropper',\n  components: {\n    VueCropper: VueCropper\n  },\n  data: function data() {\n    return {\n      model: false,\n      modelSrc: \"\",\n      crap: false,\n      previews: {},\n      lists: [{\n        img: \"https://avatars2.githubusercontent.com/u/15681693?s=460&v=4\"\n      }, {\n        img: \"http://cdn.xyxiao.cn/Landscape_1.jpg\"\n      }, {\n        img: \"http://cdn.xyxiao.cn/Landscape_2.jpg\"\n      }, {\n        img: \"http://cdn.xyxiao.cn/Landscape_3.jpg\"\n      }, {\n        img: \"http://cdn.xyxiao.cn/Landscape_4.jpg\"\n      }, {\n        img: \"http://cdn.xyxiao.cn/Portrait_1.jpg\"\n      }, {\n        img: \"http://cdn.xyxiao.cn/Portrait_2.jpg\"\n      }],\n      option: {\n        img: \"\",\n        size: 1,\n        full: false,\n        outputType: \"png\",\n        canMove: true,\n        fixedBox: false,\n        original: false,\n        canMoveBox: true,\n        autoCrop: true,\n        // 只有自动截图开启 宽度高度才生效\n        autoCropWidth: 200,\n        autoCropHeight: 150,\n        centerBox: false,\n        high: false,\n        cropData: {},\n        enlarge: 1,\n        mode: 'contain',\n        maxImgSize: 3000,\n        limitMinSize: [100, 120]\n      },\n      example2: {\n        img: \"http://cdn.xyxiao.cn/Landscape_2.jpg\",\n        info: true,\n        size: 1,\n        outputType: \"jpeg\",\n        canScale: true,\n        autoCrop: true,\n        // 只有自动截图开启 宽度高度才生效\n        autoCropWidth: 300,\n        autoCropHeight: 250,\n        fixed: true,\n        // 真实的输出宽高\n        infoTrue: true,\n        fixedNumber: [4, 3]\n      },\n      example3: {\n        img: \"http://cdn.xyxiao.cn/Landscape_1.jpg\",\n        autoCrop: true,\n        autoCropWidth: 200,\n        autoCropHeight: 200,\n        fixedBox: true\n      },\n      downImg: \"#\",\n      previewStyle1: {},\n      previewStyle2: {},\n      previewStyle3: {},\n      previewStyle4: {},\n      code0: '',\n      code1: '',\n      code2: '',\n      code3: '',\n      preview3: ''\n    };\n  },\n  methods: {\n    changeImg: function changeImg() {\n      this.option.img = this.lists[~~(Math.random() * this.lists.length)].img;\n    },\n    startCrop: function startCrop() {\n      // start\n      this.crap = true;\n      this.$refs.cropper.startCrop();\n    },\n    stopCrop: function stopCrop() {\n      //  stop\n      this.crap = false;\n      this.$refs.cropper.stopCrop();\n    },\n    clearCrop: function clearCrop() {\n      // clear\n      this.$refs.cropper.clearCrop();\n    },\n    refreshCrop: function refreshCrop() {\n      // clear\n      this.$refs.cropper.refresh();\n    },\n    changeScale: function changeScale(num) {\n      num = num || 1;\n      this.$refs.cropper.changeScale(num);\n    },\n    rotateLeft: function rotateLeft() {\n      this.$refs.cropper.rotateLeft();\n    },\n    rotateRight: function rotateRight() {\n      this.$refs.cropper.rotateRight();\n    },\n    finish: function finish(type) {\n      var _this = this;\n\n      if (type === \"blob\") {\n        this.$refs.cropper.getCropBlob(function (data) {\n          var img = window.URL.createObjectURL(data);\n          _this.model = true;\n          _this.modelSrc = img;\n        });\n      } else {\n        this.$refs.cropper.getCropData(function (data) {\n          _this.model = true;\n          _this.modelSrc = data;\n        });\n      }\n    },\n    // 实时预览函数\n    realTime: function realTime(data) {\n      var previews = data;\n      var h = 0.5;\n      var w = 0.2;\n      this.previewStyle1 = {\n        width: previews.w + \"px\",\n        height: previews.h + \"px\",\n        overflow: \"hidden\",\n        margin: \"0\",\n        zoom: h\n      };\n      this.previewStyle2 = {\n        width: previews.w + \"px\",\n        height: previews.h + \"px\",\n        overflow: \"hidden\",\n        margin: \"0\",\n        zoom: w\n      };\n      this.previewStyle3 = {\n        width: previews.w + \"px\",\n        height: previews.h + \"px\",\n        overflow: \"hidden\",\n        margin: \"0\",\n        zoom: 100 / previews.w\n      };\n      this.previewStyle4 = {\n        width: previews.w + \"px\",\n        height: previews.h + \"px\",\n        overflow: \"hidden\",\n        margin: \"0\",\n        zoom: 100 / previews.h\n      };\n      this.previews = data;\n    },\n    finish2: function finish2(type) {\n      var _this2 = this;\n\n      this.$refs.cropper2.getCropData(function (data) {\n        _this2.model = true;\n        _this2.modelSrc = data;\n      });\n    },\n    finish3: function finish3(type) {\n      var _this3 = this;\n\n      this.$refs.cropper3.getCropData(function (data) {\n        _this3.model = true;\n        _this3.modelSrc = data;\n      });\n    },\n    down: function down(type) {\n      var _this4 = this;\n\n      // 输出\n      if (type === \"blob\") {\n        this.$refs.cropper.getCropBlob(function (data) {\n          _this4.downImg = window.URL.createObjectURL(data);\n\n          if (window.navigator.msSaveBlob) {\n            var blobObject = new Blob([data]);\n            window.navigator.msSaveBlob(blobObject, \"demo.png\");\n          } else {\n            _this4.$nextTick(function () {\n              _this4.$refs.downloadDom.click();\n            });\n          }\n        });\n      } else {\n        this.$refs.cropper.getCropData(function (data) {\n          _this4.downImg = data;\n\n          if (window.navigator.msSaveBlob) {\n            var blobObject = new Blob([data]);\n            window.navigator.msSaveBlob(blobObject, \"demo.png\");\n          } else {\n            _this4.$nextTick(function () {\n              _this4.$refs.downloadDom.click();\n            });\n          }\n        });\n      }\n    },\n    uploadImg: function uploadImg(e, num) {\n      var _this5 = this;\n\n      //上传图片\n      // this.option.img\n      var file = e.target.files[0];\n\n      if (!/\\.(gif|jpg|jpeg|png|bmp|GIF|JPG|PNG)$/.test(e.target.value)) {\n        alert(\"图片类型必须是.gif,jpeg,jpg,png,bmp中的一种\");\n        return false;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        var data;\n\n        if (_typeof(e.target.result) === \"object\") {\n          // 把Array Buffer转化为blob 如果是base64不需要\n          data = window.URL.createObjectURL(new Blob([e.target.result]));\n        } else {\n          data = e.target.result;\n        }\n\n        if (num === 1) {\n          _this5.option.img = data;\n        } else if (num === 2) {\n          _this5.example2.img = data;\n        }\n\n        _this5.$refs.uploadImg.value = '';\n      }; // 转化为blob\n\n\n      reader.readAsArrayBuffer(file);\n    },\n    imgLoad: function imgLoad(msg) {\n      console.log(msg);\n    },\n    cropMoving: function cropMoving(data) {\n      this.option.cropData = data;\n    }\n  }\n}, _defineProperty(_name$components$data, \"components\", {\n  VueCropper: VueCropper\n}), _defineProperty(_name$components$data, \"mounted\", function mounted() {\n  this.changeImg();\n  var list = [].slice.call(document.querySelectorAll(\"pre code\"));\n  list.forEach(function (val, index) {\n    hljs.highlightBlock(val);\n  });\n}), _name$components$data);",{"version":3,"sources":["ImagCropper.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"model\" v-show=\"model\">\n      <div class=\"model-show\" @click=\"model = false\">\n        <img :src=\"modelSrc\" alt=\"\" @click=\"model = false\">\n      </div>\n    </div>\n    <div class=\"content\">\n      <div class=\"show-info\">\n        <div class=\"test test1\">\n          <vueCropper\n            ref=\"cropper\"\n            :img=\"option.img\"\n            :outputSize=\"option.size\"\n            :outputType=\"option.outputType\"\n            :info=\"true\"\n            :full=\"option.full\"\n            :canMove=\"option.canMove\"\n            :canMoveBox=\"option.canMoveBox\"\n            :fixedBox=\"option.fixedBox\"\n            :original=\"option.original\"\n            :autoCrop=\"option.autoCrop\"\n            :autoCropWidth=\"option.autoCropWidth\"\n            :autoCropHeight=\"option.autoCropHeight\"\n            :centerBox=\"option.centerBox\"\n            :high=\"option.high\"\n            :infoTrue=\"option.infoTrue\"\n            :maxImgSize=\"option.maxImgSize\"\n            @realTime=\"realTime\"\n            @imgLoad=\"imgLoad\"\n            @cropMoving=\"cropMoving\"\n            :enlarge=\"option.enlarge\"\n            :mode=\"option.mode\"\n            :limitMinSize=\"option.limitMinSize\"\n          ></vueCropper>\n        </div>\n        <div class=\"test-button\">\n          <button @click=\"changeImg\" class=\"btn\">changeImg</button>\n          <label class=\"btn\" for=\"uploads\">upload</label>\n          <input type=\"file\" id=\"uploads\" style=\"position:absolute; clip:rect(0 0 0 0);\" accept=\"image/png, image/jpeg, image/gif, image/jpg\" @change=\"uploadImg($event, 1)\" ref=\"uploadImg\">\n          <button @click=\"startCrop\" v-if=\"!crap\" class=\"btn\">start</button>\n          <button @click=\"stopCrop\" v-else class=\"btn\">stop</button>\n          <button @click=\"clearCrop\" class=\"btn\">clear</button>\n          <button @click=\"refreshCrop\" class=\"btn\">refresh</button>\n          <button @click=\"changeScale(1)\" class=\"btn\">+</button>\n          <button @click=\"changeScale(-1)\" class=\"btn\">-</button>\n          <button @click=\"rotateLeft\" class=\"btn\">rotateLeft</button>\n          <button @click=\"rotateRight\" class=\"btn\">rotateRight</button>\n          <button @click=\"finish('base64')\" class=\"btn\">preview(base64)</button>\n          <button @click=\"finish('blob')\" class=\"btn\">preview(blob)</button>\n          <button @click=\"() => option.img = ''\" class=\"btn\">清除图片</button>\n          <a @click=\"down('base64')\" class=\"btn\">download(base64)</a>\n          <a @click=\"down('blob')\" class=\"btn\">download(blob)</a>\n          <a :href=\"downImg\" download=\"demo.png\" ref=\"downloadDom\"></a>\n        </div>\n\n        <div class=\"pre\">\n          <section class=\"pre-item\">\n            <p>截图框大小</p>\n            <div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px',  'overflow': 'hidden',\n\t\t\t\t\t\t\t'margin': '5px'}\">\n              <div :style=\"previews.div\">\n                <img :src=\"previews.url\" :style=\"previews.img\">\n              </div>\n            </div>\n          </section>\n\n          <section class=\"pre-item\">\n            <p>中等大小</p>\n            <div :style=\"previewStyle1\">\n              <div :style=\"previews.div\">\n                <img :src=\"previews.url\" :style=\"previews.img\">\n              </div>\n            </div>\n          </section>\n\n          <section class=\"pre-item\">\n            <p>迷你大小</p>\n            <div :style=\"previewStyle2\">\n              <div :style=\"previews.div\">\n                <img :src=\"previews.url\" :style=\"previews.img\">\n              </div>\n            </div>\n          </section>\n\n          <section class=\"pre-item\" title=\"zoom: (100 / previews.w)\">\n            <p>固定为100宽度</p>\n            <div :style=\"previewStyle3\">\n              <div :style=\"previews.div\">\n                <img :src=\"previews.url\" :style=\"previews.img\">\n              </div>\n            </div>\n          </section>\n\n          <section class=\"pre-item\" title=\"zoom: (100 / previews.h)\">\n            <p>固定为100高度</p>\n            <div :style=\"previewStyle4\">\n              <div :style=\"previews.div\">\n                <img :src=\"previews.url\" :style=\"previews.img\">\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div style=\"display:block; width: 100%;\">\n          <label class=\"c-item\">\n            <span>图片默认渲染方式</span>\n            <select v-model=\"option.mode\">\n              <option value=\"contain\">contain</option>\n              <option value=\"cover\">cover</option>\n              <option value=\"400px auto\">400px auto</option>\n              <option value=\"auto 400px\">auto 400px</option>\n              <option value=\"50%\">50%</option>\n              <option value=\"auto 50%\">auto 50%</option>\n            </select>\n            <section>\n              类似css background属性设置  设置不符合规范不生效， 参照文档说明\n            </section>\n          </label>\n          <label class=\"c-item\">\n            <span>上传时图片最大大小(默认会压缩尺寸到这个大小)</span>\n            <input type=\"nubmer\" v-model=\"option.maxImgSize\">\n          </label>\n          <label class=\"c-item\">\n            <span>上传图片是否显示原始宽高 (针对大图 可以铺满)</span>\n            <input type=\"checkbox\" v-model=\"option.original\">\n            <span>original: {{ option.original}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>是否根据dpr生成适合屏幕的高清图片</span>\n            <input type=\"checkbox\" v-model=\"option.high\">\n            <span>high: {{ option.high}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>是否输出原图比例的截图</span>\n            <input type=\"checkbox\" v-model=\"option.full\">\n            <span>full: {{ option.full}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>截图信息展示是否是真实的输出宽高</span>\n            <input type=\"checkbox\" v-model=\"option.infoTrue\">\n            <span>infoTrue: {{ option.infoTrue}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>能否拖动图片</span>\n            <input type=\"checkbox\" v-model=\"option.canMove\">\n            <span>canMove: {{ option.canMove}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>能否拖动截图框</span>\n            <input type=\"checkbox\" v-model=\"option.canMoveBox\">\n            <span>canMoveBox: {{ option.canMoveBox}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>截图框固定大小</span>\n            <input type=\"checkbox\" v-model=\"option.fixedBox\">\n            <span>fixedBox: {{ option.fixedBox}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>是否自动生成截图框</span>\n            <input type=\"checkbox\" v-model=\"option.autoCrop\">\n            <span>autoCrop: {{ option.autoCrop}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>自动生成截图框的宽高</span>\n            <span>宽度:  </span><input type=\"number\" v-model=\"option.autoCropWidth\">\n            <span>高度:  </span><input type=\"number\" v-model=\"option.autoCropHeight\">\n          </label>\n          <label class=\"c-item\">\n            <span>截图框是否限制在图片里(只有在自动生成截图框时才能生效)</span>\n            <input type=\"checkbox\" v-model=\"option.centerBox\">\n            <span>centerBox: {{ option.centerBox}}</span>\n          </label>\n          <label class=\"c-item\">\n            <span>是否按照截图框比例输出 默认为1 </span>\n            <input type=\"number\" v-model=\"option.enlarge\">\n          </label>\n          <p>输出图片格式</p>\n          <label class=\"c-item\">\n            <label>jpg  <input type=\"radio\" name=\"type\" value=\"jpeg\" v-model=\"option.outputType\"></label>\n            <label>png  <input type=\"radio\" name=\"type\" value=\"png\" v-model=\"option.outputType\"></label>\n            <label>webp <input type=\"radio\" name=\"type\" value=\"webp\" v-model=\"option.outputType\"></label>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { VueCropper } from 'vue-cropper'\n\n  export default {\n    name: 'ImagCropper',\n    components: {\n      VueCropper\n    },\n    data () {\n      return {\n        model: false,\n        modelSrc: \"\",\n        crap: false,\n        previews: {},\n        lists: [\n          {img: \"https://avatars2.githubusercontent.com/u/15681693?s=460&v=4\"},\n          {img: \"http://cdn.xyxiao.cn/Landscape_1.jpg\"},\n          {img: \"http://cdn.xyxiao.cn/Landscape_2.jpg\"},\n          {img: \"http://cdn.xyxiao.cn/Landscape_3.jpg\"},\n          {img: \"http://cdn.xyxiao.cn/Landscape_4.jpg\"},\n          {img: \"http://cdn.xyxiao.cn/Portrait_1.jpg\"},\n          {img: \"http://cdn.xyxiao.cn/Portrait_2.jpg\"}\n        ],\n        option: {\n          img: \"\",\n          size: 1,\n          full: false,\n          outputType: \"png\",\n          canMove: true,\n          fixedBox: false,\n          original: false,\n          canMoveBox: true,\n          autoCrop: true,\n          // 只有自动截图开启 宽度高度才生效\n          autoCropWidth: 200,\n          autoCropHeight: 150,\n          centerBox: false,\n          high: false,\n          cropData: {},\n          enlarge: 1,\n          mode: 'contain',\n          maxImgSize: 3000,\n          limitMinSize: [100, 120]\n        },\n        example2: {\n          img: \"http://cdn.xyxiao.cn/Landscape_2.jpg\",\n          info: true,\n          size: 1,\n          outputType: \"jpeg\",\n          canScale: true,\n          autoCrop: true,\n          // 只有自动截图开启 宽度高度才生效\n          autoCropWidth: 300,\n          autoCropHeight: 250,\n          fixed: true,\n          // 真实的输出宽高\n          infoTrue: true,\n          fixedNumber: [4, 3]\n        },\n        example3: {\n          img: \"http://cdn.xyxiao.cn/Landscape_1.jpg\",\n          autoCrop: true,\n          autoCropWidth: 200,\n          autoCropHeight: 200,\n          fixedBox: true\n        },\n        downImg: \"#\",\n        previewStyle1: {},\n        previewStyle2: {},\n        previewStyle3: {},\n        previewStyle4: {},\n        code0: '',\n        code1: '',\n        code2: '',\n        code3: '',\n        preview3: '',\n      };\n    },\n    methods: {\n      changeImg() {\n        this.option.img = this.lists[~~(Math.random() * this.lists.length)].img;\n      },\n      startCrop() {\n        // start\n        this.crap = true;\n        this.$refs.cropper.startCrop();\n      },\n      stopCrop() {\n        //  stop\n        this.crap = false;\n        this.$refs.cropper.stopCrop();\n      },\n      clearCrop() {\n        // clear\n        this.$refs.cropper.clearCrop();\n      },\n      refreshCrop() {\n        // clear\n        this.$refs.cropper.refresh();\n      },\n      changeScale(num) {\n        num = num || 1;\n        this.$refs.cropper.changeScale(num);\n      },\n      rotateLeft() {\n        this.$refs.cropper.rotateLeft();\n      },\n      rotateRight() {\n        this.$refs.cropper.rotateRight();\n      },\n      finish(type) {\n        if (type === \"blob\") {\n          this.$refs.cropper.getCropBlob(data => {\n            var img = window.URL.createObjectURL(data);\n            this.model = true;\n            this.modelSrc = img;\n          });\n        } else {\n          this.$refs.cropper.getCropData(data => {\n            this.model = true;\n            this.modelSrc = data;\n          });\n        }\n      },\n      // 实时预览函数\n      realTime(data) {\n        var previews = data;\n        var h = 0.5;\n        var w = 0.2;\n\n        this.previewStyle1 = {\n          width: previews.w + \"px\",\n          height: previews.h + \"px\",\n          overflow: \"hidden\",\n          margin: \"0\",\n          zoom: h\n        };\n\n        this.previewStyle2 = {\n          width: previews.w + \"px\",\n          height: previews.h + \"px\",\n          overflow: \"hidden\",\n          margin: \"0\",\n          zoom: w\n        };\n\n        this.previewStyle3 = {\n          width: previews.w + \"px\",\n          height: previews.h + \"px\",\n          overflow: \"hidden\",\n          margin: \"0\",\n          zoom: (100 / previews.w)\n        };\n\n        this.previewStyle4 = {\n          width: previews.w + \"px\",\n          height: previews.h + \"px\",\n          overflow: \"hidden\",\n          margin: \"0\",\n          zoom: (100 / previews.h)\n        };\n\n        this.previews = data;\n      },\n\n      finish2(type) {\n        this.$refs.cropper2.getCropData(data => {\n          this.model = true;\n          this.modelSrc = data;\n        });\n      },\n      finish3(type) {\n        this.$refs.cropper3.getCropData(data => {\n          this.model = true;\n          this.modelSrc = data;\n        });\n      },\n      down(type) {\n        // 输出\n        if (type === \"blob\") {\n          this.$refs.cropper.getCropBlob(data => {\n            this.downImg = window.URL.createObjectURL(data);\n            if (window.navigator.msSaveBlob) {\n              var blobObject = new Blob([data]);\n              window.navigator.msSaveBlob(blobObject, \"demo.png\");\n            } else {\n              this.$nextTick(() => {\n                this.$refs.downloadDom.click();\n              });\n            }\n          });\n        } else {\n          this.$refs.cropper.getCropData(data => {\n            this.downImg = data;\n            if (window.navigator.msSaveBlob) {\n              var blobObject = new Blob([data]);\n              window.navigator.msSaveBlob(blobObject, \"demo.png\");\n            } else {\n              this.$nextTick(() => {\n                this.$refs.downloadDom.click();\n              });\n            }\n          });\n        }\n      },\n\n      uploadImg(e, num) {\n        //上传图片\n        // this.option.img\n        var file = e.target.files[0];\n        if (!/\\.(gif|jpg|jpeg|png|bmp|GIF|JPG|PNG)$/.test(e.target.value)) {\n          alert(\"图片类型必须是.gif,jpeg,jpg,png,bmp中的一种\");\n          return false;\n        }\n        var reader = new FileReader();\n        reader.onload = e => {\n          let data;\n          if (typeof e.target.result === \"object\") {\n            // 把Array Buffer转化为blob 如果是base64不需要\n            data = window.URL.createObjectURL(new Blob([e.target.result]));\n          } else {\n            data = e.target.result;\n          }\n          if (num === 1) {\n            this.option.img = data;\n          } else if (num === 2) {\n            this.example2.img = data;\n          }\n          this.$refs.uploadImg.value = ''\n        };\n        // 转化为blob\n        reader.readAsArrayBuffer(file);\n      },\n      imgLoad(msg) {\n        console.log(msg);\n      },\n\n      cropMoving(data) {\n        this.option.cropData = data;\n      }\n    },\n    components: {\n      VueCropper\n    },\n    mounted() {\n      this.changeImg();\n      var list = [].slice.call(document.querySelectorAll(\"pre code\"));\n      list.forEach((val, index) => {\n        hljs.highlightBlock(val);\n      });\n    }\n  };\n</script>\n\n<style scoped>\n  * {\n    margin: 0;\n    padding: 0;\n  }\n\n  .content {\n    margin: auto;\n    max-width: 1200px;\n    margin-bottom: 100px;\n  }\n\n  .test-button {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .btn {\n    display: inline-block;\n    line-height: 1;\n    white-space: nowrap;\n    cursor: pointer;\n    background: #fff;\n    border: 1px solid #c0ccda;\n    color: #1f2d3d;\n    text-align: center;\n    box-sizing: border-box;\n    outline: none;\n    margin: 20px 10px 0px 0px;\n    padding: 9px 15px;\n    font-size: 14px;\n    border-radius: 4px;\n    color: #fff;\n    background-color: #50bfff;\n    border-color: #50bfff;\n    transition: all 0.2s ease;\n    text-decoration: none;\n    user-select: none;\n  }\n\n  .des {\n    line-height: 30px;\n  }\n\n  code.language-html {\n    padding: 10px 20px;\n    margin: 10px 0px;\n    display: block;\n    background-color: #333;\n    color: #fff;\n    overflow-x: auto;\n    font-family: Consolas, Monaco, Droid, Sans, Mono, Source, Code, Pro, Menlo,\n    Lucida, Sans, Type, Writer, Ubuntu, Mono;\n    border-radius: 5px;\n    white-space: pre;\n  }\n\n  .show-info {\n    margin-bottom: 50px;\n  }\n\n  .show-info h2 {\n    line-height: 50px;\n  }\n\n  .title {\n    display: block;\n    text-decoration: none;\n    text-align: center;\n    line-height: 1.5;\n    margin: 20px 0px;\n    background-image: -webkit-linear-gradient(\n      left,\n      #3498db,\n      #f47920 10%,\n      #d71345 20%,\n      #f7acbc 30%,\n      #ffd400 40%,\n      #3498db 50%,\n      #f47920 60%,\n      #d71345 70%,\n      #f7acbc 80%,\n      #ffd400 90%,\n      #3498db\n    );\n    color: transparent;\n    -webkit-background-clip: text;\n    background-size: 200% 100%;\n    animation: slide 5s infinite linear;\n    font-size: 40px;\n  }\n\n  .test {\n    height: 500px;\n  }\n\n  .model {\n    position: fixed;\n    z-index: 10;\n    width: 100vw;\n    height: 100vh;\n    overflow: auto;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.8);\n  }\n\n  .model-show {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n    text-align: center;\n  }\n\n  .model img {\n    display: block;\n    margin: auto;\n    max-width: 80%;\n    width: auto;\n    user-select: none;\n    background-position: 0px 0px, 10px 10px;\n    background-size: 20px 20px;\n    background-image: linear-gradient(\n      45deg,\n      #eee 25%,\n      transparent 25%,\n      transparent 75%,\n      #eee 75%,\n      #eee 100%\n    ),\n    linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);\n  }\n\n  .c-item {\n    display: block;\n    padding: 10px 0;\n    user-select: none;\n  }\n\n  .pre {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .pre-item {\n    padding-right: 20px;\n  }\n\n  @keyframes slide {\n    0% {\n      background-position: 0 0;\n    }\n    100% {\n      background-position: -100% 0;\n    }\n  }\n\n  @media screen and (max-width: 1000px) {\n    .content {\n      max-width: 90%;\n      margin: auto;\n    }\n\n    .test {\n      height: 400px;\n    }\n  }\n</style>"],"sourceRoot":"src/views/jeecg"}]}