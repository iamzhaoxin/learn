{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\chart\\LineChartMultid.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\chart\\LineChartMultid.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DataSet } from '@antv/data-set';\nimport { ChartEventMixins } from './mixins/ChartMixins';\nexport default {\n  name: 'LineChartMultid',\n  mixins: [ChartEventMixins],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [{\n          type: 'Jan',\n          jeecg: 7.0,\n          jeebt: 3.9\n        }, {\n          type: 'Feb',\n          jeecg: 6.9,\n          jeebt: 4.2\n        }, {\n          type: 'Mar',\n          jeecg: 9.5,\n          jeebt: 5.7\n        }, {\n          type: 'Apr',\n          jeecg: 14.5,\n          jeebt: 8.5\n        }, {\n          type: 'May',\n          jeecg: 18.4,\n          jeebt: 11.9\n        }, {\n          type: 'Jun',\n          jeecg: 21.5,\n          jeebt: 15.2\n        }, {\n          type: 'Jul',\n          jeecg: 25.2,\n          jeebt: 17.0\n        }, {\n          type: 'Aug',\n          jeecg: 26.5,\n          jeebt: 16.6\n        }, {\n          type: 'Sep',\n          jeecg: 23.3,\n          jeebt: 14.2\n        }, {\n          type: 'Oct',\n          jeecg: 18.3,\n          jeebt: 10.3\n        }, {\n          type: 'Nov',\n          jeecg: 13.9,\n          jeebt: 6.6\n        }, {\n          type: 'Dec',\n          jeecg: 9.6,\n          jeebt: 4.8\n        }];\n      }\n    },\n    fields: {\n      type: Array,\n      default: function _default() {\n        return ['jeecg', 'jeebt'];\n      }\n    },\n    // 别名，需要的格式：[{field:'name',alias:'姓名'}, {field:'sex',alias:'性别'}]\n    aliases: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    height: {\n      type: Number,\n      default: 254\n    }\n  },\n  data: function data() {\n    return {\n      scale: [{\n        type: 'cat',\n        dataKey: 'x',\n        min: 0,\n        max: 1\n      }],\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      }\n    };\n  },\n  computed: {\n    data: function data() {\n      var _this = this;\n\n      var dv = new DataSet.View().source(this.dataSource);\n      dv.transform({\n        type: 'fold',\n        fields: this.fields,\n        key: 'x',\n        value: 'y'\n      });\n      var rows = dv.rows; // 替换别名\n\n      rows.forEach(function (row) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _this.aliases[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            if (item.field === row.x) {\n              row.x = item.alias;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n      return rows;\n    }\n  }\n};",{"version":3,"sources":["LineChartMultid.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,SAAA,OAAA,QAAA,gBAAA;AACA,SAAA,gBAAA,QAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,MAAA,EAAA,CAAA,gBAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,esBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,CAAA,OAAA,EAAA,OAAA,CAAA;AAAA;AAFA,KAtBA;AA0BA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KA3BA;AA+BA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA/BA,GAHA;AAuCA,EAAA,IAvCA,kBAuCA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,OAAA,EAAA,GAFA;AAGA,QAAA,GAAA,EAAA,CAHA;AAIA,QAAA,GAAA,EAAA;AAJA,OAAA,CADA;AAOA,MAAA,KAAA,EAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,SAAA,EAAA;AAAA;AAPA,KAAA;AASA,GAjDA;AAkDA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,UAAA,EAAA,GAAA,IAAA,OAAA,CAAA,IAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,MAAA,EAAA,KAAA,MAFA;AAGA,QAAA,GAAA,EAAA,GAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAAA;AAMA,UAAA,IAAA,GAAA,EAAA,CAAA,IAAA,CARA,CASA;;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AAAA;AAAA;AAAA;;AAAA;AACA,+BAAA,KAAA,CAAA,OAAA,8HAAA;AAAA,gBAAA,IAAA;;AACA,gBAAA,IAAA,CAAA,KAAA,KAAA,GAAA,CAAA,CAAA,EAAA;AACA,cAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA,KAAA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,OAPA;AAQA,aAAA,IAAA;AACA;AApBA;AAlDA,CAAA","sourcesContent":["<template>\n  <div :style=\"{ padding: '0 0 32px 32px' }\">\n    <h4 :style=\"{ marginBottom: '20px' }\">{{ title }}</h4>\n    <v-chart :force-fit=\"true\" :height=\"height\" :data=\"data\" :scale=\"scale\" :onClick=\"handleClick\">\n      <v-tooltip/>\n      <v-axis/>\n      <v-legend/>\n      <v-line position=\"type*y\" color=\"x\"/>\n      <v-point position=\"type*y\" color=\"x\" :size=\"4\" :v-style=\"style\" :shape=\"'circle'\"/>\n    </v-chart>\n  </div>\n</template>\n\n<script>\n  import { DataSet } from '@antv/data-set'\n  import { ChartEventMixins } from './mixins/ChartMixins'\n\n  export default {\n    name: 'LineChartMultid',\n    mixins: [ChartEventMixins],\n    props: {\n      title: {\n        type: String,\n        default: ''\n      },\n      dataSource: {\n        type: Array,\n        default: () => [\n          { type: 'Jan', jeecg: 7.0, jeebt: 3.9 },\n          { type: 'Feb', jeecg: 6.9, jeebt: 4.2 },\n          { type: 'Mar', jeecg: 9.5, jeebt: 5.7 },\n          { type: 'Apr', jeecg: 14.5, jeebt: 8.5 },\n          { type: 'May', jeecg: 18.4, jeebt: 11.9 },\n          { type: 'Jun', jeecg: 21.5, jeebt: 15.2 },\n          { type: 'Jul', jeecg: 25.2, jeebt: 17.0 },\n          { type: 'Aug', jeecg: 26.5, jeebt: 16.6 },\n          { type: 'Sep', jeecg: 23.3, jeebt: 14.2 },\n          { type: 'Oct', jeecg: 18.3, jeebt: 10.3 },\n          { type: 'Nov', jeecg: 13.9, jeebt: 6.6 },\n          { type: 'Dec', jeecg: 9.6, jeebt: 4.8 }\n        ]\n      },\n      fields: {\n        type: Array,\n        default: () => ['jeecg', 'jeebt']\n      },\n      // 别名，需要的格式：[{field:'name',alias:'姓名'}, {field:'sex',alias:'性别'}]\n      aliases:{\n        type: Array,\n        default: () => []\n      },\n      height: {\n        type: Number,\n        default: 254\n      }\n    },\n    data() {\n      return {\n        scale: [{\n          type: 'cat',\n          dataKey: 'x',\n          min: 0,\n          max: 1\n        }],\n        style: { stroke: '#fff', lineWidth: 1 }\n      }\n    },\n    computed: {\n      data() {\n        const dv = new DataSet.View().source(this.dataSource)\n        dv.transform({\n          type: 'fold',\n          fields: this.fields,\n          key: 'x',\n          value: 'y'\n        })\n        let rows =  dv.rows\n        // 替换别名\n        rows.forEach(row => {\n          for (let item of this.aliases) {\n            if (item.field === row.x) {\n              row.x = item.alias\n              break\n            }\n          }\n        })\n        return rows\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components/chart"}]}