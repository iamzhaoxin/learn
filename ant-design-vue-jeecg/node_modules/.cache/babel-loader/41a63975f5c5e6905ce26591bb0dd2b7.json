{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeCheckboxCell.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { neverNull } from '@/utils/util';\nimport JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins';\nexport default {\n  name: 'JVxeCheckboxCell',\n  mixins: [JVxeCellMixins],\n  props: {},\n  computed: {\n    bordered: function bordered() {\n      return !!this.renderOptions.bordered;\n    },\n    scrolling: function scrolling() {\n      return !!this.renderOptions.scrolling;\n    },\n    clazz: function clazz() {\n      return {\n        'j-vxe-checkbox': true,\n        'no-animation': this.scrolling\n      };\n    },\n    boxStyle: function boxStyle() {\n      var style = {}; // 如果有边框且未设置align属性，就强制居中\n\n      if (this.bordered && !this.originColumn.align) {\n        style['text-align'] = 'center';\n      }\n\n      return style;\n    }\n  },\n  methods: {\n    handleChange: function handleChange(event) {\n      this.handleChangeCommon(event.target.checked);\n    }\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    switches: {\n      visible: true\n    },\n    getValue: function getValue(value) {\n      var col = this.column.own; // 处理 customValue\n\n      if (Array.isArray(col.customValue)) {\n        var customValue = getCustomValue(col);\n\n        if (typeof value === 'boolean') {\n          return value ? customValue[0] : customValue[1];\n        } else {\n          return value;\n        }\n      } else {\n        return value;\n      }\n    },\n    setValue: function setValue(value) {\n      var col = this.column.own; // 判断是否设定了customValue（自定义值）\n\n      if (Array.isArray(col.customValue)) {\n        var customValue = getCustomValue(col);\n        return neverNull(value).toString() === customValue[0].toString();\n      } else {\n        return !!value;\n      }\n    },\n    createValue: function createValue(_ref) {\n      var column = _ref.column;\n      var col = column.own;\n\n      if (Array.isArray(col.customValue)) {\n        var customValue = getCustomValue(col);\n        return col.defaultChecked ? customValue[0] : customValue[1];\n      } else {\n        return !!col.defaultChecked;\n      }\n    }\n  }\n};\n\nfunction getCustomValue(col) {\n  var customTrue = neverNull(col.customValue[0], true);\n  var customFalse = neverNull(col.customValue[1], false);\n  return [customTrue, customFalse];\n}",{"version":3,"sources":["JVxeCheckboxCell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"clazz\" :style=\"boxStyle\">\n    <a-checkbox\n      ref=\"checkbox\"\n      :checked=\"innerValue\"\n      v-bind=\"cellProps\"\n      @change=\"handleChange\"\n    />\n  </div>\n</template>\n\n<script>\n  import { neverNull } from '@/utils/util'\n  import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\n  export default {\n    name: 'JVxeCheckboxCell',\n    mixins: [JVxeCellMixins],\n    props: {},\n    computed: {\n      bordered() {\n        return !!this.renderOptions.bordered\n      },\n      scrolling() {\n        return !!this.renderOptions.scrolling\n      },\n      clazz() {\n        return {\n          'j-vxe-checkbox': true,\n          'no-animation': this.scrolling\n        }\n      },\n      boxStyle() {\n        const style = {}\n        // 如果有边框且未设置align属性，就强制居中\n        if (this.bordered && !this.originColumn.align) {\n          style['text-align'] = 'center'\n        }\n        return style\n      },\n    },\n    methods: {\n      handleChange(event) {\n        this.handleChangeCommon(event.target.checked)\n      },\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      switches: {\n        visible: true,\n      },\n      getValue(value) {\n        let {own: col} = this.column\n        // 处理 customValue\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          if (typeof value === 'boolean') {\n            return value ? customValue[0] : customValue[1]\n          } else {\n            return value\n          }\n        } else {\n          return value\n        }\n      },\n      setValue(value) {\n        let {own: col} = this.column\n        // 判断是否设定了customValue（自定义值）\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          return neverNull(value).toString() === customValue[0].toString()\n        } else {\n          return !!value\n        }\n      },\n      createValue({column}) {\n        let {own: col} = column\n        if (Array.isArray(col.customValue)) {\n          let customValue = getCustomValue(col)\n          return col.defaultChecked ? customValue[0] : customValue[1]\n        } else {\n          return !!col.defaultChecked\n        }\n      },\n    }\n  }\n\n  function getCustomValue(col) {\n    let customTrue = neverNull(col.customValue[0], true)\n    let customFalse = neverNull(col.customValue[1], false)\n    return [customTrue, customFalse]\n  }\n</script>\n\n<style lang=\"less\">\n  // 关闭动画，防止滚动时动态赋值出现问题\n  .j-vxe-checkbox.no-animation {\n    .ant-checkbox-inner,\n    .ant-checkbox-inner::after {\n      transition: none !important;\n    }\n  }\n</style>"],"sourceRoot":"src/components/jeecg/JVxeTable/components/cells"}]}