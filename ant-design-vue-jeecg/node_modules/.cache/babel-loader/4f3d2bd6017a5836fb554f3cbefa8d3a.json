{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\activiti\\ProcessModelList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\activiti\\ProcessModelList.vue","mtime":1621994095276},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from \"lodash.pick\";\nimport { filterObj } from '@/utils/util';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nimport { activitiMixin } from '@/views/activiti/mixins/activitiMixin';\nimport JEllipsis from '@/components/jeecg/JEllipsis';\nimport { deleteAction, getAction, downFile } from '@/api/manage';\nimport JTreeSelect from '@/components/jeecg/JTreeSelect';\nimport JTreeDict from '@/components/jeecg/JTreeDict';\nimport { initDictOptions, filterDictText } from '@/components/dict/JDictSelectUtil';\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep';\nimport JSelectRole from '@/components/jeecgbiz/JSelectRole';\nimport JSelectDepart from '@/components/jeecgbiz/JSelectDepart';\nexport default {\n  name: \"ProcessModelList\",\n  mixins: [activitiMixin, JeecgListMixin],\n  components: {\n    JEllipsis: JEllipsis,\n    JSelectUserByDep: JSelectUserByDep,\n    JSelectRole: JSelectRole,\n    JSelectDepart: JSelectDepart,\n    JTreeSelect: JTreeSelect,\n    JTreeDict: JTreeDict\n  },\n  created: function created() {// this.initReportList();\n  },\n  data: function data() {\n    return {\n      reportList: [],\n      viewImage: false,\n      viewTitle: \"\",\n      diagramUrl: \"\",\n\n      /*编辑流程*/\n      editObj: {\n        visible: false\n      },\n      editForm: this.$form.createForm(this),\n      description: '已部署模型',\n      // 查询条件\n      queryParam: {\n        createTimeRange: [],\n        keyWord: '',\n        zx: true\n      },\n      tabKey: \"1\",\n      // 表头\n      labelCol: {\n        xs: {\n          span: 4\n        },\n        sm: {\n          span: 4\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 20\n        },\n        sm: {\n          span: 20\n        }\n      },\n      confirmLoading: false,\n      current: 0,\n      nodeForm: this.$form.createForm(this),\n      dictOptions: [],\n      nodeList: [],\n      editNode: {},\n      showProcessNodeEdit: false,\n      dictNodeType: {\n        '0': '开始节点',\n        '1': '审批节点',\n        '2': '结束节点'\n      },\n      spryTypes: [],\n      url: {\n        list: \"/activiti_process/listData\",\n        img: \"/activiti/models/export\",\n        updateStatus: \"/activiti_process/updateStatus\",\n        delByIds: \"/activiti_process/delByIds\",\n        convertToModel: \"/activiti_process/convertToModel\",\n        updateInfo: \"/activiti_process/updateInfo\",\n        getProcessNode: \"/activiti_process/getProcessNode\",\n        editNodeUser: \"/activiti_process/editNodeUser\"\n      },\n      spry: {\n        //选中的用户\n        userIds: '',\n        roleIds: '',\n        departmentIds: '',\n        departmentManageIds: '',\n        formVariables: '',\n        chooseSponsor: false,\n        chooseDepHeader: false\n      },\n      lcModa: {\n        title: '流程表单预览',\n        visible: false,\n        formComponent: null\n      },\n      lcTypeF: [],\n      dataList: [],\n      updateRow: {}\n    };\n  },\n  computed: {\n    //可行性测试，根据文件路径动态加载组件\n    LcDict: function LcDict() {\n      var myComponent = function myComponent() {\n        return import(\"@/components/dict/JDictSelectTag\");\n      };\n\n      return myComponent;\n    }\n  },\n  methods: {\n    /*initReportList(){\n      // 加载reportList\n      getAction('/report/reportModel/all',{}).then(res=>{\n        if(res.success){\n          this.reportList = res.result;\n        }\n      }).catch(()=>{\n        console.log(\"字典加载失败\");\n      });\n    },*/\n    initDictConfig: function initDictConfig() {\n      var _this2 = this;\n\n      //初始化字典 - 流程分类\n      initDictOptions('bpm_process_type').then(function (res) {\n        if (res.success) {\n          var lcTypes = [];\n          _this2.dictOptions = res.result || [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this2.dictOptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var dict = _step.value;\n              lcTypes.push({\n                text: dict.text,\n                value: dict.value\n              });\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this2.lcTypeF = lcTypes;\n          console.log(lcTypes);\n        }\n      });\n    },\n    filterDictText: function filterDictText(dictOptions, text) {\n      if (dictOptions instanceof Array) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = dictOptions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var dictItem = _step2.value;\n\n            if (text === dictItem.value) {\n              return dictItem.text;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return text;\n    },\n    closeNode: function closeNode() {\n      this.showProcessNodeEdit = false, this.current = 0, this.spryTypes = [], this.spry = {};\n    },\n\n    /*编辑流程节点*/\n    change_steps: function change_steps(node, index) {\n      this.spryTypes = [];\n      console.log('onChange:', node);\n      this.current = index;\n      this.editNode = node;\n      /* 0角色 1用户 2部门 3发起人 4发起人的部门负责人 5部门的部门负责人*/\n\n      this.spry.chooseDepHeader = node.chooseDepHeader || false;\n      if (this.spry.chooseDepHeader) this.spryTypes.push('4');\n      this.spry.chooseSponsor = node.chooseSponsor || false;\n      if (this.spry.chooseSponsor) this.spryTypes.push('3');\n      var userIds = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = (node.users || [])[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var user = _step3.value;\n          userIds.push(user.username);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.spry.userIds = userIds.join(\",\");\n      if (userIds.length > 0) this.spryTypes.push('1');\n      var roleIds = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = (node.roles || [])[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var role = _step4.value;\n          roleIds.push(role.roleCode);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this.spry.roleIds = roleIds.join(\",\");\n      if (roleIds.length > 0) this.spryTypes.push('0');\n      var departmentIds = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = (node.departments || [])[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var department = _step5.value;\n          departmentIds.push(department.id);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.spry.departmentIds = departmentIds.join(\",\");\n      if (departmentIds.length > 0) this.spryTypes.push('2');\n      var departmentManageIds = [];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = (node.departmentManages || [])[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var departmentManage = _step6.value;\n          departmentManageIds.push(departmentManage.id);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      this.spry.departmentManageIds = departmentManageIds.join(\",\");\n      if (departmentManageIds.length > 0) this.spryTypes.push('5');\n      console.log(\"回显this.spry\", this.spry);\n      this.spry.formVariables = node.formVariables || '';\n      if (this.spry.formVariables) this.spryTypes.push('6');\n    },\n    spryType: function spryType(types) {\n      /* 0角色 1用户 2部门 3发起人 4发起人的部门负责人 5部门负责人*/\n      // this.spryTypes = types;\n      if (this.spryTypes.indexOf('0') == -1) this.spry.roleIds = '';\n      if (this.spryTypes.indexOf('1') == -1) this.spry.userIds = '';\n      if (this.spryTypes.indexOf('2') == -1) this.spry.departmentIds = '';\n      if (this.spryTypes.indexOf('5') == -1) this.spry.departmentManageIds = '';\n      if (this.spryTypes.indexOf('6') == -1) this.spry.formVariable = ''; //是否选中发起人\n\n      this.spry.chooseSponsor = this.spryTypes.indexOf('3') > -1; //是否选中发起人的部门领导\n\n      this.spry.chooseDepHeader = this.spryTypes.indexOf('4') > -1;\n      console.log(\"this.spry\", this.spry);\n    },\n    sprySubmit: function sprySubmit() {\n      var _this = this;\n\n      if (this.spryTypes.length == 0) {\n        _this.$message.error(\"必须选择审批人！\");\n\n        return;\n      }\n\n      _this.confirmLoading = true;\n      this.spry.nodeId = this.editNode.id;\n      this.spry.procDefId = this.editNode.procDefId;\n      this.postFormAction(_this.url.editNodeUser, this.spry).then(function (res) {\n        if (res.success) {\n          _this.$message.success(\"操作成功\");\n          /*保存成功后回显数据*/\n\n\n          _this.getNodeData(_this.updateRow);\n        } else {\n          _this.$message.error(res.message);\n        }\n      }).finally(function () {\n        return _this.confirmLoading = false;\n      });\n    },\n\n    /*节点设置*/\n    getNodeData: function getNodeData(row) {\n      var _this = this;\n\n      _this.updateRow = row;\n\n      _this.postFormAction(_this.url.getProcessNode, {\n        id: row.id\n      }).then(function (res) {\n        if (res.success) {\n          // 转换null为\"\"\n          _this.nodeList = res.result || [];\n          console.log(\"_this.nodeList\", _this.nodeList);\n\n          if (_this.nodeList.length > 0) {\n            _this.editNode = _this.nodeList[_this.current];\n            console.log(_this.current, _this.editNode);\n            _this.showProcessNodeEdit = true;\n          }\n        } else {\n          _this.$message.error(res.message);\n        }\n      });\n    },\n\n    /*编辑流程信息*/\n    edit: function edit(row) {\n      this.editObj = Object.assign(this.editObj, row);\n      this.editObj.visible = true;\n    },\n    editObjOk: function editObjOk() {\n      var _this3 = this;\n\n      var _this = this;\n\n      this.editForm.validateFields(function (err, values) {\n        if (!err) {\n          var formData = Object.assign(_this3.editObj, values);\n          console.log(\"formData\", formData);\n          _this3.confirmLoading = true;\n\n          _this3.postFormAction(_this3.url.updateInfo, formData).then(function (res) {\n            if (res.success) {\n              _this.$message.success(\"操作成功\");\n\n              _this.loadData();\n\n              _this.editObj.visible = false;\n            } else {\n              _this.$message.error(res.message);\n            }\n          }).finally(function () {\n            return _this.confirmLoading = false;\n          });\n\n          ;\n        }\n      });\n    },\n    change_routeName: function change_routeName() {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        var routeName = _this4.editForm.getFieldValue('routeName');\n\n        console.log(\"routeName\", routeName);\n\n        var route = _this4.getFormComponent(routeName);\n\n        _this4.editObj.businessTable = route.businessTable;\n        _this4.editObj.routeName = route.routeName;\n        console.log(\"this.editObj\", _this4.editObj);\n      });\n    },\n    viewForm: function viewForm(routeName) {\n      if (!routeName) routeName = this.editObj.routeName;\n\n      if (!routeName) {\n        this.$message.warning(\"请先选择表单！\");\n        return;\n      }\n\n      var formComponent = this.getFormComponent(routeName);\n      console.log(formComponent);\n      this.lcModa.formComponent = formComponent.component;\n      this.lcModa.title = '流程表单预览：' + formComponent.text;\n      this.lcModa.visible = true;\n    },\n    convertToModel: function convertToModel(row) {\n      var that = this;\n      this.$confirm({\n        title: \"确认转化\",\n        content: \"您确认要转化流程 \" + row.name + \" 为模型?\",\n        loading: true,\n        onOk: function onOk() {\n          that.postFormAction(\"\".concat(that.url.convertToModel), {\n            id: row.id\n          }).then(function (res) {\n            if (res.success) {\n              setTimeout(function () {\n                that.$message.success(\"转化成功\");\n              }, 300);\n            } else {\n              that.$message.error(res.message);\n            }\n          });\n        }\n      });\n    },\n    remove: function remove(row) {\n      var _this = this;\n\n      _this.$confirm({\n        title: \"确认删除\",\n        content: \"您确认要删除流程 \" + row.name + \" ?\",\n        loading: true,\n        onOk: function onOk() {\n          _this.postFormAction(_this.url.delByIds, {\n            ids: row.id\n          }).then(function (res) {\n            if (res.success) {\n              _this.$message.success(\"操作成功\");\n\n              _this.loadData();\n            } else {\n              _this.$message.error(res.message);\n            }\n          });\n        }\n      });\n    },\n    editStatus: function editStatus(status, row) {\n      var _this = this;\n\n      var operation = \"\";\n\n      if (status == 0) {\n        operation = \"不启用\";\n      } else {\n        operation = \"启用\";\n      }\n\n      this.$confirm({\n        title: \"确认\" + operation + \"?\",\n        content: \"\\u60A8\\u786E\\u8BA4\\u8981\".concat(operation, \"\\u6D41\\u7A0B\").concat(row.name, \"?\"),\n        onOk: function onOk() {\n          var params = {\n            status: status,\n            id: row.id\n          };\n\n          _this.postFormAction(_this.url.updateStatus, params).then(function (res) {\n            if (res.success) {\n              _this.$message.success(\"操作成功\");\n\n              _this.loadData();\n            } else {\n              _this.$message.error(res.message);\n            }\n          });\n        },\n        onCancel: function onCancel() {}\n      });\n    },\n\n    /*查看流程图片*/\n    showResource: function showResource(row) {\n      this.viewTitle = \"流程图片预览(\" + row.diagramName + \")\";\n      this.diagramUrl = \"\".concat(window._CONFIG['domianURL']).concat(this.url.img, \"?id=\").concat(row.id);\n      this.viewImage = true;\n    },\n\n    /*删除模型*/\n    deletelc: function deletelc(y, row) {\n      var _this5 = this;\n\n      console.log(y, row);\n\n      if (y) {\n        getAction(this.url.delete + row.id).then(function (res) {\n          if (res.success) {\n            _this5.$message.success(res.message);\n          } else {\n            _this5.$message.error(res.message);\n          }\n\n          _this5.loadData();\n        });\n      }\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\";\n      }\n\n      this.ipagination = pagination;\n      console.log(pagination, filters, sorter);\n      /*if (Object.keys(filters).length>0&&this.dataList.length>0){\n        for (const filterField in filters) {\n          let fiterVals = filters[filterField]||[];\n         }\n      }*/\n      // this.loadData();\n    },\n    loadData: function loadData(arg) {\n      var _this6 = this;\n\n      if (!this.url.list) {\n        this.$message.error(\"请设置url.list属性!\");\n        return;\n      } //加载数据 若传入参数1则加载第一页的内容\n\n\n      if (arg === 1) {\n        this.ipagination.current = 1;\n      }\n\n      var params = this.getQueryParams(); //查询条件\n\n      this.loading = true;\n      getAction(this.url.list, params).then(function (res) {\n        if (res.success) {\n          var records = res.result || [];\n          _this6.dataSource = records;\n          _this6.dataList = records;\n          _this6.ipagination.total = records.length;\n        }\n\n        if (res.code === 510) {\n          _this6.$message.warning(res.message);\n        }\n\n        _this6.loading = false;\n      });\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      delete param.createTimeRange; // 时间参数不传递后台\n\n      return filterObj(param);\n    },\n    // 重置\n    searchReset: function searchReset() {\n      var that = this;\n      var logType = that.queryParam.logType;\n      that.queryParam = {}; //清空查询区域参数\n\n      that.queryParam.logType = logType;\n      that.loadData(this.ipagination.current);\n    },\n    onDateChange: function onDateChange(value, dateString) {\n      console.log(dateString[0], dateString[1]);\n      this.queryParam.createTime_begin = dateString[0];\n      this.queryParam.createTime_end = dateString[1];\n    },\n    onDateOk: function onDateOk(value) {\n      console.log(value);\n    },\n    filter_categoryId: function filter_categoryId(v, r) {\n      // console.log(v,r)\n      return r.categoryId == v;\n    }\n  }\n};",{"version":3,"sources":["ProcessModelList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <!-- 查询区域 -->\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\" @keyup.enter.native=\"searchQuery\">\r\n        <a-row :gutter=\"24\">\r\n\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <a-form-item label=\"流程名称\">\r\n              <a-input placeholder=\"请输入搜索关键词\" v-model=\"queryParam.lcmc\"></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <a-form-item label=\"流程标识\">\r\n              <a-input placeholder=\"请输入搜索关键词\" v-model=\"queryParam.lckey\"></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <a-form-item label=\"是否最新\">\r\n              <a-switch checkedChildren=\"是\" unCheckedChildren=\"否\" defaultChecked v-model=\"queryParam.zx\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <!--<a-col :md=\"6\" :sm=\"10\">\r\n            <a-form-item label=\"创建时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n              <a-range-picker\r\n                style=\"width: 210px\"\r\n                v-model=\"queryParam.createTimeRange\"\r\n                format=\"YYYY-MM-DD\"\r\n                :placeholder=\"['开始时间', '结束时间']\"\r\n                @change=\"onDateChange\"\r\n                @ok=\"onDateOk\"\r\n              />\r\n            </a-form-item>\r\n          </a-col>-->\r\n\r\n          <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n            <a-col :md=\"6\" :sm=\"12\" >\r\n                <a-button type=\"primary\"  style=\"left: 10px\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\r\n                <a-button type=\"primary\"  @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px;left: 10px\">重置</a-button>\r\n            </a-col>\r\n          </span>\r\n          <span style=\"float: right;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n            <a-col :md=\"12\" :sm=\"12\" >\r\n<!--                <a-button type=\"primary\"  style=\"left: 10px\" @click=\"createObj.visible=true\" icon=\"search\">创建流程模型</a-button>-->\r\n            </a-col>\r\n          </span>\r\n\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <!-- table区域-begin -->\r\n    <a-table :scroll=\"{x:2200,y:500}\" bordered\r\n      ref=\"table\"\r\n      size=\"middle\"\r\n      rowKey=\"id\"\r\n      :dataSource=\"dataSource\"\r\n      :pagination=\"ipagination\"\r\n      :loading=\"loading\"\r\n      @change=\"handleTableChange\">\r\n\r\n      <a-table-column title=\"#\" :width=\"50\" fixed='left' key=\"a\">\r\n        <template slot-scope=\"t,r,i\" >\r\n          <span> {{i+1}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"流程名称\" dataIndex=\"name\" :width=\"200\" align=\"center\" fixed='left'>\r\n        <template slot-scope=\"t,r,i\">\r\n          <span> {{t}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"流程标识\" dataIndex=\"processKey\" :width=\"200\" align=\"center\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span> {{t}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"版本\" dataIndex=\"version\" key=\"asa\" :width=\"100\" align=\"center\"\r\n                       :sorter=\"(a, b) => a.version - b.version\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span> v.{{t}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"所属分类\" dataIndex=\"categoryId\" :width=\"200\" align=\"center\" key=\"categoryId_\"\r\n                      :filters = \"lcTypeF\" @filter=\"filter_categoryId\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span> {{filterDictText(dictOptions, t)}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"流程图片\" dataIndex=\"diagramName\" :width=\"200\" align=\"center\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span @click=\"showResource(r)\" style=\"color: blue;cursor: pointer;\">{{t}}</span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"表单路由\" dataIndex=\"routeName\" :width=\"200\" align=\"center\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span @click=\"viewForm(t)\" style=\"color: blue;cursor: pointer;\"> {{getFormComponent(t).text}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"状态\" dataIndex=\"status\" :width=\"200\" align=\"center\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span v-if=\"t==1\" style=\"color: #00A0E9;\"> 已启用 </span>\r\n          <span v-if=\"t!=1\" style=\"color: #999;\"> 未启用 </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"备注说明\" dataIndex=\"description\" :width=\"200\" align=\"center\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <j-ellipsis :value=\"t\" :length=\"10\"/>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"部署时间\" dataIndex=\"createTime\" :width=\"200\" align=\"center\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span> {{t}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"更新时间\" dataIndex=\"updateTime\" :width=\"200\" align=\"center\">\r\n        <template slot-scope=\"t,r,i\">\r\n          <span> {{t}} </span>\r\n        </template>\r\n      </a-table-column>\r\n      <a-table-column title=\"操作\" dataIndex=\"\"  align=\"center\" :width=\"250\" fixed='right'>\r\n        <template slot-scope=\"t,r,i\">\r\n\r\n          <a href=\"javascript:void(0);\" v-if=\"r.status!=1\" @click=\"editStatus(1,r)\" style=\"color: rgb(144,96,255);\">启用</a>\r\n          <a href=\"javascript:void(0);\" v-if=\"r.status==1\" @click=\"editStatus(0,r)\" style=\"color: #cb892d\">禁用</a>\r\n          <a-divider type=\"vertical\" />\r\n          <a href=\"javascript:void(0);\" @click=\"getNodeData(r)\" >节点设置</a>\r\n          <a-divider type=\"vertical\" />\r\n          <a href=\"javascript:void(0);\" @click=\"convertToModel(r)\" >复制为模型</a>\r\n          <br>\r\n          <a href=\"javascript:void(0);\"  @click=\"edit(r)\">编辑</a> <a-divider type=\"vertical\" />\r\n          <a href=\"javascript:void(0);\" style=\"color: red;\" @click=\"remove(r)\">删除</a>\r\n\r\n\r\n        </template>\r\n      </a-table-column>\r\n    </a-table>\r\n    <!-- table区域-end -->\r\n    <!--编辑-->\r\n    <a-modal  width=\"900px\"\r\n      :confirmLoading=\"confirmLoading\"\r\n      title=\"编辑流程\"\r\n      :visible=\"editObj.visible\"\r\n      @ok=\"editObjOk\"\r\n      @cancel=\"editObj.visible = false\"\r\n    >\r\n      <a-form :form=\"editForm\" v-if=\"editObj.visible\">\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"流程分类\" >\r\n          <component :is=\"LcDict\" :trigger-change=\"true\" v-decorator=\"[ 'categoryId', {initialValue:editObj.categoryId, rules: [{ required: true, message: '不能为空' }] },]\"\r\n                       placeholder=\"请选择流程分类\" dictCode=\"bpm_process_type\" ></component>\r\n        </a-form-item>\r\n       <!-- <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"流程类目(app使用)\" >\r\n          <j-tree-dict placeholder=\"请选择流程类目\" parentCode=\"A01\"\r\n                       :trigger-change=\"true\" v-decorator=\"[ 'typeId', {initialValue:editObj.typeId, rules: [{ required: true, message: '不能为空' }] },]\"\r\n          >\r\n          </j-tree-dict>\r\n        </a-form-item>-->\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"关联表单\" >\r\n          <a-select @change=\"change_routeName\" placeholder=\"请选择关联表单\" :trigger-change=\"true\" v-decorator=\"[ 'routeName', {initialValue:editObj.routeName, rules: [{ required: true, message: '不能为空' }] },]\">\r\n            <a-select-option value=\"\">请选择</a-select-option>\r\n            <a-select-option v-for=\"(item, i) in allFormComponent\" :key=\"item.routeName\" :value=\"item.routeName\">\r\n              <span style=\"display: inline-block;width: 100%\" :title=\" item.text\">\r\n                {{ item.text}}\r\n              </span>\r\n            </a-select-option>\r\n          </a-select>\r\n          <a href=\"javascrip:void(0)\" @click=\"viewForm()\">预览表单</a>\r\n        </a-form-item>\r\n\r\n<!--        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"关联打印报表\" >\r\n          <a-select @change=\"change_routeName\" placeholder=\"请选择关联报表\" :trigger-change=\"true\" v-decorator=\"[ 'reportModelId', {initialValue:editObj.reportModelId, rules: [{ required: true, message: '不能为空' }] },]\">\r\n            <a-select-option value=\"\">请选择</a-select-option>\r\n            <a-select-option v-for=\"(item, i) in reportList\" :key=\"item.id\" :value=\"item.id\">\r\n              <span style=\"display: inline-block;width: 100%\" :title=\" item.name\">\r\n                {{ item.name}}\r\n              </span>\r\n            </a-select-option>\r\n          </a-select>\r\n          &lt;!&ndash;<a href=\"javascrip:void(0)\" @click=\"viewForm()\">预览表单</a>&ndash;&gt;\r\n        </a-form-item>-->\r\n\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"角色授权\" >\r\n          <j-select-role placeholder=\"不选择则所有人可用\" v-decorator=\"[ 'roles', {initialValue:editObj.roles, rules: []}]\"/>\r\n        </a-form-item>\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"排序\" >\r\n          <a-input-number  v-decorator=\"[ 'sort', {initialValue:editObj.sort, rules: []}]\" placeholder=\"排序\"/>\r\n        </a-form-item>\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"备注描述\" >\r\n          <a-textarea  v-decorator=\"[ 'description', {initialValue:editObj.description, rules: []}]\" placeholder=\"备注描述\" :autoSize=\"{ minRows: 3, maxRows: 5 }\" />\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n    <!--节点设置-->\r\n    <a-modal\r\n      title=\"编辑流程节点\" width=\"900px\" :maskClosable=\"false\"\r\n      :confirmLoading=\"confirmLoading\"\r\n      :visible=\"showProcessNodeEdit\"\r\n      :footer=\"null\"\r\n      @cancel=\"closeNode\"\r\n    >\r\n      <a-row>\r\n        <a-col :md=\"4\" :sm=\"4\" style=\"border-right: 1px solid #999\">\r\n<!--          选择流程节点-->\r\n          <a-steps direction=\"vertical\" :current=\"current\" size=\"small\">\r\n            <template  v-for=\"item,i in nodeList\">\r\n              <a-step style=\"cursor: pointer;\" :title=\"item.title\"\r\n                      :description=\"item.description\" :status=\"i==current?'process':'wait'\"\r\n                      @click=\"change_steps(item,i)\"/>\r\n            </template>\r\n          </a-steps>\r\n        </a-col>\r\n        <a-col :md=\"20\" :sm=\"20\">\r\n          <a-alert message=\"温馨提示：若流程运行至未分配审批人员的审批节点时，流程将自动中断取消！\" banner />\r\n          <span></span>\r\n          <a-form :form=\"nodeForm\" v-if=\"showProcessNodeEdit\">\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"节点名称\" >\r\n              <span class=\"nodespan\">{{editNode.title}}</span>\r\n            </a-form-item>\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"节点类型\" >\r\n              <span class=\"nodespan\">{{dictNodeType[editNode.type]}}</span>\r\n            </a-form-item>\r\n            <a-alert type=\"info\" message=\"每个节点设置，如有修改都请保存一次，跳转节点后数据不会自动保存！\" banner />\r\n            <br/>\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\"  label=\"审批人员\" v-show=\"editNode.type==1\">\r\n              <a-checkbox-group @change=\"spryType\" v-model=\"spryTypes\" >\r\n                  <!-- 0角色 1用户 2部门 3发起人 4发起人的部门负责人-->\r\n                <a-checkbox value=\"0\"> 根据角色选择 </a-checkbox>\r\n                <a-checkbox value=\"1\"> 直接选择人员 </a-checkbox>\r\n                <a-checkbox value=\"2\"> 部门 </a-checkbox>\r\n                <a-checkbox value=\"5\"> 部门负责人 </a-checkbox>\r\n                <a-checkbox value=\"3\">\r\n                  发起人\r\n                  <a-tooltip placement=\"topLeft\" title=\"自动获取发起人\">\r\n                    <a-icon type=\"exclamation-circle\" />\r\n                  </a-tooltip>\r\n                </a-checkbox>\r\n                <a-checkbox value=\"4\">\r\n                  发起人的部门负责人\r\n                  <a-tooltip placement=\"topLeft\" title=\"自动获取发起人所在部门的负责人，即其上级领导。（如果其本身就是部门负责人，则指向发起人自己。）\">\r\n                    <a-icon type=\"exclamation-circle\" />\r\n                  </a-tooltip>\r\n                </a-checkbox>\r\n                <a-checkbox value=\"6\">\r\n                  表单变量\r\n                  <a-tooltip placement=\"topLeft\" title=\"填写与表单中相对应的变量，role:角色，user:人员：dept:部门：deptManage:部门负责人; 例如：variable:role,variable2:user;\">\r\n                    <a-icon type=\"exclamation-circle\" />\r\n                  </a-tooltip>\r\n                </a-checkbox>\r\n\r\n              </a-checkbox-group>\r\n            </a-form-item>\r\n            <!--            0角色 1用户 2部门 3发起人 4发起人的部门负责人-->\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"选择角色\" v-if=\"spryTypes.indexOf('0')>-1\" >\r\n              <j-select-role  v-model=\"spry.roleIds\"/>\r\n            </a-form-item>\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"选择人员\" v-if=\"spryTypes.indexOf('1')>-1\" >\r\n              <!--  通过部门选择用户控件 -->\r\n              <j-select-user-by-dep v-model=\"spry.userIds\" :multi=\"true\"></j-select-user-by-dep>\r\n            </a-form-item>\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"选择部门\" v-if=\"spryTypes.indexOf('2')>-1\" >\r\n              <j-select-depart v-model=\"spry.departmentIds\" :multi=\"true\"></j-select-depart>\r\n            </a-form-item>\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"选择部门负责人\" v-if=\"spryTypes.indexOf('5')>-1\" >\r\n              <j-select-depart v-model=\"spry.departmentManageIds\" :multi=\"true\"></j-select-depart>\r\n            </a-form-item>\r\n            <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"输入表单变量\" v-if=\"spryTypes.indexOf('6')>-1\" >\r\n              <a-input v-model=\"spry.formVariables\" :multi=\"true\"></a-input>\r\n            </a-form-item>\r\n            <!--btn-->\r\n            <a-form-item :wrapper-col=\"{ span: 12, offset: 5 }\">\r\n              <a-button @click=\"sprySubmit\" type=\"primary\" html-type=\"submit\" :disabled=\"editNode.type==0||editNode.type==2||confirmLoading\">\r\n                提交并保存\r\n              </a-button>\r\n\r\n              <a-button @click=\"closeNode\" style=\"margin-left: 10px\">\r\n                关闭\r\n              </a-button>\r\n            </a-form-item>\r\n          </a-form>\r\n        </a-col>\r\n      </a-row>\r\n    </a-modal>\r\n    <!--查看图片-->\r\n    <a-modal\r\n      :title=\"viewTitle\" width=\"90%\"\r\n      :visible=\"viewImage\" :footer=\"null\"\r\n      @cancel=\"viewImage = false\"\r\n    >\r\n      <div style=\"min-height: 400px\">\r\n        <img :src=\"diagramUrl\" :alt=\"viewTitle\">\r\n      </div>\r\n    </a-modal>\r\n    <!--流程表单 预览-->\r\n    <a-modal  :title=\"lcModa.title\" v-model=\"lcModa.visible\" :footer=\"null\" :maskClosable=\"false\" width=\"80%\">\r\n      <component :is=\"lcModa.formComponent\" :disabled=\"true\"></component>\r\n    </a-modal>\r\n  </a-card>\r\n\r\n</template>\r\n\r\n<script>\r\n  import pick from \"lodash.pick\";\r\n  import { filterObj } from '@/utils/util';\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import { activitiMixin } from '@/views/activiti/mixins/activitiMixin'\r\n  import JEllipsis from '@/components/jeecg/JEllipsis'\r\n  import { deleteAction, getAction,downFile } from '@/api/manage'\r\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\r\n  import JTreeDict from '@/components/jeecg/JTreeDict'\r\n  import {initDictOptions, filterDictText} from '@/components/dict/JDictSelectUtil'\r\n  import JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\r\n  import JSelectRole from '@/components/jeecgbiz/JSelectRole'\r\n  import JSelectDepart from '@/components/jeecgbiz/JSelectDepart'\r\n\r\n  export default {\r\n    name: \"ProcessModelList\",\r\n    mixins:[activitiMixin,JeecgListMixin],\r\n    components: {\r\n      JEllipsis,JSelectUserByDep,JSelectRole,JSelectDepart\r\n      ,JTreeSelect,JTreeDict\r\n    },\r\n    created(){\r\n      // this.initReportList();\r\n    },\r\n    data () {\r\n      return {\r\n        reportList:[],\r\n        viewImage:false,\r\n        viewTitle:\"\",\r\n        diagramUrl:\"\",\r\n        /*编辑流程*/\r\n        editObj:{\r\n          visible: false,\r\n        },\r\n        editForm: this.$form.createForm(this),\r\n\r\n        description: '已部署模型',\r\n        // 查询条件\r\n        queryParam: {\r\n          createTimeRange:[],\r\n          keyWord:'',\r\n          zx:true\r\n        },\r\n        tabKey: \"1\",\r\n        // 表头\r\n        labelCol: {\r\n          xs: { span: 4 },\r\n          sm: { span: 4 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 20 },\r\n          sm: { span: 20 },\r\n        },\r\n        confirmLoading:false,\r\n        current:0,\r\n        nodeForm: this.$form.createForm(this),\r\n        dictOptions:[],\r\n        nodeList:[],\r\n        editNode:{},\r\n        showProcessNodeEdit:false,\r\n        dictNodeType:{\r\n          '0':'开始节点',\r\n          '1':'审批节点',\r\n          '2':'结束节点',\r\n        },\r\n        spryTypes:[],\r\n        url: {\r\n          list: \"/activiti_process/listData\",\r\n          img: \"/activiti/models/export\",\r\n          updateStatus: \"/activiti_process/updateStatus\",\r\n          delByIds: \"/activiti_process/delByIds\",\r\n          convertToModel: \"/activiti_process/convertToModel\",\r\n          updateInfo: \"/activiti_process/updateInfo\",\r\n          getProcessNode: \"/activiti_process/getProcessNode\",\r\n          editNodeUser: \"/activiti_process/editNodeUser\",\r\n        },\r\n        spry:{\r\n          //选中的用户\r\n          userIds:'',\r\n          roleIds:'',\r\n          departmentIds:'',\r\n          departmentManageIds:'',\r\n          formVariables:'',\r\n          chooseSponsor:false,\r\n          chooseDepHeader:false,\r\n        },\r\n        lcModa: {\r\n          title:'流程表单预览',\r\n          visible:false,\r\n          formComponent : null\r\n        },\r\n        lcTypeF:[],\r\n        dataList: [],\r\n        updateRow: {}\r\n      }\r\n    },\r\n    computed:{\r\n      //可行性测试，根据文件路径动态加载组件\r\n      LcDict:function(){\r\n        var myComponent =() => import(`@/components/dict/JDictSelectTag`);\r\n        return myComponent;\r\n      },\r\n    },\r\n    methods: {\r\n      /*initReportList(){\r\n        // 加载reportList\r\n        getAction('/report/reportModel/all',{}).then(res=>{\r\n          if(res.success){\r\n            this.reportList = res.result;\r\n          }\r\n        }).catch(()=>{\r\n          console.log(\"字典加载失败\");\r\n        });\r\n      },*/\r\n      initDictConfig() {\r\n        //初始化字典 - 流程分类\r\n        initDictOptions('bpm_process_type').then((res) => {\r\n          if (res.success) {\r\n            var lcTypes = [];\r\n            this.dictOptions = res.result||[];\r\n            for (const dict of this.dictOptions) {\r\n              lcTypes.push({text:dict.text,value:dict.value})\r\n            }\r\n            this.lcTypeF = lcTypes;\r\n            console.log(lcTypes)\r\n          }\r\n        });\r\n      },\r\n      filterDictText(dictOptions, text) {\r\n        if (dictOptions instanceof Array) {\r\n          for (let dictItem of dictOptions) {\r\n            if (text === dictItem.value) {\r\n              return dictItem.text\r\n            }\r\n          }\r\n        }\r\n        return text\r\n      },\r\n      closeNode() {\r\n        this.showProcessNodeEdit = false,\r\n        this.current=0,\r\n        this.spryTypes=[],\r\n        this.spry={}\r\n      },\r\n      /*编辑流程节点*/\r\n\r\n      change_steps(node,index){\r\n        this.spryTypes = [];\r\n        console.log('onChange:', node);\r\n        this.current = index;\r\n        this.editNode = node;\r\n        /* 0角色 1用户 2部门 3发起人 4发起人的部门负责人 5部门的部门负责人*/\r\n        this.spry.chooseDepHeader = node.chooseDepHeader||false;\r\n        if (this.spry.chooseDepHeader) this.spryTypes.push('4') ;\r\n        this.spry.chooseSponsor = node.chooseSponsor||false;\r\n        if (this.spry.chooseSponsor) this.spryTypes.push('3') ;\r\n        var userIds = [];\r\n        for (const user of node.users||[]) {\r\n          userIds.push(user.username);\r\n        }\r\n        this.spry.userIds = userIds.join(\",\");\r\n        if (userIds.length>0) this.spryTypes.push('1') ;\r\n        var roleIds = []\r\n        for (const role of node.roles||[]) {\r\n          roleIds.push(role.roleCode)\r\n        }\r\n        this.spry.roleIds = roleIds.join(\",\")\r\n        if (roleIds.length>0) this.spryTypes.push('0') ;\r\n        var departmentIds = []\r\n        for (const department of node.departments||[]) {\r\n          departmentIds.push(department.id)\r\n        }\r\n        this.spry.departmentIds = departmentIds.join(\",\")\r\n        if (departmentIds.length>0) this.spryTypes.push('2') ;\r\n        var departmentManageIds = []\r\n        for (const departmentManage of node.departmentManages || []){\r\n          departmentManageIds.push(departmentManage.id);\r\n        }\r\n        this.spry.departmentManageIds = departmentManageIds.join(\",\")\r\n        if (departmentManageIds.length>0) this.spryTypes.push('5') ;\r\n        console.log(\"回显this.spry\",this.spry)\r\n\r\n        this.spry.formVariables = node.formVariables||'';\r\n        if (this.spry.formVariables) this.spryTypes.push('6');\r\n      },\r\n      spryType(types){\r\n        /* 0角色 1用户 2部门 3发起人 4发起人的部门负责人 5部门负责人*/\r\n        // this.spryTypes = types;\r\n        if (this.spryTypes.indexOf('0')==-1) this.spry.roleIds = '';\r\n        if (this.spryTypes.indexOf('1')==-1) this.spry.userIds = '';\r\n        if (this.spryTypes.indexOf('2')==-1) this.spry.departmentIds = '';\r\n        if (this.spryTypes.indexOf('5')==-1) this.spry.departmentManageIds = '';\r\n        if (this.spryTypes.indexOf('6')==-1) this.spry.formVariable = '';\r\n        //是否选中发起人\r\n        this.spry.chooseSponsor = this.spryTypes.indexOf('3')>-1 ;\r\n        //是否选中发起人的部门领导\r\n        this.spry.chooseDepHeader = this.spryTypes.indexOf('4')>-1 ;\r\n\r\n        console.log(\"this.spry\",this.spry)\r\n      },\r\n      sprySubmit() {\r\n        var _this = this;\r\n        if (this.spryTypes.length==0){\r\n          _this.$message.error(\"必须选择审批人！\");\r\n          return;\r\n        }\r\n        _this.confirmLoading = true;\r\n        this.spry.nodeId = this.editNode.id;\r\n        this.spry.procDefId = this.editNode.procDefId;\r\n        this.postFormAction(_this.url.editNodeUser,this.spry).then(res => {\r\n          if (res.success) {\r\n            _this.$message.success(\"操作成功\");\r\n            /*保存成功后回显数据*/\r\n            _this.getNodeData(_this.updateRow);\r\n          }else {\r\n            _this.$message.error(res.message);\r\n          }\r\n        }).finally(() => _this.confirmLoading = false);\r\n      },\r\n      /*节点设置*/\r\n      getNodeData(row){\r\n        let _this = this;\r\n        _this.updateRow = row;\r\n        _this.postFormAction(_this.url.getProcessNode,{\r\n          id:row.id\r\n        }).then(res => {\r\n          if (res.success) {\r\n            // 转换null为\"\"\r\n            _this.nodeList = res.result||[];\r\n            console.log(\"_this.nodeList\",_this.nodeList);\r\n            if (_this.nodeList.length>0){\r\n              _this.editNode = _this.nodeList[_this.current];\r\n              console.log(_this.current,_this.editNode)\r\n              _this.showProcessNodeEdit = true;\r\n            }\r\n          }else {\r\n            _this.$message.error(res.message);\r\n          }\r\n        });\r\n      },\r\n      /*编辑流程信息*/\r\n      edit(row){\r\n        this.editObj = Object.assign(this.editObj, row)\r\n        this.editObj.visible = true;\r\n      },\r\n      editObjOk(){\r\n        var _this = this;\r\n        this.editForm.validateFields((err, values) => {\r\n          if (!err) {\r\n            let formData = Object.assign(this.editObj, values)\r\n            console.log(\"formData\",formData)\r\n            this.confirmLoading = true;\r\n            this.postFormAction(this.url.updateInfo,formData).then(res => {\r\n              if (res.success) {\r\n                _this.$message.success(\"操作成功\");\r\n                _this.loadData();\r\n                _this.editObj.visible = false;\r\n              }else {\r\n                _this.$message.error(res.message);\r\n              }\r\n            }).finally(() => _this.confirmLoading = false);;\r\n          }\r\n        })\r\n      },\r\n      change_routeName(){\r\n        this.$nextTick(()=>{\r\n          let routeName = this.editForm.getFieldValue('routeName');\r\n          console.log(\"routeName\",routeName)\r\n          var route = this.getFormComponent(routeName);\r\n          this.editObj.businessTable = route.businessTable;\r\n          this.editObj.routeName = route.routeName;\r\n          console.log(\"this.editObj\",this.editObj)\r\n        })\r\n      },\r\n      viewForm(routeName) {\r\n        if (!routeName) routeName = this.editObj.routeName;\r\n        if (!routeName) {\r\n          this.$message.warning(\r\n            \"请先选择表单！\"\r\n          );\r\n          return;\r\n        }\r\n        let formComponent = this.getFormComponent(routeName);\r\n        console.log(formComponent)\r\n        this.lcModa.formComponent = formComponent.component;\r\n        this.lcModa.title = '流程表单预览：'+formComponent.text;\r\n        this.lcModa.visible = true;\r\n      },\r\n      convertToModel(row){\r\n        let that = this;\r\n        this.$confirm({\r\n          title: \"确认转化\",\r\n          content: \"您确认要转化流程 \" + row.name + \" 为模型?\",\r\n          loading: true,\r\n          onOk: () => {\r\n            that.postFormAction(`${that.url.convertToModel}`,{id:row.id}).then(res => {\r\n              if (res.success) {\r\n                setTimeout(function() {\r\n                  that.$message.success(\"转化成功\");\r\n                }, 300);\r\n              }else {\r\n                that.$message.error(res.message);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      remove(row) {\r\n        var _this = this;\r\n        _this.$confirm({\r\n          title: \"确认删除\",\r\n          content: \"您确认要删除流程 \" + row.name + \" ?\",\r\n          loading: true,\r\n          onOk: () => {\r\n            _this.postFormAction(_this.url.delByIds,{ids:row.id}).then(res => {\r\n              if (res.success) {\r\n                _this.$message.success(\"操作成功\");\r\n                _this.loadData();\r\n              }else {\r\n                _this.$message.error(res.message);\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      editStatus(status, row) {\r\n        var _this = this;\r\n        let operation = \"\";\r\n        if (status == 0) {\r\n          operation = \"不启用\";\r\n        } else {\r\n          operation = \"启用\";\r\n        }\r\n        this.$confirm({\r\n          title: \"确认\" + operation+\"?\",\r\n          content:  `您确认要${operation}流程${row.name}?`,\r\n          onOk() {\r\n            let params = {\r\n              status: status,\r\n              id: row.id\r\n            };\r\n            _this.postFormAction(_this.url.updateStatus,params).then(res => {\r\n              if (res.success) {\r\n                _this.$message.success(\"操作成功\");\r\n                _this.loadData();\r\n              }else {\r\n                _this.$message.error(res.message);\r\n              }\r\n            });\r\n          }\r\n          ,\r\n          onCancel() {},\r\n        });\r\n      },\r\n      /*查看流程图片*/\r\n      showResource(row) {\r\n          this.viewTitle = \"流程图片预览(\" + row.diagramName + \")\";\r\n          this.diagramUrl = `${window._CONFIG['domianURL']}${this.url.img}?id=${row.id}`;\r\n          this.viewImage = true;\r\n      },\r\n      /*删除模型*/\r\n      deletelc(y,row) {\r\n        console.log(y,row);\r\n        if (y){\r\n          getAction(this.url.delete+row.id).then((res) => {\r\n            if (res.success){\r\n              this.$message.success(res.message);\r\n            }else {\r\n              this.$message.error(res.message);\r\n            }\r\n            this.loadData();\r\n          });\r\n        }\r\n      },\r\n      handleTableChange(pagination, filters, sorter) {\r\n        //分页、排序、筛选变化时触发\r\n        //TODO 筛选\r\n        if (Object.keys(sorter).length > 0) {\r\n          this.isorter.column = sorter.field;\r\n          this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\"\r\n        }\r\n        this.ipagination = pagination;\r\n        console.log(pagination,filters,sorter)\r\n        /*if (Object.keys(filters).length>0&&this.dataList.length>0){\r\n          for (const filterField in filters) {\r\n            let fiterVals = filters[filterField]||[];\r\n\r\n          }\r\n        }*/\r\n        // this.loadData();\r\n      },\r\n      loadData(arg) {\r\n        if(!this.url.list){\r\n          this.$message.error(\"请设置url.list属性!\")\r\n          return\r\n        }\r\n        //加载数据 若传入参数1则加载第一页的内容\r\n        if (arg === 1) {\r\n          this.ipagination.current = 1;\r\n        }\r\n        var params = this.getQueryParams();//查询条件\r\n        this.loading = true;\r\n        getAction(this.url.list, params).then((res) => {\r\n          if (res.success) {\r\n            let records = res.result||[];\r\n            this.dataSource = records;\r\n            this.dataList = records;\r\n            this.ipagination.total = records.length;\r\n          }\r\n          if(res.code===510){\r\n            this.$message.warning(res.message)\r\n          }\r\n          this.loading = false;\r\n        })\r\n      },\r\n      getQueryParams(){\r\n        var param = Object.assign({}, this.queryParam,this.isorter);\r\n        delete param.createTimeRange; // 时间参数不传递后台\r\n        return filterObj(param);\r\n      },\r\n\r\n      // 重置\r\n      searchReset(){\r\n        var that = this;\r\n        var logType = that.queryParam.logType;\r\n        that.queryParam = {}; //清空查询区域参数\r\n        that.queryParam.logType = logType;\r\n        that.loadData(this.ipagination.current);\r\n      },\r\n      onDateChange: function (value, dateString) {\r\n        console.log(dateString[0],dateString[1]);\r\n        this.queryParam.createTime_begin=dateString[0];\r\n        this.queryParam.createTime_end=dateString[1];\r\n      },\r\n      onDateOk(value) {\r\n        console.log(value);\r\n      },\r\n\r\n      filter_categoryId(v,r) {\r\n        // console.log(v,r)\r\n        return r.categoryId == v;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  @import '~@assets/less/common.less';\r\n  .nodespan{\r\n    color: #999;\r\n  }\r\n  .ant-checkbox-wrapper + .ant-checkbox-wrapper{\r\n    margin-left: 0;\r\n    margin-right: 8px;\r\n  }\r\n</style>"],"sourceRoot":"src/views/activiti"}]}