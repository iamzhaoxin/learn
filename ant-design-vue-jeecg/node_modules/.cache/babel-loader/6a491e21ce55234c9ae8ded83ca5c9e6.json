{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\alteration\\Step2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\alteration\\Step2.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { postAction } from '@/api/manage';\nexport default {\n  name: \"Step2\",\n  props: ['userList'],\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      loading: false,\n      // accountName: this.userList.username,\n      dropList: \"0\",\n      captcha: \"\",\n      show: true,\n      state: {\n        time: 60,\n        smsSendBtn: false\n      },\n      formLogin: {\n        captcha: \"\",\n        mobile: \"\"\n      },\n      validatorRules: {\n        captcha: {\n          rule: [{\n            required: true,\n            message: '请输入短信验证码!'\n          }, {\n            validator: this.validateCaptcha\n          }]\n        },\n        phone: {\n          rule: [{\n            required: true,\n            message: '请输入手机号码!'\n          }, {\n            validator: this.validatePhone\n          }]\n        }\n      }\n    };\n  },\n  computed: {},\n  methods: {\n    nextStep: function nextStep() {\n      var _this = this;\n\n      var that = this;\n      that.loading = true;\n      this.form.validateFields(function (err, values) {\n        console.log(values);\n\n        if (!err) {\n          if (that.dropList == \"0\") {\n            if (values.captcha == undefined) {\n              _this.cmsFailed(\"请输入短信验证码!\");\n            } else {\n              var params = {};\n              params.phone = values.phone;\n              params.smscode = values.captcha;\n              postAction(\"/sys/user/phoneVerification\", params).then(function (res) {\n                if (res.success) {\n                  console.log(res);\n                  var userList = {\n                    username: res.result.username,\n                    phone: values.phone,\n                    smscode: res.result.smscode\n                  };\n                  setTimeout(function () {\n                    that.$emit('nextStep', userList);\n                  }, 0);\n                } else {\n                  _this.cmsFailed(res.message);\n                }\n              });\n            }\n          }\n        }\n      });\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var that = this;\n      var phone = that.form.getFieldValue(\"phone\");\n\n      if (!phone) {\n        this.cmsFailed(\"手机号不能为空!\");\n        return;\n      }\n\n      this.state.smsSendBtn = true;\n      var interval = window.setInterval(function () {\n        if (that.state.time-- <= 0) {\n          that.state.time = 60;\n          that.state.smsSendBtn = false;\n          window.clearInterval(interval);\n        }\n      }, 1000);\n      var hide = this.$message.loading('验证码发送中..', 0);\n      var smsParams = {\n        mobile: phone,\n        smsmode: \"2\"\n      };\n      postAction(\"/sys/sms\", smsParams).then(function (res) {\n        if (!res.success) {\n          setTimeout(hide, 1);\n\n          _this2.cmsFailed(res.message);\n        }\n\n        setTimeout(hide, 500);\n      });\n    },\n    cmsFailed: function cmsFailed(err) {\n      this.$notification['error']({\n        message: \"验证错误\",\n        description: err,\n        duration: 4\n      });\n    },\n    handleChangeSelect: function handleChangeSelect(value) {\n      var that = this;\n      console.log(value);\n\n      if (value == 0) {\n        that.dropList = \"0\";\n        that.show = true;\n      } else {\n        that.dropList = \"1\";\n        that.show = false;\n      }\n    },\n    validatePhone: function validatePhone(rule, value, callback) {\n      if (value) {\n        var myreg = /^[1][3,4,5,7,8][0-9]{9}$/;\n\n        if (!myreg.test(value)) {\n          callback(\"请输入正确的手机号\");\n        } else {\n          callback();\n        }\n      } else {\n        callback();\n      }\n    }\n  }\n};",{"version":3,"sources":["Step2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a-form :form=\"form\" style=\"max-width: 500px; margin: 40px auto 0;\" @keyup.enter.native=\"nextStep\">\n      <a-form-item\n        label=\"手机\"\n        :labelCol=\"{span: 5}\"\n        :wrapperCol=\"{span: 19}\"\n      >\n        <a-input\n          type=\"text\"\n          autocomplete=\"false\"\n          style=\"width:310px;margin-left:-10px\"\n          v-decorator=\"['phone',{ rules: validatorRules.phone.rule}]\"\n          placeholder=\"请输入手机号\">\n          <a-icon slot=\"prefix\" type=\"phone\" :style=\"{ color: 'rgba(0,0,0,.25)'}\"/>\n        </a-input>\n      </a-form-item>\n      <a-form-item\n        label=\"验证码\"\n        :labelCol=\"{span: 5}\"\n        :wrapperCol=\"{span: 19}\"\n        v-if=\"show\">\n        <a-row :gutter=\"16\" style=\"margin-left: 2px\">\n          <a-col class=\"gutter-row\" :span=\"12\">\n            <a-input\n              v-decorator=\"['captcha',validatorRules.captcha]\"\n              type=\"text\"\n              placeholder=\"手机短信验证码\">\n            </a-input>\n          </a-col>\n          <a-col class=\"gutter-row\" :span=\"8\">\n            <a-button\n              tabindex=\"-1\"\n              size=\"default\"\n              :disabled=\"state.smsSendBtn\"\n              @click.stop.prevent=\"getCaptcha\"\n              v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"></a-button>\n          </a-col>\n        </a-row>\n      </a-form-item>\n      <a-form-item :wrapperCol=\"{span: 19, offset: 5}\">\n        <router-link style=\"float: left;line-height: 40px;\" :to=\"{ name: 'login' }\">使用已有账户登录</router-link>\n        <a-button type=\"primary\" @click=\"nextStep\" style=\"margin-left: 20px\">下一步</a-button>\n      </a-form-item>\n    </a-form>\n  </div>\n</template>\n\n<script>\n  import {postAction} from '@/api/manage'\n\n  export default {\n    name: \"Step2\",\n    props: ['userList'],\n    data() {\n      return {\n        form: this.$form.createForm(this),\n        loading: false,\n        // accountName: this.userList.username,\n        dropList: \"0\",\n        captcha: \"\",\n        show: true,\n        state: {\n          time: 60,\n          smsSendBtn: false,\n        },\n        formLogin: {\n          captcha: \"\",\n          mobile: \"\",\n        },\n        validatorRules: {\n          captcha: {rule: [{required: true, message: '请输入短信验证码!'}, {validator: this.validateCaptcha}]},\n          phone: {rule: [{required: true, message: '请输入手机号码!'}, {validator: this.validatePhone}]},\n        },\n      }\n    },\n    computed: {\n    },\n    methods: {\n      nextStep() {\n        let that = this\n        that.loading = true\n        this.form.validateFields((err, values) => {\n          console.log(values);\n          if (!err) {\n            if (that.dropList == \"0\") {\n              if (values.captcha == undefined) {\n                this.cmsFailed(\"请输入短信验证码!\");\n              } else {\n                var params = {}\n                params.phone = values.phone;\n                params.smscode = values.captcha;\n                postAction(\"/sys/user/phoneVerification\", params).then((res) => {\n                  if (res.success) {\n                    console.log(res);\n                    var userList = {\n                      username: res.result.username,\n                      phone: values.phone,\n                      smscode: res.result.smscode\n                    };\n                    setTimeout(function () {\n                      that.$emit('nextStep', userList)\n                    }, 0)\n                  } else {\n                    this.cmsFailed(res.message);\n                  }\n                })\n\n              }\n            }\n\n\n          }\n        })\n      },\n      getCaptcha(e) {\n        e.preventDefault();\n        let that = this;\n        let phone=that.form.getFieldValue(\"phone\")\n        if(!phone){\n          this.cmsFailed(\"手机号不能为空!\");\n          return;\n        }\n        this.state.smsSendBtn = true;\n        let interval = window.setInterval(() => {\n          if (that.state.time-- <= 0) {\n            that.state.time = 60;\n            that.state.smsSendBtn = false;\n            window.clearInterval(interval);\n          }\n        }, 1000);\n\n        const hide = this.$message.loading('验证码发送中..', 0);\n        let smsParams = {\n          mobile: phone,\n          smsmode: \"2\"\n        };\n        postAction(\"/sys/sms\", smsParams).then(res => {\n          if (!res.success) {\n            setTimeout(hide, 1);\n            this.cmsFailed(res.message);\n          }\n          setTimeout(hide, 500);\n        })\n      },\n      cmsFailed(err) {\n        this.$notification['error']({\n          message: \"验证错误\",\n          description: err,\n          duration: 4,\n        });\n      },\n      handleChangeSelect(value) {\n        var that = this;\n        console.log(value);\n        if (value == 0) {\n          that.dropList = \"0\";\n          that.show = true;\n        } else {\n          that.dropList = \"1\";\n          that.show = false;\n        }\n      },\n      validatePhone(rule,value,callback){\n          if(value){\n            var myreg=/^[1][3,4,5,7,8][0-9]{9}$/;\n            if(!myreg.test(value)){\n              callback(\"请输入正确的手机号\")\n            }else{\n              callback();\n            }\n          }else{\n            callback()\n          }\n      }\n    }\n\n  }\n</script>\n\n<style lang=\"less\" scoped>\n  .stepFormText {\n    margin-bottom: 24px;\n  }\n\n  .ant-form-item-label,\n  .ant-form-item-control {\n    line-height: 22px;\n  }\n\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n</style>"],"sourceRoot":"src/views/user/alteration"}]}