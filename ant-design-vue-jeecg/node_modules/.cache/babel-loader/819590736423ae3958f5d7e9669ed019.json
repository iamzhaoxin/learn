{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeTable.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:\\\\activiti\\\\project01\\\\jeecg-boot-activiti-master\\\\ant-design-vue-jeecg\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport XEUtils from 'xe-utils';\nimport PropTypes from 'ant-design-vue/es/_util/vue-types';\nimport { JVXETypes } from '@/components/jeecg/JVxeTable/index';\nimport VxeWebSocketMixins from '../mixins/vxe.web.socket.mixins';\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil';\nimport { getRefPromise } from '../utils/vxeUtils';\nimport { getEnhancedMixins, replaceProps } from '../utils/cellUtils';\nimport JVxeToolbar from './JVxeToolbar';\nimport JVxeSubPopover from './JVxeSubPopover';\nimport JVxeDetailsModal from './JVxeDetailsModal';\nimport JVxePagination from './JVxePagination';\nimport { cloneObject, getVmParentByName, pushIfNotExist, randomString, simpleDebounce } from '@/utils/util';\nimport { UtilTools } from 'vxe-table/packages/tools/src/utils';\nimport { getNoAuthCols } from \"@/utils/authFilter\";\nexport default {\n  name: 'JVxeTable',\n  provide: function provide() {\n    var _this = this;\n\n    return {\n      superTrigger: function superTrigger(name, event) {\n        return _this.trigger(name, event);\n      }\n    };\n  },\n  mixins: [VxeWebSocketMixins],\n  components: {\n    JVxeToolbar: JVxeToolbar,\n    JVxeSubPopover: JVxeSubPopover,\n    JVxeDetailsModal: JVxeDetailsModal,\n    JVxePagination: JVxePagination\n  },\n  props: {\n    rowKey: PropTypes.string.def('id'),\n    // 列信息\n    columns: {\n      type: Array,\n      required: true\n    },\n    // 数据源\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    authPre: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    // 是否显示工具栏\n    toolbar: PropTypes.bool.def(false),\n    // 工具栏配置\n    toolbarConfig: PropTypes.object.def(function () {\n      return {\n        // prefix 前缀；suffix 后缀；\n        slots: ['prefix', 'suffix'],\n        // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮；collapse 展开收起\n        btns: ['add', 'remove', 'clearSelection']\n      };\n    }),\n    // 是否显示行号\n    rowNumber: PropTypes.bool.def(false),\n    // 是否可选择行\n    rowSelection: PropTypes.bool.def(false),\n    // 选择行类型\n    rowSelectionType: PropTypes.oneOf(['checkbox', 'radio']).def('checkbox'),\n    // 是否可展开行\n    rowExpand: PropTypes.bool.def(false),\n    // 展开行配置\n    expandConfig: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 页面是否在加载中\n    loading: PropTypes.bool.def(false),\n    height: PropTypes.instanceOf([Number, String]).def('auto'),\n    // 最大高度\n    maxHeight: {\n      type: Number,\n      default: function _default() {\n        return null;\n      }\n    },\n    // 要禁用的行 TODO 未实现\n    disabledRows: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 是否禁用全部组件\n    disabled: PropTypes.bool.def(false),\n    // 是否可拖拽排序 TODO 仅实现上下排序，未实现拖拽排序（可能无法实现或较为困难）\n    dragSort: PropTypes.bool.def(false),\n    // 排序字段保存的Key\n    dragSortKey: PropTypes.string.def('orderNum'),\n    // 大小，可选值有：medium（中）、small（小）、mini（微）、tiny（非常小）\n    size: PropTypes.oneOf(['medium', 'small', 'mini', 'tiny']).def('medium'),\n    // 是否显示边框线\n    bordered: PropTypes.bool.def(false),\n    // 分页器参数，设置了即可显示分页器\n    pagination: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 点击行时是否显示子表单\n    clickRowShowSubForm: PropTypes.bool.def(false),\n    // 点击行时是否显示主表单\n    clickRowShowMainForm: PropTypes.bool.def(false),\n    // 是否点击选中行，优先级最低\n    clickSelectRow: PropTypes.bool.def(false),\n    // 是否开启 reload 数据效果\n    reloadEffect: PropTypes.bool.def(false),\n    // 校验规则\n    editRules: PropTypes.object.def(function () {\n      return {};\n    }),\n    // 是否异步删除行，如果你要实现异步删除，那么需要把这个选项开启，\n    // 在remove事件里调用confirmRemove方法才会真正删除（除非删除的全是新增的行）\n    asyncRemove: PropTypes.bool.def(false)\n  },\n  data: function data() {\n    return {\n      isJVXETable: true,\n      // caseId，表格唯一标识\n      caseId: \"_j-vxe-\".concat(randomString(8), \"_\"),\n      // 内置columns\n      _innerColumns: [],\n      // 内置 EditRules\n      _innerEditRules: [],\n      // 记录滚动条位置\n      scroll: {\n        top: 0,\n        left: 0\n      },\n      // 当前是否正在滚动\n      scrolling: false,\n      // vxe 默认配置\n      defaultVxeProps: {\n        'row-id': this.rowKey,\n        // 高亮hover的行\n        'highlight-hover-row': true,\n        // 溢出隐藏并显示tooltip\n        'show-overflow': true,\n        // 表头溢出隐藏并显示tooltip\n        'show-header-overflow': true,\n        'show-footer-overflow': true,\n        // 可编辑配置\n        'edit-config': {\n          trigger: 'click',\n          mode: 'cell',\n          showStatus: true\n        },\n        'expand-config': {\n          iconClose: 'ant-table-row-expand-icon ant-table-row-collapsed',\n          iconOpen: 'ant-table-row-expand-icon ant-table-row-expanded'\n        },\n        // 虚拟滚动配置，y轴大于30条数据时启用虚拟滚动\n        // 'scroll-y': {\n        //   gt: 30\n        // },\n        // 'scroll-x': {\n        //   gt: 15\n        // },\n        'radio-config': {\n          highlight: true\n        },\n        'checkbox-config': {\n          highlight: true\n        }\n      },\n      // 绑定左侧选择框\n      selectedRows: [],\n      // 绑定左侧选择框已选择的id\n      selectedRowIds: [],\n      // 统计列配置\n      statistics: {\n        has: false,\n        sum: [],\n        average: []\n      },\n      // 允许执行刷新特效的行ID\n      reloadEffectRowKeysMap: {},\n      //配置了但是没有授权的按钮和列 集合\n      excludeCode: []\n    };\n  },\n  computed: {\n    // vxe 最终 columns\n    vxeColumns: function vxeColumns() {\n      var _this2 = this;\n\n      this._innerColumns.forEach(function (column) {\n        var renderOptions = {\n          caseId: _this2.caseId,\n          bordered: _this2.bordered,\n          disabled: _this2.disabled,\n          scrolling: _this2.scrolling,\n          reloadEffect: _this2.reloadEffect,\n          reloadEffectRowKeysMap: _this2.reloadEffectRowKeysMap,\n          listeners: _this2.cellListeners\n        };\n\n        if (column.$type === JVXETypes.rowDragSort) {\n          renderOptions.dragSortKey = _this2.dragSortKey;\n        } // slot 组件特殊处理\n\n\n        if (column.$type === JVXETypes.slot) {\n          if (_this2.$scopedSlots.hasOwnProperty(column.slotName)) {\n            renderOptions.slot = _this2.$scopedSlots[column.slotName];\n            renderOptions.target = _this2;\n          }\n        }\n\n        if (column.editRender) {\n          Object.assign(column.editRender, renderOptions);\n        }\n\n        if (column.cellRender) {\n          Object.assign(column.cellRender, renderOptions);\n        } // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n\n\n        if (column.$type === JVXETypes.file || column.$type === JVXETypes.image) {\n          if (column.width && column.width.endsWith('px')) {\n            column.width = Number.parseInt(column.width.substr(0, column.width.length - 2)) + Number.parseInt(1) + 'px';\n          }\n        } // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n\n      });\n\n      return this._innerColumns;\n    },\n    // vxe 最终 editRules\n    vxeEditRules: function vxeEditRules() {\n      return Object.assign({}, this.editRules, this._innerEditRules);\n    },\n    // vxe 最终 props\n    vxeProps: function vxeProps() {\n      var expandConfig = Object.assign({}, this.defaultVxeProps['expand-config'], this.expandConfig);\n      return Object.assign({}, this.defaultVxeProps, {\n        showFooter: this.statistics.has\n      }, this.$attrs, {\n        loading: this.loading,\n        columns: this.vxeColumns,\n        editRules: this.vxeEditRules,\n        // data: this.dataSource,\n        height: this.height === 'auto' ? null : this.height,\n        maxHeight: this.maxHeight,\n        border: this.bordered,\n        expandConfig: expandConfig,\n        footerMethod: this.handleFooterMethod // footerSpanMethod: this.handleFooterSpanMethod,\n\n      });\n    },\n    // vxe 最终 events\n    vxeEvents: function vxeEvents() {\n      var _this3 = this;\n\n      // 内置事件\n      var events = {\n        'scroll': this.handleVxeScroll,\n        'cell-click': this.handleCellClick,\n        'edit-closed': this.handleEditClosed,\n        'edit-actived': this.handleEditActived,\n        'radio-change': this.handleVxeRadioChange,\n        'checkbox-all': this.handleVxeCheckboxAll,\n        'checkbox-change': this.handleVxeCheckboxChange\n      }; // 用户传递的事件，进行合并操作\n\n      Object.keys(this.$listeners).forEach(function (key) {\n        var listen = _this3.$listeners[key];\n\n        if (events.hasOwnProperty(key)) {\n          if (Array.isArray(listen)) {\n            listen.push(events[key]);\n          } else {\n            listen = [events[key], listen];\n          }\n        }\n\n        events[key] = listen;\n      });\n      return events;\n    },\n    // 组件监听事件\n    cellListeners: function cellListeners() {\n      var _this4 = this;\n\n      return {\n        trigger: function trigger(name, event) {\n          return _this4.trigger(name, event);\n        },\n        valueChange: function valueChange(event) {\n          return _this4.trigger('valueChange', event);\n        },\n\n        /** 当前行向上移一位 */\n        rowMoveUp: function rowMoveUp(rowIndex) {\n          return _this4.rowResort(rowIndex, rowIndex - 1);\n        },\n\n        /** 当前行向下移一位 */\n        rowMoveDown: function rowMoveDown(rowIndex) {\n          return _this4.rowResort(rowIndex, rowIndex + 1);\n        },\n\n        /** 在当前行下面插入一行 */\n        rowInsertDown: function rowInsertDown(rowIndex) {\n          return _this4.insertRows({}, rowIndex + 1);\n        }\n      };\n    }\n  },\n  watch: {\n    dataSource: {\n      //   deep: true,\n      immediate: true,\n      handler: function () {\n        var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _this5 = this;\n\n          var vxe;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return getRefPromise(this, 'vxe');\n\n                case 2:\n                  vxe = _context.sent;\n\n                  // 阻断vue监听大数据，提高性能\n                  // 开启了排序就自动计算排序值\n                  if (this.dragSort) {\n                    this.dataSource.forEach(function (data, idx) {\n                      _this5.$set(data, _this5.dragSortKey, idx + 1);\n                    });\n                  }\n\n                  vxe.loadData(this.dataSource); // TODO 解析disabledRows\n                  // let disabled = false\n                  //\n                  // let disabledRowIds = (this.disabledRowIds || [])\n                  // // 解析disabledRows\n                  // Object.keys(this.disabledRows).forEach(disabledColKey => {\n                  //   // 判断是否有该属性\n                  //   if (data.hasOwnProperty(disabledColKey)) {\n                  //     if (disabled !== true) {\n                  //       let temp = this.disabledRows[disabledColKey]\n                  //       // 禁用规则可以是一个数组\n                  //       if (Array.isArray(temp)) {\n                  //         disabled = temp.includes(data[disabledColKey])\n                  //       } else {\n                  //         disabled = (temp === data[disabledColKey])\n                  //       }\n                  //       if (disabled) {\n                  //         disabledRowIds.push(row.id)\n                  //       }\n                  //     }\n                  //   }\n                  // })\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function handler() {\n          return _handler.apply(this, arguments);\n        }\n\n        return handler;\n      }()\n    },\n    columns: {\n      immediate: true,\n      handler: function handler(columns) {\n        var _this6 = this;\n\n        //获取不需要显示列\n        this.loadExcludeCode();\n        var _innerColumns = [];\n        var _innerEditRules = {};\n        var rowNumber = this.rowNumber,\n            rowSelection = this.rowSelection,\n            rowExpand = this.rowExpand,\n            dragSort = this.dragSort;\n        var expandColumn, seqColumn, checkboxColumn, radioColumn, dragSortColumn;\n\n        if (Array.isArray(columns)) {\n          this.statistics.has = false;\n          this.statistics.sum = [];\n          this.statistics.average = []; // 处理成vxe可识别的columns\n\n          columns.forEach(function (column) {\n            if (_this6.excludeCode.indexOf(column.key) >= 0) {\n              return false;\n            }\n\n            var col = _objectSpread({}, column);\n\n            var type = col.type;\n            var enhanced = getEnhancedMixins(type);\n\n            if (type === JVXETypes.rowNumber) {\n              seqColumn = col;\n            } else if (type === JVXETypes.rowCheckbox) {\n              checkboxColumn = col;\n            } else if (type === JVXETypes.rowRadio) {\n              radioColumn = col;\n            } else if (type === JVXETypes.rowExpand) {\n              expandColumn = col;\n            } else if (type === JVXETypes.rowDragSort) {\n              dragSortColumn = col;\n            } else {\n              col.field = col.key; // 防止和vxeTable自带的type起冲突\n\n              col.$type = col.type;\n              delete col.type;\n              var renderName = 'cellRender',\n                  renderOptions = {\n                name: JVXETypes._prefix + type\n              };\n\n              if (type) {\n                // hidden 是特殊的组件\n                if (type === JVXETypes.hidden) {\n                  col.visible = false;\n                } else if (enhanced.switches.editRender) {\n                  renderName = 'editRender';\n                  renderOptions.type = enhanced.switches.visible ? 'visible' : 'default';\n                }\n              } else {\n                renderOptions.name = JVXETypes._prefix + JVXETypes.normal;\n              }\n\n              col[renderName] = renderOptions; // 处理字典\n\n              if (col.dictCode) {\n                _this6._loadDictConcatToOptions(col);\n              } // 处理校验\n\n\n              if (col.validateRules) {\n                var rules = [];\n\n                if (Array.isArray(col.validateRules)) {\n                  var _iteratorNormalCompletion = true;\n                  var _didIteratorError = false;\n                  var _iteratorError = undefined;\n\n                  try {\n                    for (var _iterator = col.validateRules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                      var rule = _step.value;\n                      var replace = {\n                        message: replaceProps(col, rule.message)\n                      };\n\n                      if (rule.unique || rule.pattern === 'only') {\n                        // 唯一校验器\n                        rule.validator = uniqueValidator.bind(_this6);\n                      } else if (rule.pattern) {\n                        // 非空\n                        if (rule.pattern === fooPatterns[0].value) {\n                          rule.required = true;\n                          delete rule.pattern;\n                        } else {\n                          // 兼容Online表单的特殊规则\n                          var _iteratorNormalCompletion2 = true;\n                          var _didIteratorError2 = false;\n                          var _iteratorError2 = undefined;\n\n                          try {\n                            for (var _iterator2 = fooPatterns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                              var foo = _step2.value;\n\n                              if (foo.value === rule.pattern) {\n                                rule.pattern = foo.pattern;\n                                break;\n                              }\n                            }\n                          } catch (err) {\n                            _didIteratorError2 = true;\n                            _iteratorError2 = err;\n                          } finally {\n                            try {\n                              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                                _iterator2.return();\n                              }\n                            } finally {\n                              if (_didIteratorError2) {\n                                throw _iteratorError2;\n                              }\n                            }\n                          }\n                        }\n                      } else if (typeof rule.handler === 'function') {\n                        // 自定义函数校验\n                        rule.validator = handlerConvertToValidator.bind(_this6);\n                      }\n\n                      rules.push(Object.assign({}, rule, replace));\n                    }\n                  } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                  } finally {\n                    try {\n                      if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                      }\n                    } finally {\n                      if (_didIteratorError) {\n                        throw _iteratorError;\n                      }\n                    }\n                  }\n                }\n\n                _innerEditRules[col.key] = rules;\n              } // 处理统计列\n              // sum = 求和、average = 平均值\n\n\n              if (Array.isArray(col.statistics)) {\n                _this6.statistics.has = true;\n                col.statistics.forEach(function (item) {\n                  var arr = _this6.statistics[item.toLowerCase()];\n\n                  if (Array.isArray(arr)) {\n                    pushIfNotExist(arr, col.key);\n                  }\n                });\n              }\n\n              _innerColumns.push(col);\n            }\n          });\n        } // 判断是否开启了序号\n\n\n        if (rowNumber) {\n          var col = {\n            type: 'seq',\n            title: '#',\n            width: 60,\n            fixed: 'left',\n            align: 'center'\n          };\n\n          if (seqColumn) {\n            col = Object.assign(col, seqColumn, {\n              type: 'seq'\n            });\n          }\n\n          _innerColumns.unshift(col);\n        } // 判断是否开启了可选择行\n\n\n        if (rowSelection) {\n          var width = 40;\n\n          if (this.statistics.has && !rowExpand && !dragSort) {\n            width = 60;\n          }\n\n          var _col = {\n            type: this.rowSelectionType,\n            width: width,\n            fixed: 'left',\n            align: 'center'\n          }; // radio\n\n          if (this.rowSelectionType === 'radio' && radioColumn) {\n            _col = Object.assign(_col, radioColumn, {\n              type: 'radio'\n            });\n          } // checkbox\n\n\n          if (this.rowSelectionType === 'checkbox' && checkboxColumn) {\n            _col = Object.assign(_col, checkboxColumn, {\n              type: 'checkbox'\n            });\n          }\n\n          _innerColumns.unshift(_col);\n        } // 是否可展开行\n\n\n        if (rowExpand) {\n          var _width = 40;\n\n          if (this.statistics.has && !dragSort) {\n            _width = 60;\n          }\n\n          var _col2 = {\n            type: 'expand',\n            title: '',\n            width: _width,\n            fixed: 'left',\n            align: 'center',\n            slots: {\n              content: 'expandContent'\n            }\n          };\n\n          if (expandColumn) {\n            _col2 = Object.assign(_col2, expandColumn, {\n              type: 'expand'\n            });\n          }\n\n          _innerColumns.unshift(_col2);\n        } // 是否可拖动排序\n\n\n        if (dragSort) {\n          var _width2 = 40;\n\n          if (this.statistics.has) {\n            _width2 = 60;\n          }\n\n          var _col3 = {\n            type: JVXETypes.rowDragSort,\n            title: '',\n            width: _width2,\n            fixed: 'left',\n            align: 'center',\n            cellRender: {\n              name: JVXETypes._prefix + JVXETypes.rowDragSort\n            }\n          };\n\n          if (dragSortColumn) {\n            _col3 = Object.assign(_col3, dragSortColumn, {\n              type: JVXETypes.rowDragSort\n            });\n          }\n\n          _innerColumns.unshift(_col3);\n        }\n\n        this._innerColumns = _innerColumns;\n        this._innerEditRules = _innerEditRules;\n      }\n    }\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.handleTabsChange();\n  },\n  methods: {\n    /**\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动重置表格\n     */\n    handleTabsChange: function handleTabsChange() {\n      var _this7 = this;\n\n      // 获取父级\n      var tabs = getVmParentByName(this, 'ATabs');\n      var tabPane = getVmParentByName(this, 'ATabPane');\n\n      if (tabs && tabPane) {\n        // 用户自定义的 key\n        var currentKey = tabPane.$vnode.key; // 添加 activeKey 监听\n\n        var unwatch = tabs.$children[0].$watch('$data._activeKey', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!(currentKey === key)) {\n                      _context2.next = 7;\n                      break;\n                    }\n\n                    _context2.next = 3;\n                    return _this7.$nextTick();\n\n                  case 3:\n                    _context2.next = 5;\n                    return _this7.refreshScroll();\n\n                  case 5:\n                    _context2.next = 7;\n                    return _this7.recalculate();\n\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()); // 当前实例销毁时取消监听\n\n        this.$on('beforeDestroy', function () {\n          return unwatch();\n        });\n      }\n    },\n    handleVxeScroll: function handleVxeScroll(event) {\n      var $refs = this.$refs,\n          scroll = this.scroll; // 记录滚动条的位置\n\n      scroll.top = event.scrollTop;\n      scroll.left = event.scrollLeft;\n      $refs.subPopover ? $refs.subPopover.close() : null;\n      this.scrolling = true;\n      this.closeScrolling();\n    },\n    // 当手动勾选单选时触发的事件\n    handleVxeRadioChange: function handleVxeRadioChange(event) {\n      var row = event.$table.getRadioRecord();\n      this.selectedRows = row ? [row] : [];\n      this.handleSelectChange('radio', this.selectedRows, event);\n    },\n    // 当手动勾选全选时触发的事件\n    handleVxeCheckboxAll: function handleVxeCheckboxAll(event) {\n      this.selectedRows = event.$table.getCheckboxRecords();\n      this.handleSelectChange('checkbox-all', this.selectedRows, event);\n    },\n    // 当手动勾选并且值发生改变时触发的事件\n    handleVxeCheckboxChange: function handleVxeCheckboxChange(event) {\n      this.selectedRows = event.$table.getCheckboxRecords();\n      this.handleSelectChange('checkbox', this.selectedRows, event);\n    },\n    // 行选择change事件\n    handleSelectChange: function handleSelectChange(type, selectedRows, $event) {\n      var action;\n\n      if (type === 'radio') {\n        action = 'selected';\n      } else if (type === 'checkbox') {\n        action = selectedRows.includes($event.row) ? 'selected' : 'unselected';\n      } else {\n        action = 'selected-all';\n      }\n\n      this.selectedRowIds = selectedRows.map(function (row) {\n        return row.id;\n      });\n      this.trigger('selectRowChange', {\n        type: type,\n        action: action,\n        $event: $event,\n        row: $event.row,\n        selectedRows: this.selectedRows,\n        selectedRowIds: this.selectedRowIds\n      });\n    },\n    // 点击单元格时触发的事件\n    handleCellClick: function handleCellClick(event) {\n      var row = event.row,\n          column = event.column,\n          $event = event.$event,\n          $table = event.$table;\n      var $refs = this.$refs; // 点击了可编辑的\n\n      if (column.editRender) {\n        $refs.subPopover ? $refs.subPopover.close() : null;\n        return;\n      } // 显示详细信息\n\n\n      if (column.own.showDetails) {\n        // 两个如果同时存在的话会出现死循环\n        $refs.subPopover ? $refs.subPopover.close() : null;\n        $refs.detailsModal ? $refs.detailsModal.open(event) : null;\n      } else if ($refs.subPopover) {\n        $refs.subPopover.toggle(event);\n      } else if (this.clickSelectRow) {\n        var className = $event.target.className || '';\n        className = typeof className === 'string' ? className : className.toString(); // 点击的是expand，不做处理\n\n        if (className.includes('vxe-table--expand-btn')) {\n          return;\n        } // 点击的是checkbox，不做处理\n\n\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n          return;\n        } // 点击的是radio，不做处理\n\n\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n          return;\n        }\n\n        if (this.rowSelectionType === 'radio') {\n          $table.setRadioRow(row);\n          this.handleVxeRadioChange(event);\n        } else {\n          $table.toggleCheckboxRow(row);\n          this.handleVxeCheckboxChange(event);\n        }\n      }\n    },\n    // 单元格编辑状态下被关闭时会触发该事件\n    handleEditClosed: function handleEditClosed(_ref2) {\n      var column = _ref2.column;\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editClosed.apply(this, arguments);\n    },\n    // 单元格被激活编辑时会触发该事件\n    handleEditActived: function handleEditActived(_ref3) {\n      var column = _ref3.column;\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editActived.apply(this, arguments);\n    },\n\n    /** 表尾数据处理方法，用于显示统计信息 */\n    handleFooterMethod: function handleFooterMethod(_ref4) {\n      var columns = _ref4.columns,\n          data = _ref4.data;\n      var statistics = this.statistics;\n      var footers = [];\n\n      if (statistics.has) {\n        if (statistics.sum.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '合计',\n            checks: statistics.sum,\n            method: function method(column) {\n              return XEUtils.sum(data, column.property);\n            }\n          }));\n        }\n\n        if (statistics.average.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '平均',\n            checks: statistics.average,\n            method: function method(column) {\n              return XEUtils.mean(data, column.property);\n            }\n          }));\n        }\n      }\n\n      return footers;\n    },\n    getFooterStatisticsMap: function getFooterStatisticsMap(_ref5) {\n      var columns = _ref5.columns,\n          title = _ref5.title,\n          checks = _ref5.checks,\n          method = _ref5.method;\n      return columns.map(function (column, columnIndex) {\n        if (columnIndex === 0) {\n          return title;\n        }\n\n        if (checks.includes(column.property)) {\n          return method(column, columnIndex);\n        }\n\n        return null;\n      });\n    },\n\n    /** 表尾单元格合并方法 */\n    handleFooterSpanMethod: function handleFooterSpanMethod(event) {\n      if (event.columnIndex === 0) {\n        return {\n          colspan: 2\n        };\n      }\n    },\n\n    /*--- 外部可调用接口方法 ---*/\n\n    /**\n     * 重置滚动条Top位置\n     * @param top 新top位置，留空则滚动到上次记录的位置，用于解决切换tab选项卡时导致白屏以及自动将滚动条滚动到顶部的问题\n     */\n    resetScrollTop: function resetScrollTop(top) {\n      this.scrollTo(null, top == null || top === '' ? this.scroll.top : top);\n    },\n\n    /**\n     * 加载新数据，和 loadData 不同的是，用该方法加载的数据都是相当于点新增按钮新增的数据。\n     * 适用于不是数据库里查出来的没有id的临时数据\n     * @param dataSource\n     */\n    loadNewData: function () {\n      var _loadNewData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dataSource) {\n        var xTable;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!Array.isArray(dataSource)) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                xTable = this.$refs.vxe.$refs.xTable;\n                _context3.next = 4;\n                return xTable.loadData(dataSource);\n\n              case 4:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 5:\n                return _context3.abrupt(\"return\", []);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadNewData(_x2) {\n        return _loadNewData.apply(this, arguments);\n      }\n\n      return loadNewData;\n    }(),\n    // 校验table，失败返回errMap，成功返回null\n    validateTable: function () {\n      var _validateTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var errMap;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.validate().catch(function (errMap) {\n                  return errMap;\n                });\n\n              case 2:\n                errMap = _context4.sent;\n                return _context4.abrupt(\"return\", errMap ? errMap : null);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function validateTable() {\n        return _validateTable.apply(this, arguments);\n      }\n\n      return validateTable;\n    }(),\n    // 完整校验\n    fullValidateTable: function () {\n      var _fullValidateTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var errMap;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.fullValidate().catch(function (errMap) {\n                  return errMap;\n                });\n\n              case 2:\n                errMap = _context5.sent;\n                return _context5.abrupt(\"return\", errMap ? errMap : null);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function fullValidateTable() {\n        return _fullValidateTable.apply(this, arguments);\n      }\n\n      return fullValidateTable;\n    }(),\n\n    /** 设置某行某列的值 */\n    setValues: function setValues(values) {\n      var _this8 = this;\n\n      if (!Array.isArray(values)) {\n        console.warn(\"JVxeTable.setValues\\uFF1A\\u5FC5\\u987B\\u4F20\\u9012\\u6570\\u7EC4\");\n        return;\n      }\n\n      values.forEach(function (item, idx) {\n        var rowKey = item.rowKey,\n            record = item.values;\n\n        var _this8$getIfRowById = _this8.getIfRowById(rowKey),\n            row = _this8$getIfRowById.row;\n\n        if (!row) {\n          return;\n        }\n\n        Object.keys(record).forEach(function (colKey) {\n          var column = _this8.getColumnByKey(colKey);\n\n          if (column) {\n            var oldValue = row[colKey];\n            var newValue = record[colKey];\n\n            if (newValue !== oldValue) {\n              _this8.$set(row, colKey, newValue); // 触发 valueChange 事件\n\n\n              _this8.trigger('valueChange', {\n                type: column.own.$type,\n                value: newValue,\n                oldValue: oldValue,\n                col: column.own,\n                column: column,\n                isSetValues: true\n              });\n            }\n          } else {\n            console.warn(\"JVxeTable.setValues\\uFF1A\\u6CA1\\u6709\\u627E\\u5230key\\u4E3A\\\"\".concat(colKey, \"\\\"\\u7684\\u5217\"));\n          }\n        });\n      });\n    },\n\n    /** 获取所有的数据，包括values、deleteIds */\n    getAll: function getAll() {\n      return {\n        tableData: this.getTableData(),\n        deleteData: this.getDeleteData()\n      };\n    },\n\n    /** 获取表格数据 */\n    getTableData: function getTableData() {\n      var _this9 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var rowIds = options.rowIds;\n      var tableData; // 仅查询指定id的行\n\n      if (Array.isArray(rowIds) && rowIds.length > 0) {\n        tableData = [];\n        rowIds.forEach(function (rowId) {\n          var _this9$getIfRowById = _this9.getIfRowById(rowId),\n              row = _this9$getIfRowById.row;\n\n          if (row) {\n            tableData.push(row);\n          }\n        });\n      } else {\n        // 查询所有行\n        tableData = this.$refs.vxe.getTableData().fullData;\n      }\n\n      return this.filterNewRows(tableData, false);\n    },\n\n    /** 仅获取新增的数据 */\n    getNewData: function getNewData() {\n      var newData = cloneObject(this.$refs.vxe.getInsertRecords());\n      newData.forEach(function (row) {\n        return delete row.id;\n      });\n      return newData;\n    },\n\n    /** 仅获取新增的数据,带有id */\n    getNewDataWithId: function getNewDataWithId() {\n      var newData = cloneObject(this.$refs.vxe.getInsertRecords());\n      return newData;\n    },\n\n    /** 根据ID获取行，新增的行也能查出来 */\n    getIfRowById: function getIfRowById(id) {\n      var row = this.getRowById(id),\n          isNew = false;\n\n      if (!row) {\n        row = this.getNewRowById(id);\n\n        if (!row) {\n          console.warn(\"JVxeTable.getIfRowById\\uFF1A\\u6CA1\\u6709\\u627E\\u5230id\\u4E3A\\\"\".concat(id, \"\\\"\\u7684\\u884C\"));\n          return {\n            row: null\n          };\n        }\n\n        isNew = true;\n      }\n\n      return {\n        row: row,\n        isNew: isNew\n      };\n    },\n\n    /** 通过临时ID获取新增的行 */\n    getNewRowById: function getNewRowById(id) {\n      var records = this.getInsertRecords();\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = records[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var record = _step3.value;\n\n          if (record.id === id) {\n            return record;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /** 仅获取被删除的数据（新增又被删除的数据不会被获取到） */\n    getDeleteData: function getDeleteData() {\n      return cloneObject(this.$refs.vxe.getRemoveRecords());\n    },\n\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @return\n     */\n    addRows: function () {\n      var _addRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var rows,\n            isOnlJs,\n            _args6 = arguments;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                rows = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n                isOnlJs = _args6.length > 1 ? _args6[1] : undefined;\n                return _context6.abrupt(\"return\", this._addOrInsert(rows, -1, 'added', isOnlJs));\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function addRows() {\n        return _addRows.apply(this, arguments);\n      }\n\n      return addRows;\n    }(),\n\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param index 添加下标，数字，必填\n     * @return\n     */\n    insertRows: function () {\n      var _insertRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(rows, index) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(typeof index !== 'number' || index < 0)) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                console.warn(\"\\u3010JVXETable\\u3011insertRows\\uFF1Aindex\\u5FC5\\u987B\\u4F20\\u9012\\u6570\\u5B57\\uFF0C\\u4E14\\u5927\\u4E8E-1\");\n                return _context7.abrupt(\"return\");\n\n              case 3:\n                return _context7.abrupt(\"return\", this._addOrInsert(rows, index, 'inserted'));\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function insertRows(_x3, _x4) {\n        return _insertRows.apply(this, arguments);\n      }\n\n      return insertRows;\n    }(),\n\n    /**\n     * 添加一行或多行临时数据，不会填充默认值，传什么就添加进去什么\n     * @param rows\n     * @param options 选项\n     * @param options.setActive 是否激活最后一行的编辑模式\n     */\n    pushRows: function () {\n      var _pushRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var rows,\n            options,\n            xTable,\n            setActive,\n            index,\n            result,\n            _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                rows = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n                options = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n                xTable = this.$refs.vxe.$refs.xTable;\n                setActive = options.setActive, index = options.index;\n                setActive = setActive == null ? false : !!setActive;\n                index = index == null ? -1 : index;\n                index = index === -1 ? index : xTable.tableFullData[index]; // 插入行\n\n                _context8.next = 9;\n                return xTable.insertAt(rows, index);\n\n              case 9:\n                result = _context8.sent;\n\n                if (setActive) {\n                  // 激活最后一行的编辑模式\n                  xTable.setActiveRow(result.rows[result.rows.length - 1]);\n                }\n\n                _context8.next = 13;\n                return this._recalcSortNumber();\n\n              case 13:\n                return _context8.abrupt(\"return\", result);\n\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function pushRows() {\n        return _pushRows.apply(this, arguments);\n      }\n\n      return pushRows;\n    }(),\n\n    /** 清空选择行 */\n    clearSelection: function clearSelection() {\n      var event = {\n        $table: this.$refs.vxe,\n        target: this\n      };\n\n      if (this.rowSelectionType === JVXETypes.rowRadio) {\n        this.$refs.vxe.clearRadioRow();\n        this.handleVxeRadioChange(event);\n      } else {\n        this.$refs.vxe.clearCheckboxRow();\n        this.handleVxeCheckboxChange(event);\n      }\n    },\n\n    /** 删除一行或多行数据 */\n    removeRows: function () {\n      var _removeRows = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(rows) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this._remove(rows);\n\n              case 2:\n                res = _context9.sent;\n                _context9.next = 5;\n                return this._recalcSortNumber();\n\n              case 5:\n                return _context9.abrupt(\"return\", res);\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function removeRows(_x5) {\n        return _removeRows.apply(this, arguments);\n      }\n\n      return removeRows;\n    }(),\n\n    /** 根据id删除一行或多行 */\n    removeRowsById: function removeRowsById(rowId) {\n      var _this10 = this;\n\n      var rowIds;\n\n      if (Array.isArray(rowId)) {\n        rowIds = rowId;\n      } else {\n        rowIds = [rowId];\n      }\n\n      var rows = rowIds.map(function (id) {\n        var _this10$getIfRowById = _this10.getIfRowById(id),\n            row = _this10$getIfRowById.row;\n\n        if (!row) {\n          return;\n        }\n\n        if (row) {\n          return row;\n        } else {\n          console.warn(\"\\u3010JVXETable\\u3011removeRowsById\\uFF1A\".concat(id, \"\\u4E0D\\u5B58\\u5728\"));\n          return null;\n        }\n      }).filter(function (row) {\n        return row != null;\n      });\n      return this.removeRows(rows);\n    },\n    getColumnByKey: function getColumnByKey() {\n      return this.$refs.vxe.getColumnByField.apply(this.$refs.vxe, arguments);\n    },\n\n    /* --- 辅助方法 ---*/\n    // 触发事件\n    trigger: function trigger(name) {\n      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      event.$target = this;\n      event.$table = this.$refs.vxe; //online增强参数兼容\n\n      event.target = this;\n      this.$emit(name, event);\n    },\n\n    /** 加载数据字典并合并到 options */\n    _loadDictConcatToOptions: function _loadDictConcatToOptions(column) {\n      var _this11 = this;\n\n      initDictOptions(column.dictCode).then(function (res) {\n        if (res.success) {\n          var newOptions = column.options || []; // .concat(res.result)\n\n          res.result.forEach(function (item) {\n            // 过滤重复数据\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = newOptions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var option = _step4.value;\n                if (option.value === item.value) return;\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n\n            newOptions.push(item);\n          });\n\n          _this11.$set(column, 'options', newOptions);\n        } else {\n          console.group(\"JVxeTable \\u67E5\\u8BE2\\u5B57\\u5178(\".concat(column.dictCode, \")\\u53D1\\u751F\\u5F02\\u5E38\"));\n          console.warn(res.message);\n          console.groupEnd();\n        }\n      });\n    },\n    // 设置 this.scrolling 防抖模式\n    closeScrolling: simpleDebounce(function () {\n      this.scrolling = false;\n    }, 100),\n\n    /**\n     * 过滤添加的行\n     * @param rows 要筛选的行数据\n     * @param remove true = 删除新增，false=只删除id\n     * @param handler function\n     */\n    filterNewRows: function filterNewRows(rows) {\n      var remove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var handler = arguments.length > 2 ? arguments[2] : undefined;\n      var insertRecords = this.$refs.vxe.getInsertRecords();\n      var records = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = rows[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var row = _step5.value;\n          var item = cloneObject(row);\n\n          if (insertRecords.includes(row)) {\n            handler ? handler({\n              item: item,\n              row: row,\n              insertRecords: insertRecords\n            }) : null;\n\n            if (remove) {\n              continue;\n            }\n\n            delete item.id;\n          }\n\n          records.push(item);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return records;\n    },\n    // 删除选中的数据\n    removeSelection: function () {\n      var _removeSelection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this._remove(this.selectedRows);\n\n              case 2:\n                res = _context10.sent;\n                this.clearSelection();\n                _context10.next = 6;\n                return this._recalcSortNumber();\n\n              case 6:\n                return _context10.abrupt(\"return\", res);\n\n              case 7:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function removeSelection() {\n        return _removeSelection.apply(this, arguments);\n      }\n\n      return removeSelection;\n    }(),\n\n    /**\n     * 【删除指定行数据】（重写vxeTable的内部方法，添加了从keepSource中删除）\n     * 如果传 row 则删除一行\n     * 如果传 rows 则删除多行\n     * 如果为空则删除所有\n     */\n    _remove: function _remove(rows) {\n      var xTable = this.$refs.vxe.$refs.xTable;\n      var afterFullData = xTable.afterFullData,\n          tableFullData = xTable.tableFullData,\n          tableSourceData = xTable.tableSourceData,\n          editStore = xTable.editStore,\n          treeConfig = xTable.treeConfig,\n          checkboxOpts = xTable.checkboxOpts,\n          selection = xTable.selection,\n          isInsertByRow = xTable.isInsertByRow,\n          scrollYLoad = xTable.scrollYLoad;\n      var actived = editStore.actived,\n          removeList = editStore.removeList,\n          insertList = editStore.insertList;\n      var property = checkboxOpts.checkField;\n      var rest = [];\n      var nowData = afterFullData;\n\n      if (treeConfig) {\n        throw new Error(UtilTools.getLog('vxe.error.noTree', ['remove']));\n      }\n\n      if (!rows) {\n        rows = tableFullData;\n      } else if (!XEUtils.isArray(rows)) {\n        rows = [rows];\n      } // 如果是新增，则保存记录\n\n\n      rows.forEach(function (row) {\n        if (!isInsertByRow(row)) {\n          removeList.push(row);\n        }\n      }); // 如果绑定了多选属性，则更新状态\n\n      if (!property) {\n        XEUtils.remove(selection, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n      } // 从数据源中移除\n\n\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0);\n        tableFullData.length = 0;\n        nowData.length = 0;\n      } else {\n        rest = XEUtils.remove(tableFullData, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n        XEUtils.remove(nowData, function (row) {\n          return rows.indexOf(row) > -1;\n        });\n      } // 【从keepSource中删除】\n\n\n      if (xTable.keepSource) {\n        var rowIdSet = new Set(rows.map(function (row) {\n          return row.id;\n        }));\n        XEUtils.remove(tableSourceData, function (row) {\n          return rowIdSet.has(row.id);\n        });\n      } // 如果当前行被激活编辑，则清除激活状态\n\n\n      if (actived.row && rows.indexOf(actived.row) > -1) {\n        xTable.clearActived();\n      } // 从新增中移除已删除的数据\n\n\n      XEUtils.remove(insertList, function (row) {\n        return rows.indexOf(row) > -1;\n      });\n      xTable.handleTableData();\n      xTable.updateFooter();\n      xTable.updateCache();\n      xTable.checkSelectionStatus();\n\n      if (scrollYLoad) {\n        xTable.updateScrollYSpace();\n      }\n\n      return xTable.$nextTick().then(function () {\n        xTable.recalculate();\n        return {\n          row: rest.length ? rest[rest.length - 1] : null,\n          rows: rest\n        };\n      });\n    },\n\n    /** 行重新排序 */\n    rowResort: function () {\n      var _rowResort = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(oldIndex, newIndex) {\n        var xTable, sort;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                xTable = this.$refs.vxe.$refs.xTable;\n                window.xTable = xTable;\n\n                sort = function sort(array) {\n                  // 存储旧数据，并删除旧项目\n                  var row = array.splice(oldIndex, 1)[0]; // 向新项目里添加旧数据\n\n                  array.splice(newIndex, 0, row);\n                };\n\n                sort(xTable.tableFullData);\n\n                if (xTable.keepSource) {\n                  sort(xTable.tableSourceData);\n                }\n\n                _context11.next = 7;\n                return this.$nextTick();\n\n              case 7:\n                _context11.next = 9;\n                return this._recalcSortNumber();\n\n              case 9:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function rowResort(_x6, _x7) {\n        return _rowResort.apply(this, arguments);\n      }\n\n      return rowResort;\n    }(),\n\n    /** 重新计算排序字段的数值 */\n    _recalcSortNumber: function () {\n      var _recalcSortNumber2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var _this12 = this;\n\n        var xTable;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                xTable = this.$refs.vxe.$refs.xTable;\n\n                if (this.dragSort) {\n                  xTable.tableFullData.forEach(function (data, idx) {\n                    return data[_this12.dragSortKey] = idx + 1;\n                  });\n                }\n\n                _context12.next = 4;\n                return xTable.updateCache(true);\n\n              case 4:\n                _context12.next = 6;\n                return xTable.updateData();\n\n              case 6:\n                return _context12.abrupt(\"return\", _context12.sent);\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _recalcSortNumber() {\n        return _recalcSortNumber2.apply(this, arguments);\n      }\n\n      return _recalcSortNumber;\n    }(),\n    _addOrInsert: function () {\n      var _addOrInsert2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        var _this13 = this;\n\n        var rows,\n            index,\n            triggerName,\n            isOnlJs,\n            xTable,\n            records,\n            result,\n            i,\n            row,\n            _args13 = arguments;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                rows = _args13.length > 0 && _args13[0] !== undefined ? _args13[0] : {};\n                index = _args13.length > 1 ? _args13[1] : undefined;\n                triggerName = _args13.length > 2 ? _args13[2] : undefined;\n                isOnlJs = _args13.length > 3 ? _args13[3] : undefined;\n                xTable = this.$refs.vxe.$refs.xTable;\n\n                if (Array.isArray(rows)) {\n                  records = rows;\n                } else {\n                  records = [rows];\n                } // 遍历添加默认值\n\n\n                records.forEach(function (record) {\n                  return _this13._createRow(record);\n                });\n                _context13.next = 9;\n                return this.pushRows(records, {\n                  index: index,\n                  setActive: true\n                });\n\n              case 9:\n                result = _context13.sent;\n\n                // 遍历插入的行\n                // update--begin--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n                // online js增强时以传过来值为准，不再赋默认值\n                if (isOnlJs != true) {\n                  for (i = 0; i < result.rows.length; i++) {\n                    row = result.rows[i];\n                    this.trigger(triggerName, {\n                      row: row,\n                      $table: xTable,\n                      target: this\n                    });\n                  }\n                } // update--end--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n\n\n                return _context13.abrupt(\"return\", result);\n\n              case 12:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _addOrInsert() {\n        return _addOrInsert2.apply(this, arguments);\n      }\n\n      return _addOrInsert;\n    }(),\n    // 创建新行，自动添加默认值\n    _createRow: function _createRow() {\n      var record = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var xTable = this.$refs.vxe.$refs.xTable; // 添加默认值\n\n      xTable.tableFullColumn.forEach(function (column) {\n        var col = column.own;\n\n        if (record[col.key] == null || record[col.key] === '') {\n          // 设置默认值\n          var createValue = getEnhancedMixins(col.$type || col.type, 'createValue');\n          record[col.key] = createValue({\n            row: record,\n            column: column,\n            $table: xTable\n          });\n        }\n      });\n      return record;\n    },\n\n    /*--- 渲染函数 ---*/\n    // 渲染 vxe\n    renderVxeGrid: function renderVxeGrid(h) {\n      return h('vxe-grid', {\n        ref: 'vxe',\n        class: ['j-vxe-table'],\n        props: this.vxeProps,\n        on: this.vxeEvents,\n        // 作用域插槽的格式为\n        scopedSlots: this.$scopedSlots\n      });\n    },\n    // 渲染工具栏\n    renderToolbar: function renderToolbar(h) {\n      var _this14 = this;\n\n      if (this.toolbar) {\n        return h('j-vxe-toolbar', {\n          props: {\n            toolbarConfig: this.toolbarConfig,\n            excludeCode: this.excludeCode,\n            size: this.size,\n            disabled: this.disabled,\n            disabledRows: this.disabledRows,\n            selectedRowIds: this.selectedRowIds\n          },\n          on: {\n            // 新增事件\n            add: function add() {\n              return _this14.addRows();\n            },\n            // 保存事件\n            save: function save() {\n              return _this14.trigger('save', {\n                $table: _this14.$refs.vxe,\n                target: _this14\n              });\n            },\n            // 删除事件\n            remove: function remove() {\n              var $table = _this14.$refs.vxe;\n\n              var deleteRows = _this14.filterNewRows(_this14.selectedRows); // 触发删除事件\n\n\n              if (deleteRows.length > 0) {\n                var removeEvent = {\n                  deleteRows: deleteRows,\n                  $table: $table,\n                  target: _this14\n                };\n\n                if (_this14.asyncRemove) {\n                  // 确认删除，只有调用这个方法才会真删除\n                  removeEvent.confirmRemove = function () {\n                    return _this14.removeSelection();\n                  };\n                } else {\n                  _this14.removeSelection();\n                }\n\n                _this14.trigger('remove', removeEvent);\n              } else {\n                _this14.removeSelection();\n              }\n            },\n            // 清除选择事件\n            clearSelection: this.clearSelection\n          },\n          scopedSlots: {\n            toolbarPrefix: this.$scopedSlots.toolbarPrefix,\n            toolbarSuffix: this.$scopedSlots.toolbarSuffix\n          }\n        });\n      }\n\n      return null;\n    },\n    // 渲染 toolbarAfter 插槽\n    renderToolbarAfterSlot: function renderToolbarAfterSlot() {\n      if (this.$scopedSlots['toolbarAfter']) {\n        return this.$scopedSlots['toolbarAfter']();\n      }\n\n      return null;\n    },\n    // 渲染点击时弹出的子表\n    renderSubPopover: function renderSubPopover(h) {\n      if (this.clickRowShowSubForm && this.$scopedSlots.subForm) {\n        return h('j-vxe-sub-popover', {\n          ref: 'subPopover',\n          scopedSlots: {\n            subForm: this.$scopedSlots.subForm\n          }\n        });\n      }\n\n      return null;\n    },\n    // 渲染点击时弹出的详细信息\n    renderDetailsModal: function renderDetailsModal(h) {\n      if (this.clickRowShowMainForm && this.$scopedSlots.mainForm) {\n        return h('j-vxe-details-modal', {\n          ref: 'detailsModal',\n          scopedSlots: {\n            subForm: this.clickRowShowSubForm ? this.$scopedSlots.subForm : null,\n            mainForm: this.$scopedSlots.mainForm\n          }\n        });\n      }\n    },\n    // 渲染分页器\n    renderPagination: function renderPagination(h) {\n      var _this15 = this;\n\n      if (this.pagination && Object.keys(this.pagination).length > 0) {\n        return h('j-vxe-pagination', {\n          props: {\n            size: this.size,\n            disabled: this.disabled,\n            pagination: this.pagination\n          },\n          on: {\n            change: function change(e) {\n              return _this15.trigger('pageChange', e);\n            }\n          }\n        });\n      }\n\n      return null;\n    },\n    loadExcludeCode: function loadExcludeCode() {\n      if (!this.authPre || this.authPre.length == 0) {\n        this.excludeCode = [];\n      } else {\n        var pre = this.authPre;\n\n        if (!pre.endsWith(':')) {\n          pre += ':';\n        }\n\n        this.excludeCode = getNoAuthCols(pre);\n      }\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      class: ['j-vxe-table-box', \"size--\".concat(this.size)]\n    }, [this.renderSubPopover(h), this.renderDetailsModal(h), this.renderToolbar(h), this.renderToolbarAfterSlot(), this.renderVxeGrid(h), this.renderPagination(h)]);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$emit('beforeDestroy');\n  }\n}; // 兼容 online 的规则\n\nvar fooPatterns = [{\n  title: '非空',\n  value: '*',\n  pattern: /^.+$/\n}, {\n  title: '6到16位数字',\n  value: 'n6-16',\n  pattern: /^\\d{6,18}$/\n}, {\n  title: '6到16位任意字符',\n  value: '*6-16',\n  pattern: /^.{6,16}$/\n}, {\n  title: '6到18位字母',\n  value: 's6-18',\n  pattern: /^[a-z|A-Z]{6,18}$/\n}, {\n  title: '网址',\n  value: 'url',\n  pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/\n}, {\n  title: '电子邮件',\n  value: 'e',\n  pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/\n}, {\n  title: '手机号码',\n  value: 'm',\n  pattern: /^1[3456789]\\d{9}$/\n}, {\n  title: '邮政编码',\n  value: 'p',\n  pattern: /^[1-9]\\d{5}$/\n}, {\n  title: '字母',\n  value: 's',\n  pattern: /^[A-Z|a-z]+$/\n}, {\n  title: '数字',\n  value: 'n',\n  pattern: /^-?\\d+(\\.?\\d+|\\d?)$/\n}, {\n  title: '整数',\n  value: 'z',\n  pattern: /^-?\\d+$/\n}, {\n  title: '金额',\n  value: 'money',\n  pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/\n}];\n/** 旧版handler转为新版Validator */\n\nfunction handlerConvertToValidator(event) {\n  var _this16 = this;\n\n  var column = event.column,\n      rule = event.rule;\n  return new Promise(function (resolve, reject) {\n    rule.handler(event, function (flag, msg) {\n      var message = rule.message;\n\n      if (typeof msg === 'string') {\n        message = replaceProps(column.own, msg);\n      }\n\n      if (flag == null) {\n        resolve(message);\n      } else if (!!flag) {\n        resolve(message);\n      } else {\n        reject(new Error(message));\n      }\n    }, _this16, event);\n  });\n}\n/** 唯一校验器 */\n\n\nfunction uniqueValidator(event) {\n  var cellValue = event.cellValue,\n      column = event.column,\n      rule = event.rule;\n  var tableData = this.getTableData();\n  var findCount = 0;\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = tableData[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var rowData = _step6.value;\n\n      if (rowData[column.own.key] === cellValue) {\n        if (++findCount >= 2) {\n          return Promise.reject(new Error(rule.message));\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return Promise.resolve();\n}",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/components/jeecg/JVxeTable/components/JVxeTable.js"],"names":["XEUtils","PropTypes","JVXETypes","VxeWebSocketMixins","initDictOptions","getRefPromise","getEnhancedMixins","replaceProps","JVxeToolbar","JVxeSubPopover","JVxeDetailsModal","JVxePagination","cloneObject","getVmParentByName","pushIfNotExist","randomString","simpleDebounce","UtilTools","getNoAuthCols","name","provide","superTrigger","event","trigger","mixins","components","props","rowKey","string","def","columns","type","Array","required","dataSource","authPre","String","default","toolbar","bool","toolbarConfig","object","slots","btns","rowNumber","rowSelection","rowSelectionType","oneOf","rowExpand","expandConfig","loading","height","instanceOf","Number","maxHeight","disabledRows","disabled","dragSort","dragSortKey","size","bordered","pagination","clickRowShowSubForm","clickRowShowMainForm","clickSelectRow","reloadEffect","editRules","asyncRemove","data","isJVXETable","caseId","_innerColumns","_innerEditRules","scroll","top","left","scrolling","defaultVxeProps","mode","showStatus","iconClose","iconOpen","highlight","selectedRows","selectedRowIds","statistics","has","sum","average","reloadEffectRowKeysMap","excludeCode","computed","vxeColumns","forEach","column","renderOptions","listeners","cellListeners","$type","rowDragSort","slot","$scopedSlots","hasOwnProperty","slotName","target","editRender","Object","assign","cellRender","file","image","width","endsWith","parseInt","substr","length","vxeEditRules","vxeProps","showFooter","$attrs","border","footerMethod","handleFooterMethod","vxeEvents","events","handleVxeScroll","handleCellClick","handleEditClosed","handleEditActived","handleVxeRadioChange","handleVxeCheckboxAll","handleVxeCheckboxChange","keys","$listeners","key","listen","isArray","push","valueChange","rowMoveUp","rowIndex","rowResort","rowMoveDown","rowInsertDown","insertRows","watch","immediate","handler","vxe","idx","$set","loadData","loadExcludeCode","expandColumn","seqColumn","checkboxColumn","radioColumn","dragSortColumn","indexOf","col","enhanced","rowCheckbox","rowRadio","field","renderName","_prefix","hidden","visible","switches","normal","dictCode","_loadDictConcatToOptions","validateRules","rules","rule","replace","message","unique","pattern","validator","uniqueValidator","bind","fooPatterns","value","foo","handlerConvertToValidator","item","arr","toLowerCase","title","fixed","align","unshift","content","created","mounted","handleTabsChange","methods","tabs","tabPane","currentKey","$vnode","unwatch","$children","$watch","$nextTick","refreshScroll","recalculate","$on","$refs","scrollTop","scrollLeft","subPopover","close","closeScrolling","row","$table","getRadioRecord","handleSelectChange","getCheckboxRecords","$event","action","includes","map","id","own","showDetails","detailsModal","open","toggle","className","toString","setRadioRow","toggleCheckboxRow","editClosed","apply","arguments","editActived","footers","getFooterStatisticsMap","checks","method","property","mean","columnIndex","handleFooterSpanMethod","colspan","resetScrollTop","scrollTo","loadNewData","xTable","validateTable","validate","catch","errMap","fullValidateTable","fullValidate","setValues","values","console","warn","record","getIfRowById","colKey","getColumnByKey","oldValue","newValue","isSetValues","getAll","tableData","getTableData","deleteData","getDeleteData","options","rowIds","rowId","fullData","filterNewRows","getNewData","newData","getInsertRecords","getNewDataWithId","getRowById","isNew","getNewRowById","records","getRemoveRecords","addRows","rows","isOnlJs","_addOrInsert","index","pushRows","setActive","tableFullData","insertAt","result","setActiveRow","_recalcSortNumber","clearSelection","clearRadioRow","clearCheckboxRow","removeRows","_remove","res","removeRowsById","filter","getColumnByField","$target","$emit","then","success","newOptions","option","group","groupEnd","remove","insertRecords","removeSelection","afterFullData","tableSourceData","editStore","treeConfig","checkboxOpts","selection","isInsertByRow","scrollYLoad","actived","removeList","insertList","checkField","rest","nowData","Error","getLog","slice","keepSource","rowIdSet","Set","clearActived","handleTableData","updateFooter","updateCache","checkSelectionStatus","updateScrollYSpace","oldIndex","newIndex","window","sort","array","splice","updateData","triggerName","_createRow","i","tableFullColumn","createValue","renderVxeGrid","h","ref","class","on","scopedSlots","renderToolbar","add","save","deleteRows","removeEvent","confirmRemove","toolbarPrefix","toolbarSuffix","renderToolbarAfterSlot","renderSubPopover","subForm","renderDetailsModal","mainForm","renderPagination","change","e","pre","render","beforeDestroy","Promise","resolve","reject","flag","msg","cellValue","findCount","rowData"],"mappings":"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","sourcesContent":["import XEUtils from 'xe-utils'\nimport PropTypes from 'ant-design-vue/es/_util/vue-types'\nimport { JVXETypes } from '@/components/jeecg/JVxeTable/index'\nimport VxeWebSocketMixins from '../mixins/vxe.web.socket.mixins'\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil'\n\nimport { getRefPromise } from '../utils/vxeUtils'\nimport { getEnhancedMixins, replaceProps } from '../utils/cellUtils'\n\nimport JVxeToolbar from './JVxeToolbar'\nimport JVxeSubPopover from './JVxeSubPopover'\nimport JVxeDetailsModal from './JVxeDetailsModal'\nimport JVxePagination from './JVxePagination'\nimport { cloneObject, getVmParentByName, pushIfNotExist, randomString, simpleDebounce } from '@/utils/util'\nimport { UtilTools } from 'vxe-table/packages/tools/src/utils'\nimport { getNoAuthCols } from \"@/utils/authFilter\"\n\nexport default {\n  name: 'JVxeTable',\n  provide() {\n    return {\n      superTrigger: (name, event) => this.trigger(name, event)\n    }\n  },\n  mixins: [VxeWebSocketMixins],\n  components: {JVxeToolbar, JVxeSubPopover, JVxeDetailsModal, JVxePagination},\n  props: {\n    rowKey: PropTypes.string.def('id'),\n    // 列信息\n    columns: {\n      type: Array,\n      required: true\n    },\n    // 数据源\n    dataSource: {\n      type: Array,\n      required: true\n    },\n    authPre: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    // 是否显示工具栏\n    toolbar: PropTypes.bool.def(false),\n    // 工具栏配置\n    toolbarConfig: PropTypes.object.def(() => ({\n      // prefix 前缀；suffix 后缀；\n      slots: ['prefix', 'suffix'],\n      // add 新增按钮；remove 删除按钮；clearSelection 清空选择按钮；collapse 展开收起\n      btns: ['add', 'remove', 'clearSelection'],\n    })),\n    // 是否显示行号\n    rowNumber: PropTypes.bool.def(false),\n    // 是否可选择行\n    rowSelection: PropTypes.bool.def(false),\n    // 选择行类型\n    rowSelectionType: PropTypes.oneOf(['checkbox', 'radio']).def('checkbox'),\n    // 是否可展开行\n    rowExpand: PropTypes.bool.def(false),\n    // 展开行配置\n    expandConfig: PropTypes.object.def(() => ({})),\n    // 页面是否在加载中\n    loading: PropTypes.bool.def(false),\n    height: PropTypes.instanceOf([Number, String]).def('auto'),\n    // 最大高度\n    maxHeight: {\n      type: Number,\n      default: () => null,\n    },\n    // 要禁用的行 TODO 未实现\n    disabledRows: PropTypes.object.def(() => ({})),\n    // 是否禁用全部组件\n    disabled: PropTypes.bool.def(false),\n    // 是否可拖拽排序 TODO 仅实现上下排序，未实现拖拽排序（可能无法实现或较为困难）\n    dragSort: PropTypes.bool.def(false),\n    // 排序字段保存的Key\n    dragSortKey: PropTypes.string.def('orderNum'),\n    // 大小，可选值有：medium（中）、small（小）、mini（微）、tiny（非常小）\n    size: PropTypes.oneOf(['medium', 'small', 'mini', 'tiny']).def('medium'),\n    // 是否显示边框线\n    bordered: PropTypes.bool.def(false),\n    // 分页器参数，设置了即可显示分页器\n    pagination: PropTypes.object.def(() => ({})),\n    // 点击行时是否显示子表单\n    clickRowShowSubForm: PropTypes.bool.def(false),\n    // 点击行时是否显示主表单\n    clickRowShowMainForm: PropTypes.bool.def(false),\n    // 是否点击选中行，优先级最低\n    clickSelectRow: PropTypes.bool.def(false),\n    // 是否开启 reload 数据效果\n    reloadEffect: PropTypes.bool.def(false),\n    // 校验规则\n    editRules: PropTypes.object.def(() => ({})),\n    // 是否异步删除行，如果你要实现异步删除，那么需要把这个选项开启，\n    // 在remove事件里调用confirmRemove方法才会真正删除（除非删除的全是新增的行）\n    asyncRemove: PropTypes.bool.def(false),\n  },\n  data() {\n    return {\n      isJVXETable: true,\n      // caseId，表格唯一标识\n      caseId: `_j-vxe-${randomString(8)}_`,\n      // 内置columns\n      _innerColumns: [],\n      // 内置 EditRules\n      _innerEditRules: [],\n      // 记录滚动条位置\n      scroll: {top: 0, left: 0},\n      // 当前是否正在滚动\n      scrolling: false,\n      // vxe 默认配置\n      defaultVxeProps: {\n        'row-id': this.rowKey,\n        // 高亮hover的行\n        'highlight-hover-row': true,\n        // 溢出隐藏并显示tooltip\n        'show-overflow': true,\n        // 表头溢出隐藏并显示tooltip\n        'show-header-overflow': true,\n        'show-footer-overflow': true,\n        // 可编辑配置\n        'edit-config': {trigger: 'click', mode: 'cell', showStatus: true},\n        'expand-config': {\n          iconClose: 'ant-table-row-expand-icon ant-table-row-collapsed',\n          iconOpen: 'ant-table-row-expand-icon ant-table-row-expanded'\n        },\n        // 虚拟滚动配置，y轴大于30条数据时启用虚拟滚动\n        // 'scroll-y': {\n        //   gt: 30\n        // },\n        // 'scroll-x': {\n        //   gt: 15\n        // },\n        'radio-config': {highlight: true},\n        'checkbox-config': {highlight: true},\n      },\n      // 绑定左侧选择框\n      selectedRows: [],\n      // 绑定左侧选择框已选择的id\n      selectedRowIds: [],\n      // 统计列配置\n      statistics: {\n        has: false,\n        sum: [],\n        average: [],\n      },\n      // 允许执行刷新特效的行ID\n      reloadEffectRowKeysMap: {},\n      //配置了但是没有授权的按钮和列 集合\n      excludeCode:[]\n    }\n  },\n  computed: {\n\n    // vxe 最终 columns\n    vxeColumns() {\n      this._innerColumns.forEach(column => {\n        let renderOptions = {\n          caseId: this.caseId,\n          bordered: this.bordered,\n          disabled: this.disabled,\n          scrolling: this.scrolling,\n          reloadEffect: this.reloadEffect,\n          reloadEffectRowKeysMap: this.reloadEffectRowKeysMap,\n          listeners: this.cellListeners,\n        }\n        if (column.$type === JVXETypes.rowDragSort) {\n          renderOptions.dragSortKey = this.dragSortKey\n        }\n        // slot 组件特殊处理\n        if (column.$type === JVXETypes.slot) {\n          if (this.$scopedSlots.hasOwnProperty(column.slotName)) {\n            renderOptions.slot = this.$scopedSlots[column.slotName]\n            renderOptions.target = this\n          }\n        }\n        if (column.editRender) {\n          Object.assign(column.editRender, renderOptions)\n        }\n        if (column.cellRender) {\n          Object.assign(column.cellRender, renderOptions)\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n        if (column.$type === JVXETypes.file || column.$type === JVXETypes.image) {\n          if (column.width && column.width.endsWith('px')) {\n            column.width = Number.parseInt(column.width.substr(0,column.width.length-2))+Number.parseInt(1)+'px';\n          }\n        }\n        // update--begin--autor:lvdandan-----date:20201019------for:LOWCOD-882 【新行编辑】列表上带按钮的遮挡问题\n      })\n      return this._innerColumns\n    },\n    // vxe 最终 editRules\n    vxeEditRules() {\n      return Object.assign({}, this.editRules, this._innerEditRules)\n    },\n    // vxe 最终 props\n    vxeProps() {\n      let expandConfig = Object.assign({}, this.defaultVxeProps['expand-config'], this.expandConfig)\n\n      return Object.assign({}, this.defaultVxeProps, {\n        showFooter: this.statistics.has,\n      }, this.$attrs, {\n        loading: this.loading,\n        columns: this.vxeColumns,\n        editRules: this.vxeEditRules,\n        // data: this.dataSource,\n        height: this.height === 'auto' ? null : this.height,\n        maxHeight: this.maxHeight,\n        border: this.bordered,\n        expandConfig: expandConfig,\n        footerMethod: this.handleFooterMethod,\n        // footerSpanMethod: this.handleFooterSpanMethod,\n      })\n    },\n    // vxe 最终 events\n    vxeEvents() {\n      // 内置事件\n      let events = {\n        'scroll': this.handleVxeScroll,\n        'cell-click': this.handleCellClick,\n        'edit-closed': this.handleEditClosed,\n        'edit-actived': this.handleEditActived,\n        'radio-change': this.handleVxeRadioChange,\n        'checkbox-all': this.handleVxeCheckboxAll,\n        'checkbox-change': this.handleVxeCheckboxChange,\n      }\n      // 用户传递的事件，进行合并操作\n      Object.keys(this.$listeners).forEach(key => {\n        let listen = this.$listeners[key]\n        if (events.hasOwnProperty(key)) {\n          if (Array.isArray(listen)) {\n            listen.push(events[key])\n          } else {\n            listen = [events[key], listen]\n          }\n        }\n        events[key] = listen\n      })\n      return events\n    },\n    // 组件监听事件\n    cellListeners() {\n      return {\n        trigger: (name, event) => this.trigger(name, event),\n        valueChange: event => this.trigger('valueChange', event),\n        /** 当前行向上移一位 */\n        rowMoveUp: rowIndex => this.rowResort(rowIndex, rowIndex - 1),\n        /** 当前行向下移一位 */\n        rowMoveDown: rowIndex => this.rowResort(rowIndex, rowIndex + 1),\n        /** 在当前行下面插入一行 */\n        rowInsertDown: rowIndex => this.insertRows({}, rowIndex + 1),\n      }\n    },\n  },\n  watch: {\n    dataSource: {\n      //   deep: true,\n      immediate: true,\n      async handler() {\n        let vxe = await getRefPromise(this, 'vxe')\n        // 阻断vue监听大数据，提高性能\n\n        // 开启了排序就自动计算排序值\n        if (this.dragSort) {\n          this.dataSource.forEach((data, idx) => {\n            this.$set(data, this.dragSortKey, idx + 1)\n          })\n        }\n\n        vxe.loadData(this.dataSource)\n\n        // TODO 解析disabledRows\n        // let disabled = false\n        //\n        // let disabledRowIds = (this.disabledRowIds || [])\n        // // 解析disabledRows\n        // Object.keys(this.disabledRows).forEach(disabledColKey => {\n        //   // 判断是否有该属性\n        //   if (data.hasOwnProperty(disabledColKey)) {\n        //     if (disabled !== true) {\n        //       let temp = this.disabledRows[disabledColKey]\n        //       // 禁用规则可以是一个数组\n        //       if (Array.isArray(temp)) {\n        //         disabled = temp.includes(data[disabledColKey])\n        //       } else {\n        //         disabled = (temp === data[disabledColKey])\n        //       }\n        //       if (disabled) {\n        //         disabledRowIds.push(row.id)\n        //       }\n        //     }\n        //   }\n        // })\n      },\n    },\n    columns: {\n      immediate: true,\n      handler(columns) {\n        //获取不需要显示列\n        this.loadExcludeCode()\n        let _innerColumns = []\n        let _innerEditRules = {}\n        let {rowNumber, rowSelection, rowExpand, dragSort} = this\n        let expandColumn, seqColumn, checkboxColumn, radioColumn, dragSortColumn\n        if (Array.isArray(columns)) {\n          this.statistics.has = false\n          this.statistics.sum = []\n          this.statistics.average = []\n\n          // 处理成vxe可识别的columns\n          columns.forEach(column => {\n            if(this.excludeCode.indexOf(column.key)>=0){\n              return false\n            }\n            let col = {...column}\n            let {type} = col\n            const enhanced = getEnhancedMixins(type)\n            if (type === JVXETypes.rowNumber) {\n              seqColumn = col\n            } else if (type === JVXETypes.rowCheckbox) {\n              checkboxColumn = col\n            } else if (type === JVXETypes.rowRadio) {\n              radioColumn = col\n            } else if (type === JVXETypes.rowExpand) {\n              expandColumn = col\n            } else if (type === JVXETypes.rowDragSort) {\n              dragSortColumn = col\n            } else {\n              col.field = col.key\n              // 防止和vxeTable自带的type起冲突\n              col.$type = col.type\n              delete col.type\n              let renderName = 'cellRender', renderOptions = {name: JVXETypes._prefix + type}\n              if (type) {\n                // hidden 是特殊的组件\n                if (type === JVXETypes.hidden) {\n                  col.visible = false\n                } else if (enhanced.switches.editRender) {\n                  renderName = 'editRender'\n                  renderOptions.type = enhanced.switches.visible ? 'visible' : 'default'\n                }\n              } else {\n                renderOptions.name = JVXETypes._prefix + JVXETypes.normal\n              }\n              col[renderName] = renderOptions\n              // 处理字典\n              if (col.dictCode) {\n                this._loadDictConcatToOptions(col)\n              }\n              // 处理校验\n              if (col.validateRules) {\n                let rules = []\n                if (Array.isArray(col.validateRules)) {\n                  for (let rule of col.validateRules) {\n                    let replace = {\n                      message: replaceProps(col, rule.message)\n                    }\n                    if (rule.unique || rule.pattern === 'only') {\n                      // 唯一校验器\n                      rule.validator = uniqueValidator.bind(this)\n                    } else if (rule.pattern) {\n                      // 非空\n                      if (rule.pattern === fooPatterns[0].value) {\n                        rule.required = true\n                        delete rule.pattern\n                      } else {\n                        // 兼容Online表单的特殊规则\n                        for (let foo of fooPatterns) {\n                          if (foo.value === rule.pattern) {\n                            rule.pattern = foo.pattern\n                            break\n                          }\n                        }\n                      }\n                    } else if (typeof rule.handler === 'function') {\n                      // 自定义函数校验\n                      rule.validator = handlerConvertToValidator.bind(this)\n                    }\n                    rules.push(Object.assign({}, rule, replace))\n                  }\n                }\n                _innerEditRules[col.key] = rules\n              }\n              // 处理统计列\n              // sum = 求和、average = 平均值\n              if (Array.isArray(col.statistics)) {\n                this.statistics.has = true\n                col.statistics.forEach(item => {\n                  let arr = this.statistics[item.toLowerCase()]\n                  if (Array.isArray(arr)) {\n                    pushIfNotExist(arr, col.key)\n                  }\n                })\n              }\n              _innerColumns.push(col)\n            }\n          })\n        }\n        // 判断是否开启了序号\n        if (rowNumber) {\n          let col = {type: 'seq', title: '#', width: 60, fixed: 'left', align: 'center'}\n          if (seqColumn) {\n            col = Object.assign(col, seqColumn, {type: 'seq'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 判断是否开启了可选择行\n        if (rowSelection) {\n          let width = 40\n          if (this.statistics.has && !rowExpand && !dragSort) {\n            width = 60\n          }\n          let col = {type: this.rowSelectionType, width, fixed: 'left', align: 'center'}\n          // radio\n          if (this.rowSelectionType === 'radio' && radioColumn) {\n            col = Object.assign(col, radioColumn, {type: 'radio'})\n          }\n          // checkbox\n          if (this.rowSelectionType === 'checkbox' && checkboxColumn) {\n            col = Object.assign(col, checkboxColumn, {type: 'checkbox'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 是否可展开行\n        if (rowExpand) {\n          let width = 40\n          if (this.statistics.has && !dragSort) {\n            width = 60\n          }\n          let col = {type: 'expand', title: '', width, fixed: 'left', align: 'center', slots: {content: 'expandContent'}}\n          if (expandColumn) {\n            col = Object.assign(col, expandColumn, {type: 'expand'})\n          }\n          _innerColumns.unshift(col)\n        }\n        // 是否可拖动排序\n        if (dragSort) {\n          let width = 40\n          if (this.statistics.has) {\n            width = 60\n          }\n          let col = {type: JVXETypes.rowDragSort, title: '', width, fixed: 'left', align: 'center', cellRender: {name: JVXETypes._prefix + JVXETypes.rowDragSort}}\n          if (dragSortColumn) {\n            col = Object.assign(col, dragSortColumn, {type: JVXETypes.rowDragSort})\n          }\n          _innerColumns.unshift(col)\n        }\n\n        this._innerColumns = _innerColumns\n        this._innerEditRules = _innerEditRules\n      }\n    }\n  },\n  created() {\n  },\n  mounted() {\n    this.handleTabsChange()\n  },\n  methods: {\n\n    /**\n     * 自动判断父级是否是 <a-tabs/> 组件，然后添加事件监听，自动重置表格\n     */\n    handleTabsChange() {\n      // 获取父级\n      const tabs = getVmParentByName(this, 'ATabs')\n      const tabPane = getVmParentByName(this, 'ATabPane')\n      if (tabs && tabPane) {\n        // 用户自定义的 key\n        const currentKey = tabPane.$vnode.key\n        // 添加 activeKey 监听\n        const unwatch = tabs.$children[0].$watch('$data._activeKey', async (key) => {\n          // 切换到自己时重新计算\n          if (currentKey === key) {\n            await this.$nextTick()\n            await this.refreshScroll()\n            await this.recalculate()\n          }\n        })\n        // 当前实例销毁时取消监听\n        this.$on('beforeDestroy', () => unwatch())\n      }\n    },\n\n    handleVxeScroll(event) {\n      let {$refs, scroll} = this\n\n      // 记录滚动条的位置\n      scroll.top = event.scrollTop\n      scroll.left = event.scrollLeft\n\n      $refs.subPopover ? $refs.subPopover.close() : null\n      this.scrolling = true\n      this.closeScrolling()\n    },\n    // 当手动勾选单选时触发的事件\n    handleVxeRadioChange(event) {\n      let row = event.$table.getRadioRecord()\n      this.selectedRows = row ? [row] : []\n      this.handleSelectChange('radio', this.selectedRows, event)\n    },\n    // 当手动勾选全选时触发的事件\n    handleVxeCheckboxAll(event) {\n      this.selectedRows = event.$table.getCheckboxRecords()\n      this.handleSelectChange('checkbox-all', this.selectedRows, event)\n    },\n    // 当手动勾选并且值发生改变时触发的事件\n    handleVxeCheckboxChange(event) {\n      this.selectedRows = event.$table.getCheckboxRecords()\n      this.handleSelectChange('checkbox', this.selectedRows, event)\n    },\n    // 行选择change事件\n    handleSelectChange(type, selectedRows, $event) {\n      let action\n      if (type === 'radio') {\n        action = 'selected'\n      } else if (type === 'checkbox') {\n        action = selectedRows.includes($event.row) ? 'selected' : 'unselected'\n      } else {\n        action = 'selected-all'\n      }\n\n      this.selectedRowIds = selectedRows.map(row => row.id)\n      this.trigger('selectRowChange', {\n        type: type,\n        action: action,\n        $event: $event,\n        row: $event.row,\n        selectedRows: this.selectedRows,\n        selectedRowIds: this.selectedRowIds\n      })\n    },\n\n    // 点击单元格时触发的事件\n    handleCellClick(event) {\n      let {row, column, $event, $table} = event\n      let {$refs} = this\n\n      // 点击了可编辑的\n      if (column.editRender) {\n        $refs.subPopover ? $refs.subPopover.close() : null\n        return\n      }\n\n      // 显示详细信息\n      if (column.own.showDetails) {\n        // 两个如果同时存在的话会出现死循环\n        $refs.subPopover ? $refs.subPopover.close() : null\n        $refs.detailsModal ? $refs.detailsModal.open(event) : null\n      } else if ($refs.subPopover) {\n        $refs.subPopover.toggle(event)\n      } else if (this.clickSelectRow) {\n        let className = $event.target.className || ''\n        className = typeof className === 'string' ? className : className.toString()\n        // 点击的是expand，不做处理\n        if (className.includes('vxe-table--expand-btn')) {\n          return\n        }\n        // 点击的是checkbox，不做处理\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n          return\n        }\n        // 点击的是radio，不做处理\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n          return\n        }\n        if (this.rowSelectionType === 'radio') {\n          $table.setRadioRow(row)\n          this.handleVxeRadioChange(event)\n        } else {\n          $table.toggleCheckboxRow(row)\n          this.handleVxeCheckboxChange(event)\n        }\n      }\n    },\n\n    // 单元格编辑状态下被关闭时会触发该事件\n    handleEditClosed({column}) {\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editClosed.apply(this, arguments)\n    },\n\n    // 单元格被激活编辑时会触发该事件\n    handleEditActived({column}) {\n      // 执行增强\n      getEnhancedMixins(column.own.$type, 'aopEvents').editActived.apply(this, arguments)\n    },\n\n    /** 表尾数据处理方法，用于显示统计信息 */\n    handleFooterMethod({columns, data}) {\n      const {statistics} = this\n      let footers = []\n      if (statistics.has) {\n        if (statistics.sum.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '合计',\n            checks: statistics.sum,\n            method: (column) => XEUtils.sum(data, column.property)\n          }))\n        }\n        if (statistics.average.length > 0) {\n          footers.push(this.getFooterStatisticsMap({\n            columns: columns,\n            title: '平均',\n            checks: statistics.average,\n            method: (column) => XEUtils.mean(data, column.property)\n          }))\n        }\n      }\n      return footers\n    },\n\n    getFooterStatisticsMap({columns, title, checks, method}) {\n      return columns.map((column, columnIndex) => {\n        if (columnIndex === 0) {\n          return title\n        }\n        if (checks.includes(column.property)) {\n          return method(column, columnIndex)\n        }\n        return null\n      })\n    },\n\n    /** 表尾单元格合并方法 */\n    handleFooterSpanMethod(event) {\n      if (event.columnIndex === 0) {\n        return {colspan: 2}\n      }\n    },\n\n    /*--- 外部可调用接口方法 ---*/\n\n    /**\n     * 重置滚动条Top位置\n     * @param top 新top位置，留空则滚动到上次记录的位置，用于解决切换tab选项卡时导致白屏以及自动将滚动条滚动到顶部的问题\n     */\n    resetScrollTop(top) {\n      this.scrollTo(null, (top == null || top === '') ? this.scroll.top : top)\n    },\n\n    /**\n     * 加载新数据，和 loadData 不同的是，用该方法加载的数据都是相当于点新增按钮新增的数据。\n     * 适用于不是数据库里查出来的没有id的临时数据\n     * @param dataSource\n     */\n    async loadNewData(dataSource) {\n      if (Array.isArray(dataSource)) {\n        let {xTable} = this.$refs.vxe.$refs\n        return await xTable.loadData(dataSource)\n      }\n      return []\n    },\n\n    // 校验table，失败返回errMap，成功返回null\n    async validateTable() {\n      const errMap = await this.validate().catch(errMap => errMap)\n      return errMap ? errMap : null\n    },\n    // 完整校验\n    async fullValidateTable() {\n      const errMap = await this.fullValidate().catch(errMap => errMap)\n      return errMap ? errMap : null\n    },\n\n    /** 设置某行某列的值 */\n    setValues(values) {\n      if (!Array.isArray(values)) {\n        console.warn(`JVxeTable.setValues：必须传递数组`)\n        return\n      }\n      values.forEach((item, idx) => {\n        let {rowKey, values: record} = item\n        let {row} = this.getIfRowById(rowKey)\n        if (!row) {\n          return\n        }\n        Object.keys(record).forEach(colKey => {\n          let column = this.getColumnByKey(colKey)\n          if (column) {\n            let oldValue = row[colKey]\n            let newValue = record[colKey]\n            if (newValue !== oldValue) {\n              this.$set(row, colKey, newValue)\n              // 触发 valueChange 事件\n              this.trigger('valueChange', {\n                type: column.own.$type,\n                value: newValue,\n                oldValue: oldValue,\n                col: column.own,\n                column: column,\n                isSetValues: true,\n              })\n            }\n          } else {\n            console.warn(`JVxeTable.setValues：没有找到key为\"${colKey}\"的列`)\n          }\n        })\n      })\n    },\n\n    /** 获取所有的数据，包括values、deleteIds */\n    getAll() {\n      return {\n        tableData: this.getTableData(),\n        deleteData: this.getDeleteData()\n      }\n    },\n    /** 获取表格数据 */\n    getTableData(options = {}) {\n      let {rowIds} = options\n      let tableData\n      // 仅查询指定id的行\n      if (Array.isArray(rowIds) && rowIds.length > 0) {\n        tableData = []\n        rowIds.forEach(rowId => {\n          let {row} = this.getIfRowById(rowId)\n          if (row) {\n            tableData.push(row)\n          }\n        })\n      } else {\n        // 查询所有行\n        tableData = this.$refs.vxe.getTableData().fullData\n      }\n      return this.filterNewRows(tableData, false)\n    },\n    /** 仅获取新增的数据 */\n    getNewData() {\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\n      newData.forEach(row => delete row.id)\n      return newData\n    },\n    /** 仅获取新增的数据,带有id */\n    getNewDataWithId() {\n      let newData = cloneObject(this.$refs.vxe.getInsertRecords())\n      return newData\n    },\n    /** 根据ID获取行，新增的行也能查出来 */\n    getIfRowById(id) {\n      let row = this.getRowById(id), isNew = false\n      if (!row) {\n        row = this.getNewRowById(id)\n        if (!row) {\n          console.warn(`JVxeTable.getIfRowById：没有找到id为\"${id}\"的行`)\n          return {row: null}\n        }\n        isNew = true\n      }\n      return {row, isNew}\n    },\n    /** 通过临时ID获取新增的行 */\n    getNewRowById(id) {\n      let records = this.getInsertRecords()\n      for (let record of records) {\n        if (record.id === id) {\n          return record\n        }\n      }\n      return null\n    },\n    /** 仅获取被删除的数据（新增又被删除的数据不会被获取到） */\n    getDeleteData() {\n      return cloneObject(this.$refs.vxe.getRemoveRecords())\n    },\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @return\n     */\n    async addRows(rows = {}, isOnlJs) {\n      return this._addOrInsert(rows, -1, 'added', isOnlJs)\n    },\n\n    /**\n     * 添加一行或多行\n     *\n     * @param rows\n     * @param index 添加下标，数字，必填\n     * @return\n     */\n    async insertRows(rows, index) {\n      if (typeof index !== 'number' || index < 0) {\n        console.warn(`【JVXETable】insertRows：index必须传递数字，且大于-1`)\n        return\n      }\n      return this._addOrInsert(rows, index, 'inserted')\n    },\n    /**\n     * 添加一行或多行临时数据，不会填充默认值，传什么就添加进去什么\n     * @param rows\n     * @param options 选项\n     * @param options.setActive 是否激活最后一行的编辑模式\n     */\n    async pushRows(rows = {}, options = {}) {\n      let {xTable} = this.$refs.vxe.$refs\n      let {setActive, index} = options\n      setActive = setActive == null ? false : !!setActive\n      index = index == null ? -1 : index\n      index = index === -1 ? index : xTable.tableFullData[index]\n      // 插入行\n      let result = await xTable.insertAt(rows, index)\n      if (setActive) {\n        // 激活最后一行的编辑模式\n        xTable.setActiveRow(result.rows[result.rows.length - 1])\n      }\n      await this._recalcSortNumber()\n      return result\n    },\n\n    /** 清空选择行 */\n    clearSelection() {\n      let event = {$table: this.$refs.vxe, target: this}\n      if (this.rowSelectionType === JVXETypes.rowRadio) {\n        this.$refs.vxe.clearRadioRow()\n        this.handleVxeRadioChange(event)\n      } else {\n        this.$refs.vxe.clearCheckboxRow()\n        this.handleVxeCheckboxChange(event)\n      }\n    },\n\n    /** 删除一行或多行数据 */\n    async removeRows(rows) {\n      const res = await this._remove(rows)\n      await this._recalcSortNumber()\n      return res\n    },\n\n    /** 根据id删除一行或多行 */\n    removeRowsById(rowId) {\n      let rowIds\n      if (Array.isArray(rowId)) {\n        rowIds = rowId\n      } else {\n        rowIds = [rowId]\n      }\n      let rows = rowIds.map((id) => {\n        let {row} = this.getIfRowById(id)\n        if (!row) {\n          return\n        }\n        if (row) {\n          return row\n        } else {\n          console.warn(`【JVXETable】removeRowsById：${id}不存在`)\n          return null\n        }\n      }).filter((row) => row != null)\n      return this.removeRows(rows)\n    },\n\n    getColumnByKey() {\n      return this.$refs.vxe.getColumnByField.apply(this.$refs.vxe, arguments)\n    },\n\n    /* --- 辅助方法 ---*/\n\n    // 触发事件\n    trigger(name, event = {}) {\n      event.$target = this\n      event.$table = this.$refs.vxe\n      //online增强参数兼容\n      event.target = this\n      this.$emit(name, event)\n    },\n\n    /** 加载数据字典并合并到 options */\n    _loadDictConcatToOptions(column) {\n      initDictOptions(column.dictCode).then((res) => {\n        if (res.success) {\n          let newOptions = (column.options || [])// .concat(res.result)\n          res.result.forEach(item => {\n            // 过滤重复数据\n            for (let option of newOptions) if (option.value === item.value) return\n            newOptions.push(item)\n          })\n          this.$set(column, 'options', newOptions)\n        } else {\n          console.group(`JVxeTable 查询字典(${column.dictCode})发生异常`)\n          console.warn(res.message)\n          console.groupEnd()\n        }\n      })\n    },\n\n    // 设置 this.scrolling 防抖模式\n    closeScrolling: simpleDebounce(function () {\n      this.scrolling = false\n    }, 100),\n\n    /**\n     * 过滤添加的行\n     * @param rows 要筛选的行数据\n     * @param remove true = 删除新增，false=只删除id\n     * @param handler function\n     */\n    filterNewRows(rows, remove = true, handler) {\n      let insertRecords = this.$refs.vxe.getInsertRecords()\n      let records = []\n      for (let row of rows) {\n        let item = cloneObject(row)\n        if (insertRecords.includes(row)) {\n          handler ? handler({item, row, insertRecords}) : null\n\n          if (remove) {\n            continue\n          }\n          delete item.id\n        }\n        records.push(item)\n      }\n      return records\n    },\n\n    // 删除选中的数据\n    async removeSelection() {\n      let res = await this._remove(this.selectedRows)\n      this.clearSelection()\n      await this._recalcSortNumber()\n      return res\n    },\n\n    /**\n     * 【删除指定行数据】（重写vxeTable的内部方法，添加了从keepSource中删除）\n     * 如果传 row 则删除一行\n     * 如果传 rows 则删除多行\n     * 如果为空则删除所有\n     */\n    _remove(rows) {\n      const xTable = this.$refs.vxe.$refs.xTable\n\n      const {afterFullData, tableFullData, tableSourceData, editStore, treeConfig, checkboxOpts, selection, isInsertByRow, scrollYLoad} = xTable\n      const {actived, removeList, insertList} = editStore\n      const {checkField: property} = checkboxOpts\n      let rest = []\n      const nowData = afterFullData\n      if (treeConfig) {\n        throw new Error(UtilTools.getLog('vxe.error.noTree', ['remove']))\n      }\n      if (!rows) {\n        rows = tableFullData\n      } else if (!XEUtils.isArray(rows)) {\n        rows = [rows]\n      }\n      // 如果是新增，则保存记录\n      rows.forEach(row => {\n        if (!isInsertByRow(row)) {\n          removeList.push(row)\n        }\n      })\n      // 如果绑定了多选属性，则更新状态\n      if (!property) {\n        XEUtils.remove(selection, row => rows.indexOf(row) > -1)\n      }\n      // 从数据源中移除\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0)\n        tableFullData.length = 0\n        nowData.length = 0\n      } else {\n        rest = XEUtils.remove(tableFullData, row => rows.indexOf(row) > -1)\n        XEUtils.remove(nowData, row => rows.indexOf(row) > -1)\n      }\n      // 【从keepSource中删除】\n      if (xTable.keepSource) {\n        let rowIdSet = new Set(rows.map(row => row.id))\n        XEUtils.remove(tableSourceData, row => rowIdSet.has(row.id))\n      }\n\n      // 如果当前行被激活编辑，则清除激活状态\n      if (actived.row && rows.indexOf(actived.row) > -1) {\n        xTable.clearActived()\n      }\n      // 从新增中移除已删除的数据\n      XEUtils.remove(insertList, row => rows.indexOf(row) > -1)\n      xTable.handleTableData()\n      xTable.updateFooter()\n      xTable.updateCache()\n      xTable.checkSelectionStatus()\n      if (scrollYLoad) {\n        xTable.updateScrollYSpace()\n      }\n      return xTable.$nextTick().then(() => {\n        xTable.recalculate()\n        return {row: rest.length ? rest[rest.length - 1] : null, rows: rest}\n      })\n    },\n\n    /** 行重新排序 */\n    async rowResort(oldIndex, newIndex) {\n      const xTable = this.$refs.vxe.$refs.xTable\n      window.xTable = xTable\n      const sort = (array) => {\n        // 存储旧数据，并删除旧项目\n        let row = array.splice(oldIndex, 1)[0]\n        // 向新项目里添加旧数据\n        array.splice(newIndex, 0, row)\n      }\n      sort(xTable.tableFullData)\n      if (xTable.keepSource) {\n        sort(xTable.tableSourceData)\n      }\n      await this.$nextTick()\n      await this._recalcSortNumber()\n    },\n\n    /** 重新计算排序字段的数值 */\n    async _recalcSortNumber() {\n      const xTable = this.$refs.vxe.$refs.xTable\n      if (this.dragSort) {\n        xTable.tableFullData.forEach((data, idx) => data[this.dragSortKey] = (idx + 1))\n      }\n      await xTable.updateCache(true)\n      return await xTable.updateData()\n    },\n\n    async _addOrInsert(rows = {}, index, triggerName, isOnlJs) {\n      let {xTable} = this.$refs.vxe.$refs\n      let records\n      if (Array.isArray(rows)) {\n        records = rows\n      } else {\n        records = [rows]\n      }\n      // 遍历添加默认值\n      records.forEach(record => this._createRow(record))\n      let result = await this.pushRows(records, {index: index, setActive: true})\n      // 遍历插入的行\n      // update--begin--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n      // online js增强时以传过来值为准，不再赋默认值\n      if (isOnlJs != true) {\n        for (let i = 0; i < result.rows.length; i++) {\n          let row = result.rows[i]\n          this.trigger(triggerName, {\n            row: row,\n            $table: xTable,\n            target: this,\n          })\n        }\n      }\n      // update--end--autor:lvdandan-----date:20201117------for:LOWCOD-987 【新行编辑】js增强附表内置方法调用问题 #1819\n      return result\n    },\n    // 创建新行，自动添加默认值\n    _createRow(record = {}) {\n      let {xTable} = this.$refs.vxe.$refs\n      // 添加默认值\n      xTable.tableFullColumn.forEach(column => {\n        let col = column.own\n        if (record[col.key] == null || record[col.key] === '') {\n          // 设置默认值\n          let createValue = getEnhancedMixins(col.$type || col.type, 'createValue')\n          record[col.key] = createValue({row: record, column, $table: xTable})\n        }\n      })\n      return record\n    },\n\n    /*--- 渲染函数 ---*/\n\n    // 渲染 vxe\n    renderVxeGrid(h) {\n      return h('vxe-grid', {\n        ref: 'vxe',\n        class: ['j-vxe-table'],\n        props: this.vxeProps,\n        on: this.vxeEvents,\n        // 作用域插槽的格式为\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    // 渲染工具栏\n    renderToolbar(h) {\n      if (this.toolbar) {\n        return h('j-vxe-toolbar', {\n          props: {\n            toolbarConfig: this.toolbarConfig,\n            excludeCode: this.excludeCode,\n            size: this.size,\n            disabled: this.disabled,\n            disabledRows: this.disabledRows,\n            selectedRowIds: this.selectedRowIds,\n          },\n          on: {\n            // 新增事件\n            add: () => this.addRows(),\n            // 保存事件\n            save: () => this.trigger('save', {\n              $table: this.$refs.vxe,\n              target: this,\n            }),\n            // 删除事件\n            remove: () => {\n              let $table = this.$refs.vxe\n              let deleteRows = this.filterNewRows(this.selectedRows)\n              // 触发删除事件\n              if (deleteRows.length > 0) {\n                let removeEvent = {deleteRows, $table, target: this}\n                if (this.asyncRemove) {\n                  // 确认删除，只有调用这个方法才会真删除\n                  removeEvent.confirmRemove = () => this.removeSelection()\n                } else {\n                  this.removeSelection()\n                }\n                this.trigger('remove', removeEvent)\n              } else {\n                this.removeSelection()\n              }\n            },\n            // 清除选择事件\n            clearSelection: this.clearSelection\n          },\n          scopedSlots: {\n            toolbarPrefix: this.$scopedSlots.toolbarPrefix,\n            toolbarSuffix: this.$scopedSlots.toolbarSuffix,\n          },\n        })\n      }\n      return null\n    },\n    // 渲染 toolbarAfter 插槽\n    renderToolbarAfterSlot() {\n      if (this.$scopedSlots['toolbarAfter']) {\n        return this.$scopedSlots['toolbarAfter']()\n      }\n      return null\n    },\n    // 渲染点击时弹出的子表\n    renderSubPopover(h) {\n      if (this.clickRowShowSubForm && this.$scopedSlots.subForm) {\n        return h('j-vxe-sub-popover', {\n          ref: 'subPopover',\n          scopedSlots: {\n            subForm: this.$scopedSlots.subForm,\n          }\n        })\n      }\n      return null\n    },\n    // 渲染点击时弹出的详细信息\n    renderDetailsModal(h) {\n      if (this.clickRowShowMainForm && this.$scopedSlots.mainForm) {\n        return h('j-vxe-details-modal', {\n          ref: 'detailsModal',\n          scopedSlots: {\n            subForm: this.clickRowShowSubForm ? this.$scopedSlots.subForm : null,\n            mainForm: this.$scopedSlots.mainForm\n          }\n        })\n      }\n    },\n    // 渲染分页器\n    renderPagination(h) {\n      if (this.pagination && Object.keys(this.pagination).length > 0) {\n        return h('j-vxe-pagination', {\n          props: {\n            size: this.size,\n            disabled: this.disabled,\n            pagination: this.pagination\n          },\n          on: {\n            change: (e) => this.trigger('pageChange', e)\n          },\n        })\n      }\n      return null\n    },\n    loadExcludeCode(){\n      if(!this.authPre || this.authPre.length==0){\n        this.excludeCode = []\n      }else{\n        let pre = this.authPre\n        if(!pre.endsWith(':')){\n          pre += ':'\n        }\n        this.excludeCode = getNoAuthCols(pre)\n      }\n    }\n\n  },\n  render(h) {\n    return h('div', {\n      class: ['j-vxe-table-box', `size--${this.size}`]\n    }, [\n      this.renderSubPopover(h),\n      this.renderDetailsModal(h),\n      this.renderToolbar(h),\n      this.renderToolbarAfterSlot(),\n      this.renderVxeGrid(h),\n      this.renderPagination(h),\n    ])\n  },\n  beforeDestroy() {\n    this.$emit('beforeDestroy')\n  }\n}\n\n// 兼容 online 的规则\nconst fooPatterns = [\n  {title: '非空', value: '*', pattern: /^.+$/},\n  {title: '6到16位数字', value: 'n6-16', pattern: /^\\d{6,18}$/},\n  {title: '6到16位任意字符', value: '*6-16', pattern: /^.{6,16}$/},\n  {title: '6到18位字母', value: 's6-18', pattern: /^[a-z|A-Z]{6,18}$/},\n  {title: '网址', value: 'url', pattern: /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/},\n  {title: '电子邮件', value: 'e', pattern: /^([\\w]+\\.*)([\\w]+)@[\\w]+\\.\\w{3}(\\.\\w{2}|)$/},\n  {title: '手机号码', value: 'm', pattern: /^1[3456789]\\d{9}$/},\n  {title: '邮政编码', value: 'p', pattern: /^[1-9]\\d{5}$/},\n  {title: '字母', value: 's', pattern: /^[A-Z|a-z]+$/},\n  {title: '数字', value: 'n', pattern: /^-?\\d+(\\.?\\d+|\\d?)$/},\n  {title: '整数', value: 'z', pattern: /^-?\\d+$/},\n  {title: '金额', value: 'money', pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/},\n]\n\n/** 旧版handler转为新版Validator */\nfunction handlerConvertToValidator(event) {\n  const {column, rule} = event\n  return new Promise((resolve, reject) => {\n    rule.handler(event, (flag, msg) => {\n      let message = rule.message\n      if (typeof msg === 'string') {\n        message = replaceProps(column.own, msg)\n      }\n      if (flag == null) {\n        resolve(message)\n      } else if (!!flag) {\n        resolve(message)\n      } else {\n        reject(new Error(message))\n      }\n    }, this, event)\n  })\n}\n\n/** 唯一校验器 */\nfunction uniqueValidator(event) {\n  const {cellValue, column, rule} = event\n  let tableData = this.getTableData()\n  let findCount = 0\n  for (let rowData of tableData) {\n    if (rowData[column.own.key] === cellValue) {\n      if (++findCount >= 2) {\n        return Promise.reject(new Error(rule.message))\n      }\n    }\n  }\n  return Promise.resolve()\n}"]}]}