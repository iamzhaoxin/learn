{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\store\\modules\\permission.js","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\store\\modules\\permission.js","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1617935819779}],"contextDependencies":[],"result":["import { asyncRouterMap, constantRouterMap } from \"@/config/router.config\";\n/**\n * 过滤账户是否拥有某一个权限，并将菜单从加载列表移除\n *\n * @param permission\n * @param route\n * @returns {boolean}\n */\n\nfunction hasPermission(permission, route) {\n  if (route.meta && route.meta.permission) {\n    var flag = -1;\n\n    for (var i = 0, len = permission.length; i < len; i++) {\n      flag = route.meta.permission.indexOf(permission[i]);\n\n      if (flag >= 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/**\n * 单账户多角色时，使用该方法可过滤角色不存在的菜单\n *\n * @param roles\n * @param route\n * @returns {*}\n */\n// eslint-disable-next-line\n\n\nfunction hasRole(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return route.meta.roles.indexOf(roles.id);\n  } else {\n    return true;\n  }\n}\n\nfunction filterAsyncRouter(routerMap, roles) {\n  var accessedRouters = routerMap.filter(function (route) {\n    if (hasPermission(roles.permissionList, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles);\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return accessedRouters;\n}\n\nvar permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: function SET_ROUTERS(state, data) {\n      state.addRouters = data;\n      state.routers = constantRouterMap.concat(data); //console.log('-----mutations---SET_ROUTERS----', data)\n    }\n  },\n  actions: {\n    GenerateRoutes: function GenerateRoutes(_ref, data) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        var roles = data.roles;\n        console.log('-----mutations---data----', data);\n        var accessedRouters;\n        accessedRouters = filterAsyncRouter(asyncRouterMap, roles);\n        console.log('-----mutations---accessedRouters----', accessedRouters);\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      });\n    },\n    // 动态添加主界面路由，需要缓存\n    UpdateAppRouter: function UpdateAppRouter(_ref2, routes) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve) {\n        //const [ roles ] = routes.constRoutes\n        var routelist = routes.constRoutes;\n        commit('SET_ROUTERS', routelist);\n        resolve();\n      });\n    }\n  }\n};\nexport default permission;",{"version":3,"sources":["D:/activiti/project01/jeecg-boot-activiti-master/ant-design-vue-jeecg/src/store/modules/permission.js"],"names":["asyncRouterMap","constantRouterMap","hasPermission","permission","route","meta","flag","i","len","length","indexOf","hasRole","roles","id","filterAsyncRouter","routerMap","accessedRouters","filter","permissionList","children","state","routers","addRouters","mutations","SET_ROUTERS","data","concat","actions","GenerateRoutes","commit","Promise","resolve","console","log","UpdateAppRouter","routes","routelist","constRoutes"],"mappings":"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","sourcesContent":["import { asyncRouterMap, constantRouterMap } from \"@/config/router.config\"\n\n/**\n * 过滤账户是否拥有某一个权限，并将菜单从加载列表移除\n *\n * @param permission\n * @param route\n * @returns {boolean}\n */\nfunction hasPermission(permission, route) {\n  if (route.meta && route.meta.permission) {\n    let flag = -1\n    for (let i = 0, len = permission.length; i < len; i++) {\n      flag = route.meta.permission.indexOf(permission[i])\n      if (flag >= 0) {\n        return true\n      }\n    }\n    return false\n  }\n  return true\n}\n\n/**\n * 单账户多角色时，使用该方法可过滤角色不存在的菜单\n *\n * @param roles\n * @param route\n * @returns {*}\n */\n// eslint-disable-next-line\nfunction hasRole(roles, route) {\n  if (route.meta && route.meta.roles) {\n    return route.meta.roles.indexOf(roles.id)\n  } else {\n    return true\n  }\n}\n\nfunction filterAsyncRouter(routerMap, roles) {\n  const accessedRouters = routerMap.filter(route => {\n    if (hasPermission(roles.permissionList, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles)\n      }\n      return true\n    }\n    return false\n  })\n  return accessedRouters\n}\n\n\nconst permission = {\n  state: {\n    routers: constantRouterMap,\n    addRouters: []\n  },\n  mutations: {\n    SET_ROUTERS: (state, data) => {\n      state.addRouters = data\n      state.routers = constantRouterMap.concat(data)\n      //console.log('-----mutations---SET_ROUTERS----', data)\n    }\n  },\n  actions: {\n    GenerateRoutes({ commit }, data) {\n      return new Promise(resolve => {\n        const { roles } = data\n        console.log('-----mutations---data----', data)\n        let accessedRouters\n        accessedRouters = filterAsyncRouter(asyncRouterMap, roles)\n        console.log('-----mutations---accessedRouters----', accessedRouters)\n        commit('SET_ROUTERS', accessedRouters)\n        resolve()\n      })\n    },\n    // 动态添加主界面路由，需要缓存\n    UpdateAppRouter({ commit }, routes) {\n      return new Promise(resolve => {\n        //const [ roles ] = routes.constRoutes\n        let routelist = routes.constRoutes;\n        commit('SET_ROUTERS', routelist)\n        resolve()\n      })\n    }\n  }\n}\n\nexport default permission"]}]}