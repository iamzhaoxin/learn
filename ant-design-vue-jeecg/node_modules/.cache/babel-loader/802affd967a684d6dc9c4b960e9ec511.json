{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\chart\\DashChartDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\chart\\DashChartDemo.vue","mtime":1621922115283},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { registerShape } from 'viser-vue';\nregisterShape('point', 'pointer', {\n  draw: function draw(cfg, container) {\n    var point = cfg.points[0];\n    point = this.parsePoint(point);\n    var center = this.parsePoint({\n      x: 0,\n      y: 0\n    });\n    container.addShape('line', {\n      attrs: {\n        x1: center.x,\n        y1: center.y,\n        x2: point.x,\n        y2: point.y + 15,\n        stroke: cfg.color,\n        lineWidth: 5,\n        lineCap: 'round'\n      }\n    });\n    return container.addShape('circle', {\n      attrs: {\n        x: center.x,\n        y: center.y,\n        r: 9.75,\n        stroke: cfg.color,\n        lineWidth: 4.5,\n        fill: '#fff'\n      }\n    });\n  }\n});\nvar scale = [{\n  dataKey: 'value',\n  min: 0,\n  max: 9,\n  tickInterval: 1,\n  nice: false\n}];\nvar data = [{\n  value: 7.0\n}];\nexport default {\n  name: \"DashChartDemo\",\n  props: {\n    datasource: {\n      type: Number,\n      default: 7\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  created: function created() {\n    if (!this.datasource) {\n      this.chartData = data;\n    } else {\n      this.chartData = [{\n        value: this.datasource\n      }];\n    }\n\n    this.getChartData();\n  },\n  watch: {\n    'datasource': function datasource(val) {\n      this.chartData = [{\n        value: val\n      }];\n      this.getChartData();\n    }\n  },\n  methods: {\n    getChartData: function getChartData() {\n      if (this.chartData && this.chartData.length > 0) {\n        this.abcd = this.chartData[0].value * 10;\n      } else {\n        this.abcd = 70;\n      }\n    },\n    getHtmlGuideHtml: function getHtmlGuideHtml() {\n      return '<div style=\"width: 300px;text-align: center;\">\\n' + '<p style=\"font-size: 14px;color: #545454;margin: 0;\">' + this.title + '</p>\\n' + '<p style=\"font-size: 36px;color: #545454;margin: 0;\">' + this.abcd + '%</p>\\n' + '</div>';\n    },\n    getArcGuide2End: function getArcGuide2End() {\n      return [this.chartData[0].value, 0.945];\n    }\n  },\n  data: function data() {\n    return {\n      chartData: [],\n      height: 400,\n      scale: scale,\n      abcd: 70,\n      axisLabel: {\n        offset: -16,\n        textStyle: {\n          fontSize: 18,\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }\n      },\n      axisSubTickLine: {\n        length: -8,\n        stroke: '#fff',\n        strokeOpacity: 1\n      },\n      axisTickLine: {\n        length: -17,\n        stroke: '#fff',\n        strokeOpacity: 1\n      },\n      arcGuide1Start: [0, 0.945],\n      arcGuide1End: [9, 0.945],\n      arcGuide1Style: {\n        stroke: '#CBCBCB',\n        lineWidth: 18\n      },\n      arcGuide2Start: [0, 0.945],\n      arcGuide2Style: {\n        stroke: '#4F62D0',\n        lineWidth: 18\n      },\n      htmlGuidePosition: ['50%', '100%'],\n      htmlGuideHtml: \"\\n      <div style=\\\"width: 300px;text-align: center;\\\">\\n        <p style=\\\"font-size: 14px;color: #545454;margin: 0;\\\">\".concat(this.title, \"</p>\\n        <p style=\\\"font-size: 36px;color: #545454;margin: 0;\\\">\").concat(this.abcd, \"%</p>\\n      </div>\\n    \")\n    };\n  }\n};",{"version":3,"sources":["DashChartDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :style=\"{ padding: '0 0 32px 32px' }\">\r\n    <v-chart :forceFit=\"true\" :height=\"300\" :data=\"chartData\" :scale=\"scale\">\r\n      <v-coord type=\"polar\" :startAngle=\"-202.5\" :endAngle=\"22.5\" :radius=\"0.75\"></v-coord>\r\n      <v-axis\r\n        dataKey=\"value\"\r\n        :zIndex=\"2\"\r\n        :line=\"null\"\r\n        :label=\"axisLabel\"\r\n        :subTickCount=\"4\"\r\n        :subTickLine=\"axisSubTickLine\"\r\n        :tickLine=\"axisTickLine\"\r\n        :grid=\"null\"\r\n      ></v-axis>\r\n      <v-axis dataKey=\"1\" :show=\"false\"></v-axis>\r\n      <v-series\r\n        gemo=\"point\"\r\n        position=\"value*1\"\r\n        shape=\"pointer\"\r\n        color=\"#4F62D0\"\r\n        :active=\"false\"\r\n      ></v-series>\r\n      <v-guide\r\n        type=\"arc\"\r\n        :zIndex=\"0\"\r\n        :top=\"false\"\r\n        :start=\"arcGuide1Start\"\r\n        :end=\"arcGuide1End\"\r\n        :vStyle=\"arcGuide1Style\"\r\n      ></v-guide>\r\n      <v-guide\r\n        type=\"arc\"\r\n        :zIndex=\"1\"\r\n        :start=\"arcGuide2Start\"\r\n        :end=\"getArcGuide2End\"\r\n        :vStyle=\"arcGuide2Style\"\r\n      ></v-guide>\r\n      <v-guide\r\n        type=\"html\"\r\n        :position=\"htmlGuidePosition\"\r\n        :html=\"getHtmlGuideHtml()\"\r\n      ></v-guide>\r\n    </v-chart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { registerShape } from 'viser-vue';\r\n\r\n  registerShape('point', 'pointer', {\r\n    draw(cfg, container) {\r\n      let point = cfg.points[0];\r\n      point = this.parsePoint(point);\r\n      const center = this.parsePoint({\r\n        x: 0,\r\n        y: 0,\r\n      });\r\n      container.addShape('line', {\r\n        attrs: {\r\n          x1: center.x,\r\n          y1: center.y,\r\n          x2: point.x,\r\n          y2: point.y + 15,\r\n          stroke: cfg.color,\r\n          lineWidth: 5,\r\n          lineCap: 'round',\r\n        }\r\n      });\r\n      return container.addShape('circle', {\r\n        attrs: {\r\n          x: center.x,\r\n          y: center.y,\r\n          r: 9.75,\r\n          stroke: cfg.color,\r\n          lineWidth: 4.5,\r\n          fill: '#fff',\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const scale = [{\r\n    dataKey: 'value',\r\n    min: 0,\r\n    max: 9,\r\n    tickInterval: 1,\r\n    nice: false,\r\n  }];\r\n\r\n  const data = [\r\n    { value: 7.0 },\r\n  ];\r\n\r\n  export default {\r\n    name:\"DashChartDemo\",\r\n    props:{\r\n      datasource:{\r\n        type: Number,\r\n        default:7\r\n      },\r\n      title: {\r\n        type: String,\r\n        default: ''\r\n      }\r\n    },\r\n    created(){\r\n      if(!this.datasource){\r\n        this.chartData = data;\r\n      }else{\r\n        this.chartData = [\r\n          { value: this.datasource },\r\n        ];\r\n      }\r\n      this.getChartData()\r\n    },\r\n    watch: {\r\n      'datasource': function (val) {\r\n        this.chartData = [\r\n          { value: val},\r\n        ];\r\n        this.getChartData();\r\n      }\r\n    },\r\n    methods:{\r\n      getChartData(){\r\n        if(this.chartData && this.chartData.length>0){\r\n          this.abcd = this.chartData[0].value * 10\r\n        }else{\r\n          this.abcd = 70\r\n        }\r\n      },\r\n      getHtmlGuideHtml(){\r\n        return '<div style=\"width: 300px;text-align: center;\">\\n' +\r\n          '<p style=\"font-size: 14px;color: #545454;margin: 0;\">'+this.title+'</p>\\n' +\r\n          '<p style=\"font-size: 36px;color: #545454;margin: 0;\">'+this.abcd+'%</p>\\n' +\r\n          '</div>'\r\n      },\r\n      getArcGuide2End(){\r\n        return [this.chartData[0].value, 0.945]\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        chartData:[],\r\n        height: 400,\r\n        scale: scale,\r\n        abcd:70,\r\n        axisLabel: {\r\n          offset: -16,\r\n          textStyle: {\r\n            fontSize: 18,\r\n            textAlign: 'center',\r\n            textBaseline: 'middle'\r\n          }\r\n        },\r\n        axisSubTickLine: {\r\n          length: -8,\r\n          stroke: '#fff',\r\n          strokeOpacity: 1,\r\n        },\r\n        axisTickLine: {\r\n          length: -17,\r\n          stroke: '#fff',\r\n          strokeOpacity: 1,\r\n        },\r\n        arcGuide1Start: [0, 0.945],\r\n        arcGuide1End: [9, 0.945],\r\n        arcGuide1Style: {\r\n          stroke: '#CBCBCB',\r\n          lineWidth: 18,\r\n        },\r\n        arcGuide2Start: [0, 0.945],\r\n        arcGuide2Style: {\r\n          stroke: '#4F62D0',\r\n          lineWidth: 18,\r\n        },\r\n        htmlGuidePosition: ['50%', '100%'],\r\n        htmlGuideHtml: `\r\n        <div style=\"width: 300px;text-align: center;\">\r\n          <p style=\"font-size: 14px;color: #545454;margin: 0;\">${this.title}</p>\r\n          <p style=\"font-size: 36px;color: #545454;margin: 0;\">${this.abcd}%</p>\r\n        </div>\r\n      `,\r\n      };\r\n    },\r\n  };\r\n</script>\r\n"],"sourceRoot":"src/components/chart"}]}