{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:\\\\activiti\\\\project01\\\\jeecg-boot-activiti-master\\\\ant-design-vue-jeecg\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { filterObj } from '@/utils/util';\nimport { queryDepartTreeList, getUserList, queryUserByDepId } from '@/api/api';\nexport default {\n  name: 'JSelectUserByDepModal',\n  components: {},\n  props: ['modalWidth', 'multi', 'userIds'],\n  data: function data() {\n    return {\n      queryParam: {\n        username: \"\"\n      },\n      columns: [{\n        title: '用户账号',\n        align: 'center',\n        dataIndex: 'username'\n      }, {\n        title: '用户姓名',\n        align: 'center',\n        dataIndex: 'realname'\n      }, {\n        title: '性别',\n        align: 'center',\n        dataIndex: 'sex',\n        customRender: function customRender(text) {\n          if (text === 1) {\n            return '男';\n          } else if (text === 2) {\n            return '女';\n          } else {\n            return text;\n          }\n        }\n      }, {\n        title: '手机',\n        align: 'center',\n        dataIndex: 'phone'\n      }, {\n        title: '部门',\n        align: 'center',\n        dataIndex: 'orgCodeTxt'\n      }],\n      scrollTrigger: {},\n      dataSource: [],\n      selectedRowKeys: [],\n      selectUserRows: [],\n      selectUserIds: [],\n      title: '根据部门选择用户',\n      ipagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      selectedDepIds: [],\n      departTree: [],\n      visible: false,\n      form: this.$form.createForm(this),\n      loading: false,\n      expandedKeys: []\n    };\n  },\n  computed: {\n    // 计算属性的 getter\n    getType: function getType() {\n      return this.multi == true ? 'checkbox' : 'radio';\n    }\n  },\n  watch: {\n    userIds: {\n      immediate: true,\n      handler: function handler() {\n        this.initUserNames();\n      }\n    }\n  },\n  created: function created() {\n    // 该方法触发屏幕自适应\n    this.resetScreenSize();\n    this.loadData();\n  },\n  methods: {\n    initUserNames: function initUserNames() {\n      var _this = this;\n\n      if (this.userIds) {\n        // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\n        var values = this.userIds.split(',') + ',';\n        getUserList({\n          username: values,\n          pageNo: 1,\n          pageSize: values.length\n        }).then(function (res) {\n          if (res.success) {\n            var selectedRowKeys = [];\n            var realNames = [];\n            res.result.records.forEach(function (user) {\n              realNames.push(user['realname']);\n              selectedRowKeys.push(user['id']);\n            });\n            _this.selectedRowKeys = selectedRowKeys;\n\n            _this.$emit('initComp', realNames.join(','));\n          }\n        });\n      } else {\n        // JSelectUserByDep组件bug issues/I16634\n        this.$emit('initComp', '');\n      }\n    },\n    loadData: function () {\n      var _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arg) {\n        var _this2 = this;\n\n        var params;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (arg === 1) {\n                  this.ipagination.current = 1;\n                }\n\n                if (!(this.selectedDepIds && this.selectedDepIds.length > 0)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.initQueryUserByDepId(this.selectedDepIds);\n\n              case 4:\n                _context.next = 10;\n                break;\n\n              case 6:\n                this.loading = true;\n                params = this.getQueryParams(); //查询条件\n\n                _context.next = 10;\n                return getUserList(params).then(function (res) {\n                  if (res.success) {\n                    _this2.dataSource = res.result.records;\n                    _this2.ipagination.total = res.result.total;\n                  }\n                }).finally(function () {\n                  _this2.loading = false;\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadData(_x) {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }(),\n    // 触发屏幕自适应\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 500) {\n        this.scrollTrigger = {\n          x: 800\n        };\n      } else {\n        this.scrollTrigger = {};\n      }\n    },\n    showModal: function showModal() {\n      this.visible = true;\n      this.queryDepartTree();\n      this.initUserNames();\n      this.loadData();\n      this.form.resetFields();\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n    getQueryField: function getQueryField() {\n      var str = 'id,';\n\n      for (var a = 0; a < this.columns.length; a++) {\n        str += ',' + this.columns[a].dataIndex;\n      }\n\n      return str;\n    },\n    searchReset: function searchReset(num) {\n      var that = this;\n\n      if (num !== 0) {\n        that.queryParam = {};\n        that.loadData(1);\n      }\n\n      that.selectedRowKeys = [];\n      that.selectUserIds = [];\n      that.selectedDepIds = [];\n    },\n    close: function close() {\n      this.searchReset(0);\n      this.visible = false;\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n      }\n\n      this.ipagination = pagination;\n      this.loadData();\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this;\n      this.getSelectUserRows();\n      that.$emit('ok', that.selectUserRows, that.selectUserIds);\n      that.searchReset(0);\n      that.close();\n    },\n    //获取选择用户信息\n    getSelectUserRows: function getSelectUserRows(rowId) {\n      var dataSource = this.dataSource;\n      var userIds = \"\";\n      this.selectUserRows = [];\n\n      for (var i = 0, len = dataSource.length; i < len; i++) {\n        if (this.selectedRowKeys.includes(dataSource[i].id)) {\n          this.selectUserRows.push(dataSource[i]);\n          userIds = userIds + \",\" + dataSource[i].username;\n        }\n      }\n\n      this.selectUserIds = userIds.substring(1);\n    },\n    // 点击树节点,筛选出对应的用户\n    onDepSelect: function onDepSelect(selectedDepIds) {\n      if (selectedDepIds[0] != null) {\n        this.initQueryUserByDepId(selectedDepIds); // 调用方法根据选选择的id查询用户信息\n\n        if (this.selectedDepIds[0] !== selectedDepIds[0]) {\n          this.selectedDepIds = [selectedDepIds[0]];\n        }\n      }\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys, selectionRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectionRows = selectionRows;\n    },\n    onSearch: function onSearch() {\n      this.loadData(1);\n    },\n    // 根据选择的id来查询用户信息\n    initQueryUserByDepId: function initQueryUserByDepId(selectedDepIds) {\n      var _this3 = this;\n\n      this.loading = true;\n      return queryUserByDepId({\n        id: selectedDepIds.toString()\n      }).then(function (res) {\n        if (res.success) {\n          _this3.dataSource = res.result;\n          _this3.ipagination.total = res.result.length;\n        }\n      }).finally(function () {\n        _this3.loading = false;\n      });\n    },\n    queryDepartTree: function queryDepartTree() {\n      var _this4 = this;\n\n      queryDepartTreeList().then(function (res) {\n        if (res.success) {\n          _this4.departTree = res.result; // 默认展开父节点\n\n          _this4.expandedKeys = _this4.departTree.map(function (item) {\n            return item.id;\n          });\n        }\n      });\n    },\n    modalFormOk: function modalFormOk() {\n      this.loadData();\n    }\n  }\n};",{"version":3,"sources":["JSelectUserByDepModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <j-modal\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    :title=\"title\"\n    switchFullscreen\n    @ok=\"handleSubmit\"\n    @cancel=\"close\"\n    style=\"top:50px\"\n    cancelText=\"关闭\"\n  >\n    <a-row :gutter=\"10\" style=\"background-color: #ececec; padding: 10px; margin: -10px\">\n      <a-col :md=\"6\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          <!--组织机构-->\n          <a-directory-tree\n            selectable\n            :selectedKeys=\"selectedDepIds\"\n            :checkStrictly=\"true\"\n            :dropdownStyle=\"{maxHeight:'200px',overflow:'auto'}\"\n            :treeData=\"departTree\"\n            :expandAction=\"false\"\n            :expandedKeys.sync=\"expandedKeys\"\n            @select=\"onDepSelect\"\n          />\n        </a-card>\n      </a-col>\n      <a-col :md=\"18\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          用户账号:\n          <a-input-search\n            :style=\"{width:'150px',marginBottom:'15px'}\"\n            placeholder=\"请输入账号\"\n            v-model=\"queryParam.username\"\n            @search=\"onSearch\"\n          ></a-input-search>\n          <a-button @click=\"searchReset(1)\" style=\"margin-left: 20px\" icon=\"redo\">重置</a-button>\n          <!--用户列表-->\n          <a-table\n            ref=\"table\"\n            :scroll=\"scrollTrigger\"\n            size=\"middle\"\n            rowKey=\"id\"\n            :columns=\"columns\"\n            :dataSource=\"dataSource\"\n            :pagination=\"ipagination\"\n            :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange,type: getType}\"\n            :loading=\"loading\"\n            @change=\"handleTableChange\">\n          </a-table>\n        </a-card>\n      </a-col>\n    </a-row>\n  </j-modal>\n</template>\n\n<script>\n  import {filterObj} from '@/utils/util'\n  import {queryDepartTreeList, getUserList, queryUserByDepId} from '@/api/api'\n\n  export default {\n    name: 'JSelectUserByDepModal',\n    components: {},\n    props: ['modalWidth', 'multi', 'userIds'],\n    data() {\n      return {\n        queryParam: {\n          username: \"\",\n        },\n        columns: [\n          {\n            title: '用户账号',\n            align: 'center',\n            dataIndex: 'username'\n          },\n          {\n            title: '用户姓名',\n            align: 'center',\n            dataIndex: 'realname'\n          },\n          {\n            title: '性别',\n            align: 'center',\n            dataIndex: 'sex',\n            customRender: function (text) {\n              if (text === 1) {\n                return '男'\n              } else if (text === 2) {\n                return '女'\n              } else {\n                return text\n              }\n            }\n          },\n          {\n            title: '手机',\n            align: 'center',\n            dataIndex: 'phone'\n          },\n          {\n            title: '部门',\n            align: 'center',\n            dataIndex: 'orgCodeTxt'\n          }\n        ],\n        scrollTrigger: {},\n        dataSource: [],\n        selectedRowKeys: [],\n        selectUserRows: [],\n        selectUserIds: [],\n        title: '根据部门选择用户',\n        ipagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        },\n        isorter: {\n          column: 'createTime',\n          order: 'desc'\n        },\n        selectedDepIds: [],\n        departTree: [],\n        visible: false,\n        form: this.$form.createForm(this),\n        loading: false,\n        expandedKeys: [],\n      }\n    },\n    computed: {\n      // 计算属性的 getter\n      getType: function () {\n        return this.multi == true ? 'checkbox' : 'radio';\n      }\n    },\n    watch: {\n      userIds: {\n        immediate: true,\n        handler() {\n          this.initUserNames()\n        }\n      },\n    },\n    created() {\n      // 该方法触发屏幕自适应\n      this.resetScreenSize();\n      this.loadData()\n    },\n    methods: {\n      initUserNames() {\n        if (this.userIds) {\n          // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\n          let values = this.userIds.split(',') + ','\n          getUserList({\n            username: values,\n            pageNo: 1,\n            pageSize: values.length\n          }).then((res) => {\n            if (res.success) {\n              let selectedRowKeys = []\n              let realNames = []\n              res.result.records.forEach(user => {\n                realNames.push(user['realname'])\n                selectedRowKeys.push(user['id'])\n              })\n              this.selectedRowKeys = selectedRowKeys\n              this.$emit('initComp', realNames.join(','))\n            }\n          })\n        } else {\n          // JSelectUserByDep组件bug issues/I16634\n          this.$emit('initComp', '')\n        }\n      },\n      async loadData(arg) {\n        if (arg === 1) {\n          this.ipagination.current = 1;\n        }\n        if (this.selectedDepIds && this.selectedDepIds.length > 0) {\n          await this.initQueryUserByDepId(this.selectedDepIds)\n        } else {\n          this.loading = true\n          let params = this.getQueryParams()//查询条件\n          await getUserList(params).then((res) => {\n            if (res.success) {\n              this.dataSource = res.result.records\n              this.ipagination.total = res.result.total\n            }\n          }).finally(() => {\n            this.loading = false\n          })\n        }\n      },\n      // 触发屏幕自适应\n      resetScreenSize() {\n        let screenWidth = document.body.clientWidth;\n        if (screenWidth < 500) {\n          this.scrollTrigger = {x: 800};\n        } else {\n          this.scrollTrigger = {};\n        }\n      },\n      showModal() {\n        this.visible = true;\n        this.queryDepartTree();\n        this.initUserNames()\n        this.loadData();\n        this.form.resetFields();\n      },\n      getQueryParams() {\n        let param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        return filterObj(param);\n      },\n      getQueryField() {\n        let str = 'id,';\n        for (let a = 0; a < this.columns.length; a++) {\n          str += ',' + this.columns[a].dataIndex;\n        }\n        return str;\n      },\n      searchReset(num) {\n        let that = this;\n        if (num !== 0) {\n          that.queryParam = {};\n          that.loadData(1);\n        }\n        that.selectedRowKeys = [];\n        that.selectUserIds = [];\n        that.selectedDepIds = [];\n      },\n      close() {\n        this.searchReset(0);\n        this.visible = false;\n      },\n      handleTableChange(pagination, filters, sorter) {\n        //TODO 筛选\n        if (Object.keys(sorter).length > 0) {\n          this.isorter.column = sorter.field;\n          this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n        }\n        this.ipagination = pagination;\n        this.loadData();\n      },\n      handleSubmit() {\n        let that = this;\n        this.getSelectUserRows();\n        that.$emit('ok', that.selectUserRows, that.selectUserIds);\n        that.searchReset(0)\n        that.close();\n      },\n      //获取选择用户信息\n      getSelectUserRows(rowId) {\n        let dataSource = this.dataSource;\n        let userIds = \"\";\n        this.selectUserRows = [];\n        for (let i = 0, len = dataSource.length; i < len; i++) {\n          if (this.selectedRowKeys.includes(dataSource[i].id)) {\n            this.selectUserRows.push(dataSource[i]);\n            userIds = userIds + \",\" + dataSource[i].username\n          }\n        }\n        this.selectUserIds = userIds.substring(1);\n      },\n      // 点击树节点,筛选出对应的用户\n      onDepSelect(selectedDepIds) {\n        if (selectedDepIds[0] != null) {\n          this.initQueryUserByDepId(selectedDepIds); // 调用方法根据选选择的id查询用户信息\n          if (this.selectedDepIds[0] !== selectedDepIds[0]) {\n            this.selectedDepIds = [selectedDepIds[0]];\n          }\n        }\n      },\n      onSelectChange(selectedRowKeys, selectionRows) {\n        this.selectedRowKeys = selectedRowKeys;\n        this.selectionRows = selectionRows;\n      },\n      onSearch() {\n        this.loadData(1);\n      },\n      // 根据选择的id来查询用户信息\n      initQueryUserByDepId(selectedDepIds) {\n        this.loading = true\n        return queryUserByDepId({id: selectedDepIds.toString()}).then((res) => {\n          if (res.success) {\n            this.dataSource = res.result;\n            this.ipagination.total = res.result.length;\n          }\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      queryDepartTree() {\n        queryDepartTreeList().then((res) => {\n          if (res.success) {\n            this.departTree = res.result;\n            // 默认展开父节点\n            this.expandedKeys = this.departTree.map(item => item.id)\n          }\n        })\n      },\n      modalFormOk() {\n        this.loadData();\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .ant-table-tbody .ant-table-row td {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  #components-layout-demo-custom-trigger .trigger {\n    font-size: 18px;\n    line-height: 64px;\n    padding: 0 24px;\n    cursor: pointer;\n    transition: color .3s;\n  }\n</style>"],"sourceRoot":"src/components/jeecgbiz/modal"}]}