{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\UserRoleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\UserRoleModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryTreeListForRole, queryRolePermission, saveRolePermission } from '@/api/api';\nimport RoleDataruleModal from './RoleDataruleModal.vue';\nexport default {\n  name: \"RoleModal\",\n  components: {\n    RoleDataruleModal: RoleDataruleModal\n  },\n  data: function data() {\n    return {\n      roleId: \"\",\n      treeData: [],\n      defaultCheckedKeys: [],\n      checkedKeys: [],\n      expandedKeysss: [],\n      allTreeKeys: [],\n      autoExpandParent: true,\n      checkStrictly: true,\n      title: \"角色权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys: []\n    };\n  },\n  methods: {\n    onTreeNodeSelect: function onTreeNodeSelect(id) {\n      if (id && id.length > 0) {\n        this.selectedKeys = id;\n      }\n\n      this.$refs.datarule.show(this.selectedKeys[0], this.roleId);\n    },\n    onCheck: function onCheck(o) {\n      if (this.checkStrictly) {\n        this.checkedKeys = o.checked;\n      } else {\n        this.checkedKeys = o;\n      }\n    },\n    show: function show(roleId) {\n      this.roleId = roleId;\n      this.visible = true;\n    },\n    close: function close() {\n      this.reset();\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    reset: function reset() {\n      this.expandedKeysss = [];\n      this.checkedKeys = [];\n      this.defaultCheckedKeys = [];\n      this.loading = false;\n    },\n    expandAll: function expandAll() {\n      this.expandedKeysss = this.allTreeKeys;\n    },\n    closeAll: function closeAll() {\n      this.expandedKeysss = [];\n    },\n    checkALL: function checkALL() {\n      this.checkedKeys = this.allTreeKeys;\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      //this.checkedKeys = this.defaultCheckedKeys\n      this.checkedKeys = [];\n    },\n    switchCheckStrictly: function switchCheckStrictly(v) {\n      if (v == 1) {\n        this.checkStrictly = false;\n      } else if (v == 2) {\n        this.checkStrictly = true;\n      }\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleSubmit: function handleSubmit(exit) {\n      var _this = this;\n\n      var that = this;\n      var params = {\n        roleId: that.roleId,\n        permissionIds: that.checkedKeys.join(\",\"),\n        lastpermissionIds: that.defaultCheckedKeys.join(\",\")\n      };\n      that.loading = true;\n      console.log(\"请求参数：\", params);\n      saveRolePermission(params).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.loading = false;\n\n          if (exit) {\n            that.close();\n          }\n        } else {\n          that.$message.error(res.message);\n          that.loading = false;\n\n          if (exit) {\n            that.close();\n          }\n        }\n\n        _this.loadData();\n      });\n    },\n    loadData: function loadData() {\n      var _this2 = this;\n\n      queryTreeListForRole().then(function (res) {\n        _this2.treeData = res.result.treeList;\n        _this2.allTreeKeys = res.result.ids;\n        queryRolePermission({\n          roleId: _this2.roleId\n        }).then(function (res) {\n          _this2.checkedKeys = _toConsumableArray(res.result);\n          _this2.defaultCheckedKeys = _toConsumableArray(res.result);\n          _this2.expandedKeysss = _this2.allTreeKeys;\n          console.log(_this2.defaultCheckedKeys);\n        });\n      });\n    }\n  },\n  watch: {\n    visible: function visible() {\n      if (this.visible) {\n        this.loadData();\n      }\n    }\n  }\n};",{"version":3,"sources":["UserRoleModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=650\n    placement=\"right\"\n    :closable=\"true\"\n    @close=\"close\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n\n    <a-form>\n      <a-form-item label='所拥有的权限'>\n        <a-tree\n          checkable\n          @check=\"onCheck\"\n          :checkedKeys=\"checkedKeys\"\n          :treeData=\"treeData\"\n          @expand=\"onExpand\"\n          @select=\"onTreeNodeSelect\"\n          :selectedKeys=\"selectedKeys\"\n          :expandedKeys=\"expandedKeysss\"\n          :checkStrictly=\"checkStrictly\">\n          <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\n            {{ slotTitle }}<a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\n          </span>\n        </a-tree>\n      </a-form-item>\n    </a-form>\n\n    <div class=\"drawer-bootom-button\">\n      <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"switchCheckStrictly(1)\">父子关联</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"switchCheckStrictly(2)\">取消关联</a-menu-item>\n          <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\n          <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\n          <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\n          <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\n        </a-menu>\n        <a-button>\n          树操作 <a-icon type=\"up\" />\n        </a-button>\n      </a-dropdown>\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"close\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit(false)\" type=\"primary\" :loading=\"loading\" ghost style=\"margin-right: 0.8rem\">仅保存</a-button>\n      <a-button @click=\"handleSubmit(true)\" type=\"primary\" :loading=\"loading\">保存并关闭</a-button>\n    </div>\n\n    <role-datarule-modal ref=\"datarule\"></role-datarule-modal>\n\n  </a-drawer>\n\n</template>\n<script>\n  import {queryTreeListForRole,queryRolePermission,saveRolePermission} from '@/api/api'\n  import RoleDataruleModal from './RoleDataruleModal.vue'\n\n  export default {\n    name: \"RoleModal\",\n    components:{\n      RoleDataruleModal\n    },\n    data(){\n      return {\n        roleId:\"\",\n        treeData: [],\n        defaultCheckedKeys:[],\n        checkedKeys:[],\n        expandedKeysss:[],\n        allTreeKeys:[],\n        autoExpandParent: true,\n        checkStrictly: true,\n        title:\"角色权限配置\",\n        visible: false,\n        loading: false,\n        selectedKeys:[]\n      }\n    },\n    methods: {\n      onTreeNodeSelect(id){\n        if(id && id.length>0){\n          this.selectedKeys = id\n        }\n        this.$refs.datarule.show(this.selectedKeys[0],this.roleId)\n      },\n      onCheck (o) {\n        if(this.checkStrictly){\n          this.checkedKeys = o.checked;\n        }else{\n          this.checkedKeys = o\n        }\n      },\n      show(roleId){\n        this.roleId=roleId\n        this.visible = true;\n      },\n      close () {\n        this.reset()\n        this.$emit('close');\n        this.visible = false;\n      },\n      onExpand(expandedKeys){\n        this.expandedKeysss = expandedKeys;\n        this.autoExpandParent = false\n      },\n      reset () {\n        this.expandedKeysss = []\n        this.checkedKeys = []\n        this.defaultCheckedKeys = []\n        this.loading = false\n      },\n      expandAll () {\n        this.expandedKeysss = this.allTreeKeys\n      },\n      closeAll () {\n        this.expandedKeysss = []\n      },\n      checkALL () {\n        this.checkedKeys = this.allTreeKeys\n      },\n      cancelCheckALL () {\n        //this.checkedKeys = this.defaultCheckedKeys\n        this.checkedKeys = []\n      },\n      switchCheckStrictly (v) {\n        if(v==1){\n          this.checkStrictly = false\n        }else if(v==2){\n          this.checkStrictly = true\n        }\n      },\n      handleCancel () {\n        this.close()\n      },\n      handleSubmit(exit) {\n        let that = this;\n        let params =  {\n          roleId:that.roleId,\n          permissionIds:that.checkedKeys.join(\",\"),\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n        };\n        that.loading = true;\n        console.log(\"请求参数：\",params);\n        saveRolePermission(params).then((res)=>{\n          if(res.success){\n            that.$message.success(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }else {\n            that.$message.error(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }\n          this.loadData();\n        })\n      },\n      loadData(){\n        queryTreeListForRole().then((res) => {\n          this.treeData = res.result.treeList\n          this.allTreeKeys = res.result.ids\n          queryRolePermission({roleId:this.roleId}).then((res)=>{\n              this.checkedKeys = [...res.result];\n              this.defaultCheckedKeys = [...res.result];\n              this.expandedKeysss = this.allTreeKeys;\n              console.log(this.defaultCheckedKeys)\n          })\n        })\n      }\n    },\n  watch: {\n    visible () {\n      if (this.visible) {\n        this.loadData();\n      }\n    }\n  }\n  }\n\n</script>\n<style lang=\"less\" scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n\n</style>"],"sourceRoot":"src/views/system/modules"}]}