{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JMarkdownEditor\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JMarkdownEditor\\index.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport '@toast-ui/editor/dist/i18n/zh-cn';\nimport Editor from '@toast-ui/editor';\nimport defaultOptions from './default-options';\nimport JUpload from '@/components/jeecg/JUpload';\nimport { getFileAccessHttpUrl } from '@/api/manage';\nexport default {\n  name: 'JMarkdownEditor',\n  components: {\n    JUpload: JUpload\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    id: {\n      type: String,\n      required: false,\n      default: function _default() {\n        return 'markdown-editor-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '');\n      }\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return defaultOptions;\n      }\n    },\n    mode: {\n      type: String,\n      default: 'markdown'\n    },\n    height: {\n      type: String,\n      required: false,\n      default: '300px'\n    },\n    language: {\n      type: String,\n      required: false,\n      default: 'zh-CN'\n    }\n  },\n  data: function data() {\n    return {\n      editor: null,\n      isShow: false,\n      activeIndex: \"1\",\n      dialogVisible: false,\n      index: \"1\",\n      fileList: [],\n      remark: \"\",\n      imageName: \"\",\n      imageUrl: \"\",\n      networkPic: \"\"\n    };\n  },\n  computed: {\n    editorOptions: function editorOptions() {\n      var options = Object.assign({}, defaultOptions, this.options);\n      options.initialEditType = this.mode;\n      options.height = this.height;\n      options.language = this.language;\n      return options;\n    }\n  },\n  watch: {\n    value: function value(newValue, preValue) {\n      if (newValue !== preValue && newValue !== this.editor.getMarkdown()) {\n        this.editor.setMarkdown(newValue);\n      }\n    },\n    language: function language(val) {\n      this.destroyEditor();\n      this.initEditor();\n    },\n    height: function height(newValue) {\n      this.editor.height(newValue);\n    },\n    mode: function mode(newValue) {\n      this.editor.changeMode(newValue);\n    }\n  },\n  mounted: function mounted() {\n    this.initEditor();\n  },\n  destroyed: function destroyed() {\n    this.destroyEditor();\n  },\n  methods: {\n    initEditor: function initEditor() {\n      var _this = this;\n\n      this.editor = new Editor(_objectSpread({\n        el: document.getElementById(this.id)\n      }, this.editorOptions));\n\n      if (this.value) {\n        this.editor.setMarkdown(this.value);\n      }\n\n      this.editor.on('change', function () {\n        _this.$emit('change', _this.editor.getMarkdown());\n      }); //--begin 添加自定义上传按钮\n\n      /*\n       * 添加自定义按钮\n       */\n      //获取编辑器上的功能条\n\n      var toolbar = this.editor.getUI().getToolbar();\n      var fileDom = this.$refs.files; //添加图片点击事件\n\n      this.editor.eventManager.addEventType('isShowClickEvent');\n      this.editor.eventManager.listen('isShowClickEvent', function () {\n        _this.isShow = true;\n        _this.dialogVisible = true;\n      }); //addImageBlobHook图片上传、剪切、拖拽都会走此方法\n      // 删除默认监听事件\n\n      this.editor.eventManager.removeEventHandler('addImageBlobHook'); // 添加自定义监听事件\n\n      this.editor.eventManager.listen('addImageBlobHook', function (blob, callback) {\n        _this.upload(blob, function (url) {\n          callback(url);\n        });\n      }); // 添加自定义按钮 第二个参数代表位置，不传默认放在最后\n\n      toolbar.insertItem(15, {\n        type: 'button',\n        options: {\n          name: 'customize',\n          className: 'tui-image tui-toolbar-icons',\n          event: 'isShowClickEvent',\n          tooltip: '上传图片'\n        } //\n\n      }); //--end 添加自定义上传按钮\n    },\n    destroyEditor: function destroyEditor() {\n      if (!this.editor) return;\n      this.editor.off('change');\n      this.editor.remove();\n    },\n    setMarkdown: function setMarkdown(value) {\n      this.editor.setMarkdown(value);\n    },\n    getMarkdown: function getMarkdown() {\n      return this.editor.getMarkdown();\n    },\n    setHtml: function setHtml(value) {\n      this.editor.setHtml(value);\n    },\n    getHtml: function getHtml() {\n      return this.editor.getHtml();\n    },\n    handleOk: function handleOk() {\n      if (this.index == '1') {\n        this.imageUrl = getFileAccessHttpUrl(this.fileList);\n\n        if (this.remark) {\n          this.addImgToMd(this.imageUrl, this.remark);\n        } else {\n          this.addImgToMd(this.imageUrl, \"\");\n        }\n      } else {\n        if (this.remark) {\n          this.addImgToMd(this.networkPic, this.remark);\n        } else {\n          this.addImgToMd(this.networkPic, \"\");\n        }\n      }\n\n      this.index = \"1\";\n      this.fileList = [];\n      this.imageName = \"\";\n      this.imageUrl = \"\";\n      this.remark = \"\";\n      this.networkPic = \"\";\n      this.dialogVisible = false;\n      this.isShow = false;\n    },\n    handleClose: function handleClose(done) {\n      done();\n    },\n    handleChange: function handleChange(val) {\n      this.fileList = [];\n      this.remark = \"\";\n      this.imageName = \"\";\n      this.imageUrl = \"\";\n      this.networkPic = \"\";\n      this.index = val;\n    },\n    //添加图片到markdown\n    addImgToMd: function addImgToMd(data, name) {\n      var editor = this.editor.getCodeMirror();\n      var editorHtml = this.editor.getCurrentModeEditor();\n      var isMarkdownMode = this.editor.isMarkdownMode();\n\n      if (isMarkdownMode) {\n        editor.replaceSelection(\"![\".concat(name, \"](\").concat(data, \")\"));\n      } else {\n        var range = editorHtml.getRange();\n        var img = document.createElement('img');\n        img.src = \"\".concat(data);\n        img.alt = name;\n        range.insertNode(img);\n      }\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"j-markdown-editor\" :id=\"id\"/>\n    <div v-if=\"isShow\">\n      <j-modal\n        title=\"图片上传\"\n        :visible.sync=\"dialogVisible\"\n        width=\"30%\"\n        :before-close=\"handleClose\"\n        @ok=\"handleOk\">\n        <a-tabs default-active-key=\"1\" @change=\"handleChange\">\n          <a-tab-pane tab=\"本地图片上传\" key=\"1\" :forceRender=\"true\">\n            <j-upload v-model=\"fileList\" :number=\"1\"></j-upload>\n            <div style=\"margin-top: 20px\">\n              <a-input v-model=\"remark\" placeholder=\"请填写备注\"></a-input>\n            </div>\n          </a-tab-pane>\n          <a-tab-pane tab=\"网络图片地址\" key=\"2\" :forceRender=\"true\">\n            <a-input v-model=\"networkPic\" placeholder=\"请填写网络图片地址\"></a-input>\n            <a-input style=\"margin-top: 20px\" v-model=\"remark\" placeholder=\"请填写备注\"></a-input>\n          </a-tab-pane>\n        </a-tabs>\n      </j-modal>\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'codemirror/lib/codemirror.css'\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport '@toast-ui/editor/dist/i18n/zh-cn';\n\nimport Editor from '@toast-ui/editor';\nimport defaultOptions from './default-options'\nimport JUpload from '@/components/jeecg/JUpload'\nimport { getFileAccessHttpUrl } from '@/api/manage'\n\nexport default {\n  name: 'JMarkdownEditor',\n  components: {\n    JUpload,\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    id: {\n      type: String,\n      required: false,\n      default() {\n        return 'markdown-editor-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '')\n      }\n    },\n    options: {\n      type: Object,\n      default() {\n        return defaultOptions\n      }\n    },\n    mode: {\n      type: String,\n      default: 'markdown'\n    },\n    height: {\n      type: String,\n      required: false,\n      default: '300px'\n    },\n    language: {\n      type: String,\n      required: false,\n      default: 'zh-CN'\n    }\n  },\n  data() {\n    return {\n      editor: null,\n      isShow:false,\n      activeIndex:\"1\",\n      dialogVisible:false,\n      index:\"1\",\n      fileList:[],\n      remark:\"\",\n      imageName:\"\",\n      imageUrl:\"\",\n      networkPic:\"\"\n    }\n  },\n  computed: {\n    editorOptions() {\n      const options = Object.assign({}, defaultOptions, this.options)\n      options.initialEditType = this.mode\n      options.height = this.height\n      options.language = this.language\n      return options\n    }\n  },\n  watch: {\n    value(newValue, preValue) {\n      if (newValue !== preValue && newValue !== this.editor.getMarkdown()) {\n        this.editor.setMarkdown(newValue)\n      }\n    },\n    language(val) {\n      this.destroyEditor()\n      this.initEditor()\n    },\n    height(newValue) {\n      this.editor.height(newValue)\n    },\n    mode(newValue) {\n      this.editor.changeMode(newValue)\n    }\n  },\n  mounted() {\n    this.initEditor()\n  },\n  destroyed() {\n    this.destroyEditor()\n  },\n  methods: {\n    initEditor() {\n      this.editor = new Editor({\n        el: document.getElementById(this.id),\n        ...this.editorOptions\n      })\n      if (this.value) {\n        this.editor.setMarkdown(this.value)\n      }\n      this.editor.on('change', () => {\n        this.$emit('change', this.editor.getMarkdown())\n      })\n      //--begin 添加自定义上传按钮\n      /*\n       * 添加自定义按钮\n       */\n      //获取编辑器上的功能条\n      let toolbar = this.editor.getUI().getToolbar();\n      let fileDom = this.$refs.files;\n      //添加图片点击事件\n      this.editor.eventManager.addEventType('isShowClickEvent');\n      this.editor.eventManager.listen('isShowClickEvent', () => {\n        this.isShow = true\n        this.dialogVisible = true\n      });\n      //addImageBlobHook图片上传、剪切、拖拽都会走此方法\n      // 删除默认监听事件\n      this.editor.eventManager.removeEventHandler('addImageBlobHook')\n      // 添加自定义监听事件\n      this.editor.eventManager.listen('addImageBlobHook', (blob, callback) => {\n        this.upload(blob, url => {\n          callback(url)\n        })\n      })\n      // 添加自定义按钮 第二个参数代表位置，不传默认放在最后\n      toolbar.insertItem(15,{\n        type: 'button',\n        options:{\n          name: 'customize',\n          className: 'tui-image tui-toolbar-icons',\n          event: 'isShowClickEvent',\n          tooltip: '上传图片',\n        }\n        //\n      });\n      //--end 添加自定义上传按钮\n    },\n    destroyEditor() {\n      if (!this.editor) return\n      this.editor.off('change')\n      this.editor.remove()\n    },\n    setMarkdown(value) {\n      this.editor.setMarkdown(value)\n    },\n    getMarkdown() {\n      return this.editor.getMarkdown()\n    },\n    setHtml(value) {\n      this.editor.setHtml(value)\n    },\n    getHtml() {\n      return this.editor.getHtml()\n    },\n    handleOk(){\n      if(this.index=='1'){\n        this.imageUrl = getFileAccessHttpUrl(this.fileList)\n        if(this.remark){\n          this.addImgToMd(this.imageUrl,this.remark)\n        }else{\n          this.addImgToMd(this.imageUrl,\"\")\n        }\n      }else{\n        if(this.remark){\n          this.addImgToMd(this.networkPic,this.remark)\n        }else{\n          this.addImgToMd(this.networkPic,\"\")\n        }\n      }\n      this.index=\"1\"\n      this.fileList=[]\n      this.imageName=\"\";\n      this.imageUrl=\"\";\n      this.remark=\"\"\n      this.networkPic=\"\"\n      this.dialogVisible=false\n      this.isShow=false;\n    },\n    handleClose(done) {\n      done();\n    },\n    handleChange(val){\n      this.fileList=[]\n      this.remark=\"\"\n      this.imageName=\"\"\n      this.imageUrl=\"\"\n      this.networkPic=\"\"\n      this.index=val\n    },\n    //添加图片到markdown\n    addImgToMd(data,name) {\n      let editor = this.editor.getCodeMirror();\n      let editorHtml = this.editor.getCurrentModeEditor();\n      let isMarkdownMode = this.editor.isMarkdownMode();\n      if (isMarkdownMode) {\n        editor.replaceSelection(`![${name}](${data})`);\n      } else {\n        let range = editorHtml.getRange();\n        let img = document.createElement('img');\n        img.src = `${data}`;\n        img.alt = name;\n        range.insertNode(img);\n      }\n    },\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n</script>\n<style scoped lang=\"less\">\n\n  .j-markdown-editor {\n    /deep/ .tui-editor-defaultUI {\n      .te-mode-switch,\n      .tui-scrollsync\n      {\n        line-height: 1.5;\n      }\n    }\n  }\n\n</style>"],"sourceRoot":"src/components/jeecg/JMarkdownEditor"}]}