{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\tools\\HeaderNotice.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\tools\\HeaderNotice.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1620887942039},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1621061372054},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1617935823297},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.header-notice-wrapper {\n  top: 50px !important;\n}\n",{"version":3,"sources":["HeaderNotice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmUA;AACA;AACA","file":"HeaderNotice.vue","sourceRoot":"src/components/tools","sourcesContent":["<template>\n  <a-popover\n    trigger=\"click\"\n    placement=\"bottomRight\"\n    :autoAdjustOverflow=\"true\"\n    :arrowPointAtCenter=\"true\"\n    overlayClassName=\"header-notice-wrapper\"\n    @visibleChange=\"handleHoverChange\"\n    :overlayStyle=\"{ width: '300px', top: '50px' }\">\n    <template slot=\"content\">\n      <a-spin :spinning=\"loadding\">\n        <a-tabs>\n          <a-tab-pane :tab=\"msg1Title\" key=\"1\">\n            <!--<a-list>\n              <a-list-item>\n                <a-list-item-meta title=\"你收到了 14 份新周报\" description=\"一年前\">\n                  <a-avatar style=\"background-color: white\" slot=\"avatar\" src=\"https://gw.alipayobjects.com/zos/rmsportal/ThXAXghbEsBCCSDihZxY.png\"/>\n                </a-list-item-meta>\n              </a-list-item>\n              <a-list-item>\n                <a-list-item-meta title=\"你推荐的 IT大牛 已通过第三轮面试\" description=\"一年前\">\n                  <a-avatar style=\"background-color: white\" slot=\"avatar\" src=\"https://gw.alipayobjects.com/zos/rmsportal/OKJXDXrmkNshAMvwtvhu.png\"/>\n                </a-list-item-meta>\n              </a-list-item>\n              <a-list-item>\n                <a-list-item-meta title=\"这种模板可以区分多种通知类型\" description=\"一年前\">\n                  <a-avatar style=\"background-color: white\" slot=\"avatar\" src=\"https://gw.alipayobjects.com/zos/rmsportal/kISTdvpyTAhtGxpovNWd.png\"/>\n                </a-list-item-meta>\n              </a-list-item>\n            </a-list>-->\n            <a-list>\n              <a-list-item :key=\"index\" v-for=\"(record, index) in announcement1\">\n                <div style=\"margin-left: 5%;width: 80%\">\n                  <p><a @click=\"showAnnouncement(record)\">{{ record.titile }}</a></p>\n                  <p style=\"color: rgba(0,0,0,.45);margin-bottom: 0px\">{{ record.createTime }} 发布</p>\n                </div>\n                <div style=\"text-align: right\">\n                  <a-tag @click=\"showAnnouncement(record)\" v-if=\"record.priority === 'L'\" color=\"blue\">一般消息</a-tag>\n                  <a-tag @click=\"showAnnouncement(record)\" v-if=\"record.priority === 'M'\" color=\"orange\">重要消息</a-tag>\n                  <a-tag @click=\"showAnnouncement(record)\" v-if=\"record.priority === 'H'\" color=\"red\">紧急消息</a-tag>\n                </div>\n              </a-list-item>\n              <div style=\"margin-top: 5px;text-align: center\">\n                <a-button @click=\"toMyAnnouncement()\" type=\"dashed\" block>查看更多</a-button>\n              </div>\n            </a-list>\n          </a-tab-pane>\n          <a-tab-pane :tab=\"msg2Title\" key=\"2\">\n            <a-list>\n              <a-list-item :key=\"index\" v-for=\"(record, index) in announcement2\">\n                <div style=\"margin-left: 5%;width: 80%\">\n                  <p><a @click=\"showAnnouncement(record)\">{{ record.titile }}</a></p>\n                  <p style=\"color: rgba(0,0,0,.45);margin-bottom: 0px\">{{ record.createTime }} 发布</p>\n                </div>\n                <div style=\"text-align: right\">\n                  <a-tag @click=\"showAnnouncement(record)\" v-if=\"record.priority === 'L'\" color=\"blue\">一般消息</a-tag>\n                  <a-tag @click=\"showAnnouncement(record)\" v-if=\"record.priority === 'M'\" color=\"orange\">重要消息</a-tag>\n                  <a-tag @click=\"showAnnouncement(record)\" v-if=\"record.priority === 'H'\" color=\"red\">紧急消息</a-tag>\n                </div>\n              </a-list-item>\n              <div style=\"margin-top: 5px;text-align: center\">\n                <a-button @click=\"toMyAnnouncement()\" type=\"dashed\" block>查看更多</a-button>\n              </div>\n            </a-list>\n          </a-tab-pane>\n        </a-tabs>\n      </a-spin>\n    </template>\n    <span @click=\"fetchNotice\" class=\"header-notice\">\n      <a-badge :count=\"msgTotal\">\n        <a-icon style=\"font-size: 16px; padding: 4px\" type=\"bell\" />\n      </a-badge>\n    </span>\n    <show-announcement ref=\"ShowAnnouncement\" @ok=\"modalFormOk\"></show-announcement>\n    <dynamic-notice ref=\"showDynamNotice\" :path=\"openPath\" :formData=\"formData\"/>\n  </a-popover>\n</template>\n\n<script>\n  import { getAction,putAction } from '@/api/manage'\n  import ShowAnnouncement from './ShowAnnouncement'\n  import store from '@/store/'\n  import DynamicNotice from './DynamicNotice'\n\n\n  export default {\n    name: \"HeaderNotice\",\n    components: {\n      DynamicNotice,\n      ShowAnnouncement,\n    },\n    data () {\n      return {\n        loadding: false,\n        url:{\n          listCementByUser:\"/sys/annountCement/listByUser\",\n          editCementSend:\"/sys/sysAnnouncementSend/editByAnntIdAndUserId\",\n          queryById:\"/sys/annountCement/queryById\",\n        },\n        hovered: false,\n        announcement1:[],\n        announcement2:[],\n        msg1Count:\"0\",\n        msg2Count:\"0\",\n        msg1Title:\"通知(0)\",\n        msg2Title:\"\",\n        stopTimer:false,\n        websock: null,\n        lockReconnect:false,\n        heartCheck:null,\n        formData:{},\n        openPath:''\n      }\n    },\n    computed:{\n      msgTotal () {\n        return parseInt(this.msg1Count)+parseInt(this.msg2Count);\n      }\n    },\n    mounted() {\n      this.loadData();\n      //this.timerFun();\n      this.initWebSocket();\n     // this.heartCheckFun();\n    },\n    destroyed: function () { // 离开页面生命周期函数\n      this.websocketOnclose();\n    },\n    methods: {\n      timerFun() {\n        this.stopTimer = false;\n        let myTimer = setInterval(()=>{\n          // 停止定时器\n          if (this.stopTimer == true) {\n            clearInterval(myTimer);\n            return;\n          }\n          this.loadData()\n        },6000)\n      },\n      loadData (){\n        try {\n          // 获取系统消息\n          getAction(this.url.listCementByUser).then((res) => {\n            if (res.success) {\n              this.announcement1 = res.result.anntMsgList;\n              this.msg1Count = res.result.anntMsgTotal;\n              this.msg1Title = \"通知(\" + res.result.anntMsgTotal + \")\";\n              this.announcement2 = res.result.sysMsgList;\n              this.msg2Count = res.result.sysMsgTotal;\n              this.msg2Title = \"系统消息(\" + res.result.sysMsgTotal + \")\";\n            }\n          }).catch(error => {\n            console.log(\"系统消息通知异常\",error);//这行打印permissionName is undefined\n            this.stopTimer = true;\n            console.log(\"清理timer\");\n          });\n        } catch (err) {\n          this.stopTimer = true;\n          console.log(\"通知异常\",err);\n        }\n      },\n      fetchNotice () {\n        if (this.loadding) {\n          this.loadding = false\n          return\n        }\n        this.loadding = true\n        setTimeout(() => {\n          this.loadding = false\n        }, 200)\n      },\n      showAnnouncement(record){\n        putAction(this.url.editCementSend,{anntId:record.id}).then((res)=>{\n          if(res.success){\n            this.loadData();\n          }\n        });\n        this.hovered = false;\n        if(record.openType==='component'){\n          this.openPath = record.openPage;\n          this.formData = {id:record.busId};\n          this.$refs.showDynamNotice.detail(record.openPage);\n        }else{\n          this.$refs.ShowAnnouncement.detail(record);\n        }\n      },\n      toMyAnnouncement(){\n        this.$router.push({\n          path: '/isps/userAnnouncement'\n        });\n      },\n      modalFormOk(){\n      },\n      handleHoverChange (visible) {\n        this.hovered = visible;\n      },\n\n      initWebSocket: function () {\n        // WebSocket与普通的请求所用协议有所不同，ws等同于http，wss等同于https\n        var userId = store.getters.userInfo.id;\n        var url = window._CONFIG['domianURL'].replace(\"https://\",\"wss://\").replace(\"http://\",\"ws://\")+\"/websocket/\"+userId;\n        //console.log(url);\n        this.websock = new WebSocket(url);\n        this.websock.onopen = this.websocketOnopen;\n        this.websock.onerror = this.websocketOnerror;\n        this.websock.onmessage = this.websocketOnmessage;\n        this.websock.onclose = this.websocketOnclose;\n      },\n      websocketOnopen: function () {\n        console.log(\"WebSocket连接成功\");\n        //心跳检测重置\n        //this.heartCheck.reset().start();\n      },\n      websocketOnerror: function (e) {\n        console.log(\"WebSocket连接发生错误\");\n        this.reconnect();\n      },\n      websocketOnmessage: function (e) {\n        console.log(\"-----接收消息-------\",e.data);\n        var data = eval(\"(\" + e.data + \")\"); //解析对象\n        if(data.cmd == \"topic\"){\n            //系统通知\n          this.loadData();\n        }else if(data.cmd == \"user\"){\n            //用户消息\n          this.loadData();\n        }\n        //心跳检测重置\n        //this.heartCheck.reset().start();\n      },\n      websocketOnclose: function (e) {\n        console.log(\"connection closed (\" + e + \")\");\n        if(e){\n          console.log(\"connection closed (\" + e.code + \")\");\n        }\n        this.reconnect();\n      },\n      websocketSend(text) { // 数据发送\n        try {\n          this.websock.send(text);\n        } catch (err) {\n          console.log(\"send failed (\" + err.code + \")\");\n        }\n      },\n\n      openNotification (data) {\n        var text = data.msgTxt;\n        const key = `open${Date.now()}`;\n        this.$notification.open({\n          message: '消息提醒',\n          placement:'bottomRight',\n          description: text,\n          key,\n          btn: (h)=>{\n            return h('a-button', {\n              props: {\n                type: 'primary',\n                size: 'small',\n              },\n              on: {\n                click: () => this.showDetail(key,data)\n              }\n            }, '查看详情')\n          },\n        });\n      },\n\n      reconnect() {\n        var that = this;\n        if(that.lockReconnect) return;\n        that.lockReconnect = true;\n        //没连接上会一直重连，设置延迟避免请求过多\n        setTimeout(function () {\n          console.info(\"尝试重连...\");\n          that.initWebSocket();\n          that.lockReconnect = false;\n        }, 5000);\n      },\n      heartCheckFun(){\n        var that = this;\n        //心跳检测,每20s心跳一次\n        that.heartCheck = {\n          timeout: 20000,\n          timeoutObj: null,\n          serverTimeoutObj: null,\n          reset: function(){\n            clearTimeout(this.timeoutObj);\n            //clearTimeout(this.serverTimeoutObj);\n            return this;\n          },\n          start: function(){\n            var self = this;\n            this.timeoutObj = setTimeout(function(){\n              //这里发送一个心跳，后端收到后，返回一个心跳消息，\n              //onmessage拿到返回的心跳就说明连接正常\n              that.websocketSend(\"HeartBeat\");\n              console.info(\"客户端发送心跳\");\n              //self.serverTimeoutObj = setTimeout(function(){//如果超过一定时间还没重置，说明后端主动断开了\n              //  that.websock.close();//如果onclose会执行reconnect，我们执行ws.close()就行了.如果直接执行reconnect 会触发onclose导致重连两次\n              //}, self.timeout)\n            }, this.timeout)\n          }\n        }\n      },\n\n\n      showDetail(key,data){\n        this.$notification.close(key);\n        var id = data.msgId;\n        getAction(this.url.queryById,{id:id}).then((res) => {\n          if (res.success) {\n            var record = res.result;\n            this.showAnnouncement(record);\n          }\n        })\n\n      },\n    }\n  }\n</script>\n\n<style lang=\"css\">\n  .header-notice-wrapper {\n    top: 50px !important;\n  }\n</style>\n<style lang=\"less\" scoped>\n  .header-notice{\n    display: inline-block;\n    transition: all 0.3s;\n\n    span {\n      vertical-align: initial;\n    }\n  }\n</style>"]}]}