{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JPopup.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JPopup.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JPopupOnlReport from './modal/JPopupOnlReport'\n\nexport default {\n  name: 'JPopup',\n  components: {\n    JPopupOnlReport\n  },\n  props: {\n    code: {\n      type: String,\n      default: '',\n      required: false\n    },\n    field: {\n      type: String,\n      default: '',\n      required: false\n    },\n    orgFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n    destFields: {\n      type: String,\n      default: '',\n      required: false\n    },\n    width: {\n      type: Number,\n      default: 1200,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: '请选择',\n      required: false\n    },\n    value: {\n      type: String,\n      required: false\n    },\n    triggerChange: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    multi: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    //popup动态参数 支持系统变量语法\n    param:{\n      type: Object,\n      required: false,\n      default: ()=>{}\n    },\n    /** 分组ID，用于将多个popup的请求合并到一起，不传不分组 */\n    groupId: String\n\n  },\n  data() {\n    return {\n      showText: '',\n      title: '',\n      avalid: true\n    }\n  },\n  computed: {\n    uniqGroupId() {\n      if (this.groupId) {\n        let { groupId, code, field, orgFields, destFields } = this\n        return `${groupId}_${code}_${field}_${orgFields}_${destFields}`\n      }\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function(val) {\n        if (!val) {\n          this.showText = ''\n        } else {\n          this.showText = val\n        }\n      }\n    }\n  },\n  created() {\n  },\n  mounted() {\n    if (!this.orgFields || !this.destFields || !this.code) {\n      this.$message.error('popup参数未正确配置!')\n      this.avalid = false\n    }\n    if (this.destFields.split(',').length != this.orgFields.split(',').length) {\n      this.$message.error('popup参数未正确配置,原始值和目标值数量不一致!')\n      this.avalid = false\n    }\n  },\n  methods: {\n    openModal() {\n      if (this.disabled === false) {\n        this.$refs.jPopupOnlReport.show()\n      }\n    },\n    handleEmpty() {\n      this.showText = ''\n      let destFieldsArr = this.destFields.split(',')\n      if (destFieldsArr.length === 0) {\n        return\n      }\n      let res = {}\n      for (let i = 0; i < destFieldsArr.length; i++) {\n        res[destFieldsArr[i]] = ''\n      }\n      if (this.triggerChange) {\n        this.$emit('callback', res)\n      } else {\n        this.$emit('input', '', res)\n      }\n    },\n    callBack(rows) {\n      // update--begin--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n      let orgFieldsArr = this.orgFields.split(',')\n      let destFieldsArr = this.destFields.split(',')\n      let resetText = false\n      if (this.field && this.field.length > 0) {\n        this.showText = ''\n        resetText = true\n      }\n      let res = {}\n      if (orgFieldsArr.length > 0) {\n        for (let i = 0; i < orgFieldsArr.length; i++) {\n          let tempDestArr = []\n          for(let rw of rows){\n            let val = rw[orgFieldsArr[i]]\n            if(!val){\n              val = \"\"\n            }\n            tempDestArr.push(val)\n          }\n          res[destFieldsArr[i]] = tempDestArr.join(\",\")\n        }\n        if (resetText === true) {\n          let tempText = []\n          for(let rw of rows){\n            let val = rw[orgFieldsArr[destFieldsArr.indexOf(this.field)]]\n            if(!val){\n              val = \"\"\n            }\n            tempText.push(val)\n          }\n          this.showText = tempText.join(\",\")\n        }\n        // update--end--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n      }\n      if (this.triggerChange) {\n        //v-dec时即triggerChange为true时 将整个对象给form页面 让他自己setFieldsValue\n        this.$emit('callback', res)\n      } else {\n        //v-model时 需要传一个参数field 表示当前这个字段 从而根据这个字段的顺序找到原始值\n        // this.$emit(\"input\",row[orgFieldsArr[destFieldsArr.indexOf(this.field)]])\n        this.$emit('input', this.showText, res)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["JPopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqfile":"JPopup.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <div class=\"components-input-demo-presuffix\" v-if=\"avalid\">\n    <!---->\n    <a-input @click=\"openModal\" :placeholder=\"placeholder\" v-model=\"showText\" readOnly :disabled=\"disabled\">\n      <a-icon slot=\"prefix\" type=\"cluster\" :title=\"title\"/>\n      <a-icon v-if=\"showText\" slot=\"suffix\" type=\"close-circle\" @click=\"handleEmpty\" title=\"清空\"/>\n    </a-input>\n\n    <j-popup-onl-report\n      ref=\"jPopupOnlReport\"\n      :code=\"code\"\n      :multi=\"multi\"\n      :groupId=\"uniqGroupId\"\n      :param=\"param\"\n      @ok=\"callBack\"\n    />\n\n  </div>\n</template>\n\n<script>\n  import JPopupOnlReport from './modal/JPopupOnlReport'\n\n  export default {\n    name: 'JPopup',\n    components: {\n      JPopupOnlReport\n    },\n    props: {\n      code: {\n        type: String,\n        default: '',\n        required: false\n      },\n      field: {\n        type: String,\n        default: '',\n        required: false\n      },\n      orgFields: {\n        type: String,\n        default: '',\n        required: false\n      },\n      destFields: {\n        type: String,\n        default: '',\n        required: false\n      },\n      width: {\n        type: Number,\n        default: 1200,\n        required: false\n      },\n      placeholder: {\n        type: String,\n        default: '请选择',\n        required: false\n      },\n      value: {\n        type: String,\n        required: false\n      },\n      triggerChange: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      disabled: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      multi: {\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      //popup动态参数 支持系统变量语法\n      param:{\n        type: Object,\n        required: false,\n        default: ()=>{}\n      },\n      /** 分组ID，用于将多个popup的请求合并到一起，不传不分组 */\n      groupId: String\n\n    },\n    data() {\n      return {\n        showText: '',\n        title: '',\n        avalid: true\n      }\n    },\n    computed: {\n      uniqGroupId() {\n        if (this.groupId) {\n          let { groupId, code, field, orgFields, destFields } = this\n          return `${groupId}_${code}_${field}_${orgFields}_${destFields}`\n        }\n      }\n    },\n    watch: {\n      value: {\n        immediate: true,\n        handler: function(val) {\n          if (!val) {\n            this.showText = ''\n          } else {\n            this.showText = val\n          }\n        }\n      }\n    },\n    created() {\n    },\n    mounted() {\n      if (!this.orgFields || !this.destFields || !this.code) {\n        this.$message.error('popup参数未正确配置!')\n        this.avalid = false\n      }\n      if (this.destFields.split(',').length != this.orgFields.split(',').length) {\n        this.$message.error('popup参数未正确配置,原始值和目标值数量不一致!')\n        this.avalid = false\n      }\n    },\n    methods: {\n      openModal() {\n        if (this.disabled === false) {\n          this.$refs.jPopupOnlReport.show()\n        }\n      },\n      handleEmpty() {\n        this.showText = ''\n        let destFieldsArr = this.destFields.split(',')\n        if (destFieldsArr.length === 0) {\n          return\n        }\n        let res = {}\n        for (let i = 0; i < destFieldsArr.length; i++) {\n          res[destFieldsArr[i]] = ''\n        }\n        if (this.triggerChange) {\n          this.$emit('callback', res)\n        } else {\n          this.$emit('input', '', res)\n        }\n      },\n      callBack(rows) {\n        // update--begin--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n        let orgFieldsArr = this.orgFields.split(',')\n        let destFieldsArr = this.destFields.split(',')\n        let resetText = false\n        if (this.field && this.field.length > 0) {\n          this.showText = ''\n          resetText = true\n        }\n        let res = {}\n        if (orgFieldsArr.length > 0) {\n          for (let i = 0; i < orgFieldsArr.length; i++) {\n            let tempDestArr = []\n            for(let rw of rows){\n              let val = rw[orgFieldsArr[i]]\n              if(!val){\n                val = \"\"\n              }\n              tempDestArr.push(val)\n            }\n            res[destFieldsArr[i]] = tempDestArr.join(\",\")\n          }\n          if (resetText === true) {\n            let tempText = []\n            for(let rw of rows){\n              let val = rw[orgFieldsArr[destFieldsArr.indexOf(this.field)]]\n              if(!val){\n                val = \"\"\n              }\n              tempText.push(val)\n            }\n            this.showText = tempText.join(\",\")\n          }\n          // update--end--autor:lvdandan-----date:20200630------for：多选时未带回多个值------\n        }\n        if (this.triggerChange) {\n          //v-dec时即triggerChange为true时 将整个对象给form页面 让他自己setFieldsValue\n          this.$emit('callback', res)\n        } else {\n          //v-model时 需要传一个参数field 表示当前这个字段 从而根据这个字段的顺序找到原始值\n          // this.$emit(\"input\",row[orgFieldsArr[destFieldsArr.indexOf(this.field)]])\n          this.$emit('input', this.showText, res)\n        }\n      }\n    }\n  }\n</script>\n<style scoped>\n  .components-input-demo-presuffix .anticon-close-circle {\n    cursor: pointer;\n    color: #ccc;\n    transition: color 0.3s;\n    font-size: 12px;\n  }\n\n  .components-input-demo-presuffix .anticon-close-circle:hover {\n    color: #f5222d;\n  }\n\n  .components-input-demo-presuffix .anticon-close-circle:active {\n    color: #666;\n  }\n</style>"]}]}