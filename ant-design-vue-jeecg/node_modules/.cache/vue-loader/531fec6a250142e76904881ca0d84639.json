{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectMultiUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\JSelectMultiUser.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JDate from '@comp/jeecg/JDate'\nimport JSelectBizComponent from './JSelectBizComponent'\n\nexport default {\n  name: 'JSelectMultiUser',\n  components: {JDate, JSelectBizComponent},\n  props: {\n    value: null, // any type\n    queryConfig: {\n      type: Array,\n      default: () => []\n    },\n  },\n  data() {\n    return {\n      url: { list: '/sys/user/list' },\n      columns: [\n        { title: '姓名', align: 'center', width: '25%', widthRight: '70%', dataIndex: 'realname' },\n        { title: '账号', align: 'center', width: '25%', dataIndex: 'username' },\n        { title: '电话', align: 'center', width: '20%', dataIndex: 'phone' },\n        { title: '出生日期', align: 'center', width: '20%', dataIndex: 'birthday' }\n      ],\n      // 定义在这里的参数都是可以在外部传递覆盖的，可以更灵活的定制化使用的组件\n      default: {\n        name: '用户',\n        width: 1200,\n        displayKey: 'realname',\n        returnKeys: ['id', 'username'],\n        queryParamText: '账号',\n      },\n      // 多条件查询配置\n      queryConfigDefault: [\n        {\n          key: 'sex',\n          label: '性别',\n          // 如果包含 dictCode，那么就会显示成下拉框\n          dictCode: 'sex',\n        },\n        {\n          key: 'birthday',\n          label: '生日',\n          placeholder: '请选择出生日期',\n          // 如果想要使用局部注册的组件，就必须要使用箭头函数\n          customRender: ({key, queryParam, options}) => {\n            return <j-date {...options} vModel={queryParam[key]} style=\"width:180px;\"/>\n          },\n        },\n      ],\n    }\n  },\n  computed: {\n    attrs() {\n      return Object.assign(this.default, this.$attrs, {\n        queryConfig: this.queryConfigDefault.concat(this.queryConfig)\n      })\n    }\n  }\n}\n",{"version":3,"sources":["JSelectMultiUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JSelectMultiUser.vue","sourceRoot":"src/components/jeecgbiz","sourcesContent":["<template>\n  <!-- 定义在这里的参数都是不可在外部覆盖的，防止出现问题 -->\n  <j-select-biz-component\n    :value=\"value\"\n    :ellipsisLength=\"25\"\n    :listUrl=\"url.list\"\n    :columns=\"columns\"\n    v-on=\"$listeners\"\n    v-bind=\"attrs\"\n  />\n</template>\n\n<script>\n  import JDate from '@comp/jeecg/JDate'\n  import JSelectBizComponent from './JSelectBizComponent'\n\n  export default {\n    name: 'JSelectMultiUser',\n    components: {JDate, JSelectBizComponent},\n    props: {\n      value: null, // any type\n      queryConfig: {\n        type: Array,\n        default: () => []\n      },\n    },\n    data() {\n      return {\n        url: { list: '/sys/user/list' },\n        columns: [\n          { title: '姓名', align: 'center', width: '25%', widthRight: '70%', dataIndex: 'realname' },\n          { title: '账号', align: 'center', width: '25%', dataIndex: 'username' },\n          { title: '电话', align: 'center', width: '20%', dataIndex: 'phone' },\n          { title: '出生日期', align: 'center', width: '20%', dataIndex: 'birthday' }\n        ],\n        // 定义在这里的参数都是可以在外部传递覆盖的，可以更灵活的定制化使用的组件\n        default: {\n          name: '用户',\n          width: 1200,\n          displayKey: 'realname',\n          returnKeys: ['id', 'username'],\n          queryParamText: '账号',\n        },\n        // 多条件查询配置\n        queryConfigDefault: [\n          {\n            key: 'sex',\n            label: '性别',\n            // 如果包含 dictCode，那么就会显示成下拉框\n            dictCode: 'sex',\n          },\n          {\n            key: 'birthday',\n            label: '生日',\n            placeholder: '请选择出生日期',\n            // 如果想要使用局部注册的组件，就必须要使用箭头函数\n            customRender: ({key, queryParam, options}) => {\n              return <j-date {...options} vModel={queryParam[key]} style=\"width:180px;\"/>\n            },\n          },\n        ],\n      }\n    },\n    computed: {\n      attrs() {\n        return Object.assign(this.default, this.$attrs, {\n          queryConfig: this.queryConfigDefault.concat(this.queryConfig)\n        })\n      }\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped></style>"]}]}