{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\GateWayRouteModal.vue?vue&type=style&index=0&id=594fb2ba&lang=less&scoped=true&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\GateWayRouteModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1620887942039},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1621061372054},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1617935823297},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\less-loader\\dist\\cjs.js","mtime":1621061389135},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.drawer-bootom-button {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  border-top: 1px solid #e8e8e8;\n  padding: 10px 16px;\n  text-align: right;\n  left: 0;\n  background: #fff;\n  border-radius: 0 0 2px 2px;\n}\n",{"version":3,"sources":["GateWayRouteModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GateWayRouteModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=\"45%\"\n    placement=\"right\"\n    v-if=\"visible\"\n    :closable=\"true\"\n    @close=\"handleCancel\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n    <a-form-model ref=\"form\" :layout=\"layout\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" :model=\"router\">\n      <a-form-model-item label=\"路由ID\">\n        <a-input v-model=\"router.routerId\" placeholder=\"路由唯一ID\"/>\n      </a-form-model-item>\n      <a-form-model-item label=\"路由名称\">\n        <a-input v-model=\"router.name\" placeholder=\"路由名称\"/>\n      </a-form-model-item>\n      <a-form-model-item label=\"路由URI\">\n        <a-input v-model=\"router.uri\" placeholder=\"路由URL\"/>\n      </a-form-model-item>\n      <a-form-model-item label=\"路由状态\" prop=\"status\">\n        <a-switch default-checked v-model=\"router.status\"/>\n      </a-form-model-item>\n\n      <a-form-model-item prop=\"predicates\" label=\"路由条件\">\n        <div v-for=\"(item,index) in router.predicates\">\n          <a-divider>{{item.name}}\n            <a-icon type=\"delete\" size=\"22\" @click=\"removePredicate(router,index)\"/>\n          </a-divider>\n          <div>\n            <template v-for=\"(tag, index) in item.args\">\n              <a-input v-if=\"index==currentTagIndex\" ref=\"input\" type=\"text\" size=\"small\"\n                       :style=\"{ width: '190px' }\"\n                       :value=\"tag\"\n                       @change=\"handleInputChange\" @blur=\"handleInputEditConfirm(item,tag,index)\"\n                       @keyup.enter=\"handleInputEditConfirm(item,tag,index)\"/>\n              <a-tag v-else :key=\"tag\" :closable=\"true\" @close=\"() => removeTag(item,tag)\" @click=\"editTag(tag,index)\">\n                {{ tag }}\n              </a-tag>\n            </template>\n            <a-input v-if=\"inputVisible&&index==currentNameIndex\" ref=\"input\" type=\"text\" size=\"small\"\n                     :style=\"{ width: '100px' }\"\n                     :value=\"inputValue\"\n                     @change=\"handleInputChange\" @blur=\"handleInputConfirm(item)\"\n                     @keyup.enter=\"handleInputConfirm(item)\"/>\n            <a-tag v-else style=\"background: #fff; borderStyle: dashed;\" @click=\"showInput(item,index)\">\n              <a-icon type=\"plus\"/>\n              新建{{item.name}}\n            </a-tag>\n          </div>\n        </div>\n        <p class=\"btn\" style=\"padding-top: 10px\">\n          <a-dropdown>\n            <a-menu slot=\"overlay\" @click=\"predicatesHandleMenuClick\">\n              <a-menu-item :key=\"item\" v-for=\"item in tagArray\">{{item}}</a-menu-item>\n            </a-menu>\n            <a-button type=\"dashed\" style=\"margin-left: 8px;width:100%\"> 添加路由条件\n              <a-icon type=\"down\"/>\n            </a-button>\n          </a-dropdown>\n        </p>\n      </a-form-model-item>\n      <a-form-model-item prop=\"predicates\" label=\"过滤器\">\n        <div v-for=\"(item,index) in router.filters\">\n          <a-divider>{{item.name}}\n            <a-icon type=\"delete\" size=\"22\" @click=\"removeFilter(router,index)\"/>\n          </a-divider>\n          <div v-for=\"(tag, index) in item.args\" :key=\"tag.key\">\n            <a-input v-model=\"tag.key\" placeholder=\"参数键\" style=\"width: 45%; margin-right: 8px\"/>\n            <a-input v-model=\"tag.value\" placeholder=\"参数值\" style=\"width: 40%; margin-right: 8px\"/>\n            <a-icon class=\"dynamic-delete-button\" type=\"minus-circle-o\" @click=\"removeFilterParams(item,index)\"/>\n          </div>\n          <a-button type=\"dashed\" style=\"margin-left:28%;width: 30%\" size=\"small\" @click=\"addFilterParams(item)\">\n            <a-icon type=\"plus\"/>\n            添加参数\n          </a-button>\n        </div>\n        <p class=\"btn\" style=\"padding-top: 10px\">\n          <a-dropdown>\n            <a-menu slot=\"overlay\" @click=\"filterHandleMenuClick\">\n              <a-menu-item :key=\"item.key\" :name=\"item.name\" v-for=\"item in filterArray\">{{item.name}}</a-menu-item>\n            </a-menu>\n            <a-button type=\"dashed\" style=\"margin-left: 8px;width:100%\"> 添加过滤器\n              <a-icon type=\"down\"/>\n            </a-button>\n          </a-dropdown>\n        </p>\n      </a-form-model-item>\n      <a-row :style=\"{textAlign:'right'}\" class=\"drawer-bootom-button\">\n        <a-button :style=\"{marginRight: '8px'}\" @click=\"handleCancel\">\n          关闭\n        </a-button>\n        <a-button @click=\"handleSubmit\" type=\"primary\">确定</a-button>\n      </a-row>\n    </a-form-model>\n\n  </a-drawer>\n\n</template>\n<script>\n\n  import { postAction } from '@/api/manage'\n\n  export default {\n    name: 'GateWayRouteModal',\n    components: {},\n    data() {\n      return {\n        layout: 'horizontal',\n        labelCol: { span: 3 },\n        wrapperCol: { span: 14 },\n        currentNameIndex: 0,\n        currentTagIndex:-1,\n        predicates: {},\n        filterArray: [{ key: 0, name: '熔断器' }, { key: 1, name: '限流过滤器' }],\n        tagArray: ['Path', 'Host', 'Cookie', 'Header', 'Method', 'Query', 'After', 'Before', 'Between', 'RemoteAddr'],\n        inputVisible: false,\n        inputValue: '',\n        url: {\n          update: '/sys/gatewayRoute/updateAll',\n          clear: '/sys/gatewayRoute/clearRedis'\n        },\n        router: this.getRouter(),\n        title: '路由编辑',\n        visible: false,\n        loading: false\n      }\n    },\n    methods: {\n      getRouter() {\n        return {\n          routerId: '',\n          name: '',\n          uri: '',\n          predicates: [],\n          filters: []\n        }\n      },\n      show(router) {\n        if (router) {\n          router.status=Boolean(router.status)\n          this.router = router\n        } else {\n          this.router = this.getRouter()\n          this.inputValue=''\n        }\n        this.visible = true\n        this.currentTagIndex=-1\n        this.currentNameIndex=-1\n      },\n      close() {\n        this.reset()\n        this.$emit('close')\n        this.$refs['form'].resetFields()\n        this.visible = false\n      },\n      //删除路由条件配置项\n      removeTag(item, removedTag) {\n        const tags = item.args.filter(tag => tag !== removedTag)\n        item.args = tags\n      },\n      //添加路由选项\n      predicatesHandleMenuClick(e) {\n        this.router.predicates.push({\n          args: [],\n          name: e.key\n        })\n      },\n      editTag(tag,index){\n        this.currentTagIndex=index\n      },\n      //显示输入框\n      showInput(item, index) {\n        this.inputVisible = true\n        this.currentNameIndex = index\n      },\n      //路由选项输入框失去焦点事件\n      handleInputChange(e) {\n        this.inputValue = e.target.value\n      },\n      //删除路由条件\n      removePredicate(item, index) {\n        item.predicates.splice(index, 1)\n      },\n      //删除过滤器参数\n      removeFilterParams(item, index) {\n        item.args.splice(index, 1)\n      },\n      //删除过滤器\n      removeFilter(item, index) {\n        item.filters.splice(index, 1)\n      },\n      //添加过滤器参数\n      addFilterParams(item) {\n        item.args.push({\n          key: 'key' + item.args.length + 1,\n          value: ''\n        })\n      },\n      //过滤器添加事件\n      filterHandleMenuClick(e) {\n        if (e.key == 0) {\n          this.router.filters.push({\n            args: [  {\n              key: 'name',\n              value: 'default'\n            },{\n              key: 'fallbackUri',\n              value: 'forward:/fallback'\n            }],\n            name:'Hystrix',\n            title: this.filterArray[0].name\n          })\n        }\n        if (e.key == 1) {\n          this.router.filters.push({\n            args: [ {\n              key: 'key-resolver',\n              value: '#{@ipKeyResolver}'\n            }, {\n              key: 'redis-rate-limiter.replenishRate',\n              value: 20\n            }, {\n              key: 'redis-rate-limiter.burstCapacity',\n              value: 20\n            }],\n            name:\"RequestRateLimiter\",\n            title: this.filterArray[1].name\n          })\n        }\n      },\n      //输入框确认\n      handleInputConfirm(item) {\n        const inputValue = this.inputValue\n        let tags = item.args\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n          item.args = [...tags, inputValue]\n        }\n        console.log(tags)\n        Object.assign(this, {\n          tags,\n          inputVisible: false,\n          inputValue: ''\n        })\n        this.currentTagIndex=-1\n      },\n      //输入框确认\n      handleInputEditConfirm(item,tag,index) {\n        if(this.inputValue)\n        {\n          const inputValue = this.inputValue\n          item.args[index]=inputValue\n        }\n        this.currentTagIndex=-1\n\n      },\n      reset() {\n        this.expandedKeysss = []\n        this.checkedKeys = []\n        this.defaultCheckedKeys = []\n        this.loading = false\n      },\n      //关闭弹窗\n      handleCancel() {\n        this.close()\n      },\n      //提交路由\n      handleSubmit() {\n        let { predicates, filters, ...other } = this.router\n        let router = other\n        router.predicates = JSON.stringify(this.router.predicates)\n        router.filters = JSON.stringify(this.router.filters)\n        postAction(this.url.update, {\n          router\n        }).then(res => {\n          if (res.success) {\n            this.close()\n            this.$emit('ok')\n            this.$message.success(res.message)\n          } else {\n            this.$message.error(res.message)\n          }\n        })\n\n      }\n    }\n  }\n\n</script>\n<style lang=\"less\" scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n</style>"]}]}