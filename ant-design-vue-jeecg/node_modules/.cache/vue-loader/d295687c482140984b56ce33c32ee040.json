{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeSelectCell.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\nimport { JVXETypes } from '@comp/jeecg/JVxeTable/index'\n\nexport default {\n  name: 'JVxeSelectCell',\n  mixins: [JVxeCellMixins],\n  computed: {\n    selectProps() {\n      let props = {...this.cellProps}\n      // 判断select是否允许输入\n      let {allowSearch, allowInput} = this.originColumn\n      if (allowInput === true || allowSearch === true) {\n        props['showSearch'] = true\n      }\n      return props\n    },\n  },\n  created() {\n    let multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi]\n    let search = [JVXETypes.selectSearch, JVXETypes.sel_search]\n    if (multiple.includes(this.$type)) {\n      // 处理多选\n      let props = this.originColumn.props || {}\n      props['mode'] = 'multiple'\n      props['maxTagCount'] = 1\n      this.$set(this.originColumn, 'props', props)\n    } else if (search.includes(this.$type)) {\n      // 处理搜索\n      this.$set(this.originColumn, 'allowSearch', true)\n    }\n  },\n  methods: {\n\n    /** 处理blur失去焦点事件 */\n    handleBlur(value) {\n      let {allowInput, options} = this.originColumn\n\n      if (allowInput === true) {\n        // 删除无用的因搜索（用户输入）而创建的项\n        if (typeof value === 'string') {\n          let indexes = []\n          options.forEach((option, index) => {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              delete option.searchAdd\n            } else if (option.searchAdd === true) {\n              indexes.push(index)\n            }\n          })\n          // 翻转删除数组中的项\n          for (let index of indexes.reverse()) {\n            options.splice(index, 1)\n          }\n        }\n      }\n\n      this.handleBlurCommon(value)\n    },\n\n    /** 用于搜索下拉框中的内容 */\n    handleSelectFilterOption(input, option) {\n      let {allowSearch, allowInput} = this.originColumn\n      if (allowSearch === true || allowInput === true) {\n        //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n      }\n      return true\n    },\n\n    /** select 搜索时的事件，用于动态添加options */\n    handleSearchSelect(value) {\n      let {allowSearch, allowInput, options} = this.originColumn\n\n      if (allowSearch !== true && allowInput === true) {\n        // 是否找到了对应的项，找不到则添加这一项\n        let flag = false\n        for (let option of options) {\n          if (option.value.toLocaleString() === value.toLocaleString()) {\n            flag = true\n            break\n          }\n        }\n        // !!value ：不添加空值\n        if (!flag && !!value) {\n          // searchAdd 是否是通过搜索添加的\n          options.push({title: value, value: value, searchAdd: true})\n        }\n\n      }\n    },\n\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    aopEvents: {\n      editActived: event => dispatchEvent(event, 'ant-select'),\n    },\n    translate: {enabled: true},\n    getValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(',')\n      } else {\n        return value\n      }\n    },\n    setValue(value) {\n      let {column: {own: col}, params: {$table}} = this\n      // 判断是否是多选\n      if ((col.props || {})['mode'] === 'multiple') {\n        $table.$set(col.props, 'maxTagCount', 1)\n      }\n      if (value != null && value !== '') {\n        if (typeof value === 'string') {\n          return value === '' ? [] : value.split(',')\n        }\n        return value\n      } else {\n        return undefined\n      }\n    }\n  }\n}\n",{"version":3,"sources":["JVxeSelectCell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"JVxeSelectCell.vue","sourceRoot":"src/components/jeecg/JVxeTable/components/cells","sourcesContent":["<template>\n  <a-select\n    ref=\"select\"\n    :value=\"innerValue\"\n    allowClear\n    :filterOption=\"handleSelectFilterOption\"\n    v-bind=\"selectProps\"\n    style=\"width: 100%;\"\n    @blur=\"handleBlur\"\n    @change=\"handleChangeCommon\"\n    @search=\"handleSearchSelect\"\n  >\n\n    <template v-for=\"option of originColumn.options\">\n      <a-select-option :key=\"option.value\" :value=\"option.value\" :disabled=\"option.disabled\">\n        <span>{{option.text || option.label || option.title|| option.value}}</span>\n      </a-select-option>\n    </template>\n\n  </a-select>\n</template>\n\n<script>\n  import JVxeCellMixins, { dispatchEvent } from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n  import { JVXETypes } from '@comp/jeecg/JVxeTable/index'\n\n  export default {\n    name: 'JVxeSelectCell',\n    mixins: [JVxeCellMixins],\n    computed: {\n      selectProps() {\n        let props = {...this.cellProps}\n        // 判断select是否允许输入\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowInput === true || allowSearch === true) {\n          props['showSearch'] = true\n        }\n        return props\n      },\n    },\n    created() {\n      let multiple = [JVXETypes.selectMultiple, JVXETypes.list_multi]\n      let search = [JVXETypes.selectSearch, JVXETypes.sel_search]\n      if (multiple.includes(this.$type)) {\n        // 处理多选\n        let props = this.originColumn.props || {}\n        props['mode'] = 'multiple'\n        props['maxTagCount'] = 1\n        this.$set(this.originColumn, 'props', props)\n      } else if (search.includes(this.$type)) {\n        // 处理搜索\n        this.$set(this.originColumn, 'allowSearch', true)\n      }\n    },\n    methods: {\n\n      /** 处理blur失去焦点事件 */\n      handleBlur(value) {\n        let {allowInput, options} = this.originColumn\n\n        if (allowInput === true) {\n          // 删除无用的因搜索（用户输入）而创建的项\n          if (typeof value === 'string') {\n            let indexes = []\n            options.forEach((option, index) => {\n              if (option.value.toLocaleString() === value.toLocaleString()) {\n                delete option.searchAdd\n              } else if (option.searchAdd === true) {\n                indexes.push(index)\n              }\n            })\n            // 翻转删除数组中的项\n            for (let index of indexes.reverse()) {\n              options.splice(index, 1)\n            }\n          }\n        }\n\n        this.handleBlurCommon(value)\n      },\n\n      /** 用于搜索下拉框中的内容 */\n      handleSelectFilterOption(input, option) {\n        let {allowSearch, allowInput} = this.originColumn\n        if (allowSearch === true || allowInput === true) {\n          //update-begin-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n          return option.componentOptions.children[0].children[0].text.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          //update-end-author:taoyan date:20200820 for:【专项任务】大连项目反馈行编辑问题处理 下拉框搜索\n        }\n        return true\n      },\n\n      /** select 搜索时的事件，用于动态添加options */\n      handleSearchSelect(value) {\n        let {allowSearch, allowInput, options} = this.originColumn\n\n        if (allowSearch !== true && allowInput === true) {\n          // 是否找到了对应的项，找不到则添加这一项\n          let flag = false\n          for (let option of options) {\n            if (option.value.toLocaleString() === value.toLocaleString()) {\n              flag = true\n              break\n            }\n          }\n          // !!value ：不添加空值\n          if (!flag && !!value) {\n            // searchAdd 是否是通过搜索添加的\n            options.push({title: value, value: value, searchAdd: true})\n          }\n\n        }\n      },\n\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      aopEvents: {\n        editActived: event => dispatchEvent(event, 'ant-select'),\n      },\n      translate: {enabled: true},\n      getValue(value) {\n        if (Array.isArray(value)) {\n          return value.join(',')\n        } else {\n          return value\n        }\n      },\n      setValue(value) {\n        let {column: {own: col}, params: {$table}} = this\n        // 判断是否是多选\n        if ((col.props || {})['mode'] === 'multiple') {\n          $table.$set(col.props, 'maxTagCount', 1)\n        }\n        if (value != null && value !== '') {\n          if (typeof value === 'string') {\n            return value === '' ? [] : value.split(',')\n          }\n          return value\n        } else {\n          return undefined\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}