{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\activiti\\applyHome.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\activiti\\applyHome.vue","mtime":1621944120992},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { activitiMixin } from '@/views/activiti/mixins/activitiMixin'\nimport JEllipsis from '@/components/jeecg/JEllipsis'\nimport JTreeSelect from '@/components/jeecg/JTreeSelect'\nimport {initDictOptions, filterDictText} from '@/components/dict/JDictSelectUtil'\nimport historicDetail from '@/views/activiti/historicDetail'\nexport default {\n  name: \"applyHome\",\n  mixins:[activitiMixin],\n  components: {\n    JEllipsis\n    ,JTreeSelect\n    ,historicDetail\n  },\n  data () {\n    return {\n      description: '所有',\n      dictOptions:[],\n      url: {\n        getProcessDataList: \"/activiti_process/listData\",\n        getFirstNode:'/actProcessIns/getFirstNode',\n        applyBusiness:'/actBusiness/apply',\n      },\n      // 查询条件\n      queryParam: {\n        createTimeRange:[],\n        keyWord:'',\n      },\n      // 表头\n      labelCol: {\n        xs: { span: 4 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 20 },\n        sm: { span: 20 },\n      },\n      processModalVisible: null,\n      activeKeyAll: [],\n      activeKey: [],\n      processDataMap: {},\n      searchProcessKey: null,\n      addApplyLoading: false,\n      lcModa: {\n        title:'',\n        disabled:false,\n        visible:false,\n        formComponent : null,\n        isNew : false\n      },\n    }\n  },\n  computed:{\n  },\n  mounted() {\n    this.initDictConfig()\n    this.getProcessList()\n  },\n  methods: {\n\n    initDictConfig() {\n      //初始化字典 - 流程分类\n      initDictOptions('bpm_process_type').then((res) => {\n        if (res.success) {\n          this.dictOptions = res.result;\n        }\n      });\n    },\n    filterDictText(dictOptions, text) {\n      if (dictOptions instanceof Array) {\n        for (let dictItem of dictOptions) {\n          if (text === dictItem.value) {\n            return dictItem.text\n          }\n        }\n      }\n      return text||text=='null'?'':text\n    },\n    /*加载流程列表*/\n    getProcessList() {\n      this.addApplyLoading = true;\n      this.getAction(this.url.getProcessDataList,{status:1,roles:true}).then(res => {\n        this.activeKeyAll = [];\n        if (res.success) {\n          var result = res.result||[];\n          if (result.length>0){\n            let searchProcessKey = this.searchProcessKey;\n            if (searchProcessKey){ //过滤条件\n              result = _.filter(result, function(o) { return o.name.indexOf(searchProcessKey)>-1; });\n            }\n            this.processDataMap = _.groupBy(result,'categoryId');\n            for (const categoryId in this.processDataMap) {\n              this.activeKeyAll.push(categoryId)\n            }\n            this.activeKey = this.activeKeyAll;\n          }\n          this.processModalVisible = true;\n        }else {\n          this.$message.warning(res.message)\n        }\n      }).finally(()=>this.addApplyLoading = false);\n    },\n    onSearchProcess(value) {\n      this.searchProcessKey = value;\n      this.getProcessList()\n    },\n    chooseProcess(v) {\n      if (!v.routeName) {\n        this.$message.warning(\n          \"该流程信息未配置表单，请联系开发人员！\"\n        );\n        return;\n      }\n      this.lcModa.formComponent = this.getFormComponent(v.routeName).component;\n      this.lcModa.title = '发起流程：'+v.name;\n      this.lcModa.isNew = true;\n      this.lcModa.processData = v;\n      this.lcModa.visible = true;\n      console.log(\"发起\",v)\n    },\n    /*提交成功申请后*/\n    afterSub(formData){\n        this.lcModa.visible = false;\n        this.$message(\"请前往我的申请列表提交审批！\")\n    },\n    /*前往我的申请页面*/\n    handleToApplyList() {\n      this.$router.push({path:'/activiti/applyList'})\n    }\n  }\n}\n",{"version":3,"sources":["applyHome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"applyHome.vue","sourceRoot":"src/views/activiti","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <!--流程申请选择-->\r\n    <a-input-search style=\"margin-bottom: 10px;margin-right:10px;width: 200px\" v-model=\"searchProcessKey\"\r\n                    placeholder=\"输入流程名称\" @search=\"onSearchProcess\" />\r\n    <a-button @click=\"onSearchProcess(searchProcessKey)\" type=\"primary\">查询</a-button>\r\n    <a-button @click=\"onSearchProcess('')\">重置</a-button>\r\n    <a-button @click=\"handleToApplyList\" type=\"primary\" style=\"float: right;\">前往我的申请列表</a-button>\r\n      <a-empty description=\"无流程可供选择\" v-if=\"activeKeyAll.length==0\" />\r\n      <div v-else>\r\n        <a-collapse v-model=\"activeKey\">\r\n          <a-collapse-panel v-for=\"(value, index)  in activeKeyAll\" :header=\"filterDictText(dictOptions,value)||'未分类'\" :key=\"value\">\r\n            <a-list :grid=\"{ gutter: 10,column:4}\" :dataSource=\"processDataMap[value]\">\r\n              <a-list-item slot=\"renderItem\" slot-scope=\"item\">\r\n                <a-card>\r\n                  <div slot=\"title\">\r\n                    <a-row>\r\n                      <a-col span=\"12\" :title=\"item.name\">{{item.name}} </a-col>\r\n                      <a-col span=\"12\" style=\"text-align: right;\">\r\n                        <a href=\"javascript:void (0)\" @click=\"chooseProcess(item)\">发起申请</a>\r\n                      </a-col>\r\n                    </a-row>\r\n                  </div>\r\n                  <b>版本：</b>v.{{item.version}}\r\n                  <br/>\r\n                  <b>说明：</b>{{item.description}}\r\n                </a-card>\r\n              </a-list-item>\r\n            </a-list>\r\n          </a-collapse-panel>\r\n        </a-collapse>\r\n      </div>\r\n    <!--流程表单-->\r\n    <a-modal :destroyOnClose=\"true\" :title=\"lcModa.title\" v-model=\"lcModa.visible\" :footer=\"null\" :maskClosable=\"false\" width=\"80%\">\r\n      <component :disabled=\"lcModa.disabled\" v-if=\"lcModa.visible\" :is=\"lcModa.formComponent\"\r\n                 :processData=\"lcModa.processData\" :isNew = \"lcModa.isNew\"\r\n                 @afterSubmit=\"afterSub\" @close=\"lcModa.visible=false,lcModa.disabled = false\"></component>\r\n    </a-modal>\r\n  </a-card>\r\n\r\n</template>\r\n\r\n<script>\r\n  import { activitiMixin } from '@/views/activiti/mixins/activitiMixin'\r\n  import JEllipsis from '@/components/jeecg/JEllipsis'\r\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\r\n  import {initDictOptions, filterDictText} from '@/components/dict/JDictSelectUtil'\r\n  import historicDetail from '@/views/activiti/historicDetail'\r\n  export default {\r\n    name: \"applyHome\",\r\n    mixins:[activitiMixin],\r\n    components: {\r\n      JEllipsis\r\n      ,JTreeSelect\r\n      ,historicDetail\r\n    },\r\n    data () {\r\n      return {\r\n        description: '所有',\r\n        dictOptions:[],\r\n        url: {\r\n          getProcessDataList: \"/activiti_process/listData\",\r\n          getFirstNode:'/actProcessIns/getFirstNode',\r\n          applyBusiness:'/actBusiness/apply',\r\n        },\r\n        // 查询条件\r\n        queryParam: {\r\n          createTimeRange:[],\r\n          keyWord:'',\r\n        },\r\n        // 表头\r\n        labelCol: {\r\n          xs: { span: 4 },\r\n          sm: { span: 4 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 20 },\r\n          sm: { span: 20 },\r\n        },\r\n        processModalVisible: null,\r\n        activeKeyAll: [],\r\n        activeKey: [],\r\n        processDataMap: {},\r\n        searchProcessKey: null,\r\n        addApplyLoading: false,\r\n        lcModa: {\r\n          title:'',\r\n          disabled:false,\r\n          visible:false,\r\n          formComponent : null,\r\n          isNew : false\r\n        },\r\n      }\r\n    },\r\n    computed:{\r\n    },\r\n    mounted() {\r\n      this.initDictConfig()\r\n      this.getProcessList()\r\n    },\r\n    methods: {\r\n\r\n      initDictConfig() {\r\n        //初始化字典 - 流程分类\r\n        initDictOptions('bpm_process_type').then((res) => {\r\n          if (res.success) {\r\n            this.dictOptions = res.result;\r\n          }\r\n        });\r\n      },\r\n      filterDictText(dictOptions, text) {\r\n        if (dictOptions instanceof Array) {\r\n          for (let dictItem of dictOptions) {\r\n            if (text === dictItem.value) {\r\n              return dictItem.text\r\n            }\r\n          }\r\n        }\r\n        return text||text=='null'?'':text\r\n      },\r\n      /*加载流程列表*/\r\n      getProcessList() {\r\n        this.addApplyLoading = true;\r\n        this.getAction(this.url.getProcessDataList,{status:1,roles:true}).then(res => {\r\n          this.activeKeyAll = [];\r\n          if (res.success) {\r\n            var result = res.result||[];\r\n            if (result.length>0){\r\n              let searchProcessKey = this.searchProcessKey;\r\n              if (searchProcessKey){ //过滤条件\r\n                result = _.filter(result, function(o) { return o.name.indexOf(searchProcessKey)>-1; });\r\n              }\r\n              this.processDataMap = _.groupBy(result,'categoryId');\r\n              for (const categoryId in this.processDataMap) {\r\n                this.activeKeyAll.push(categoryId)\r\n              }\r\n              this.activeKey = this.activeKeyAll;\r\n            }\r\n            this.processModalVisible = true;\r\n          }else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        }).finally(()=>this.addApplyLoading = false);\r\n      },\r\n      onSearchProcess(value) {\r\n        this.searchProcessKey = value;\r\n        this.getProcessList()\r\n      },\r\n      chooseProcess(v) {\r\n        if (!v.routeName) {\r\n          this.$message.warning(\r\n            \"该流程信息未配置表单，请联系开发人员！\"\r\n          );\r\n          return;\r\n        }\r\n        this.lcModa.formComponent = this.getFormComponent(v.routeName).component;\r\n        this.lcModa.title = '发起流程：'+v.name;\r\n        this.lcModa.isNew = true;\r\n        this.lcModa.processData = v;\r\n        this.lcModa.visible = true;\r\n        console.log(\"发起\",v)\r\n      },\r\n      /*提交成功申请后*/\r\n      afterSub(formData){\r\n          this.lcModa.visible = false;\r\n          this.$message(\"请前往我的申请列表提交审批！\")\r\n      },\r\n      /*前往我的申请页面*/\r\n      handleToApplyList() {\r\n        this.$router.push({path:'/activiti/applyList'})\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  @import '~@assets/less/common.less';\r\n</style>"]}]}