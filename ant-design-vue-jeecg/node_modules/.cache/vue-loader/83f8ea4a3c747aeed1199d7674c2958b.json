{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleAuthModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DeptRoleAuthModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {queryTreeListForDeptRole,queryDeptRolePermission,saveDeptRolePermission} from '@/api/api'\nimport RoleDataruleModal from './RoleDataruleModal.vue'\nimport DeptRoleDataruleModal from './DeptRoleDataruleModal'\n\nexport default {\n  name: \"DeptRoleAuthModal\",\n  components:{\n    DeptRoleDataruleModal,\n    RoleDataruleModal\n  },\n  data(){\n    return {\n      departId:\"\",\n      roleId:\"\",\n      treeData: [],\n      defaultCheckedKeys:[],\n      checkedKeys:[],\n      halfCheckedKeys:[],\n      expandedKeysss:[],\n      allTreeKeys:[],\n      autoExpandParent: true,\n      checkStrictly: true,\n      title:\"部门角色权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys:[]\n    }\n  },\n  methods: {\n    switchCheckStrictly (v) {\n      if(v==1){\n        this.checkStrictly = false\n      }else if(v==2){\n        this.checkStrictly = true\n      }\n    },\n    onTreeNodeSelect(id){\n      if(id && id.length>0){\n        this.selectedKeys = id\n      }\n      this.$refs.datarule.show(this.selectedKeys[0],this.departId,this.roleId)\n    },\n    onCheck (o) {\n      if(this.checkStrictly){\n        this.checkedKeys = o.checked;\n      }else{\n        this.checkedKeys = o\n      }\n    },\n    show(roleId,departId){\n      this.departId = departId\n      this.roleId=roleId\n      this.visible = true;\n    },\n    close () {\n      this.reset()\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand(expandedKeys){\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false\n    },\n    reset () {\n      this.expandedKeysss = []\n      this.checkedKeys = []\n      this.defaultCheckedKeys = []\n      this.loading = false\n    },\n    expandAll () {\n      this.expandedKeysss = this.allTreeKeys\n    },\n    closeAll () {\n      this.expandedKeysss = []\n    },\n    checkALL () {\n      this.checkedKeys = this.allTreeKeys\n    },\n    cancelCheckALL () {\n      this.checkedKeys = []\n    },\n    handleCancel () {\n      this.close()\n    },\n    handleSubmit(exit) {\n      let that = this;\n      let params =  {\n        roleId:that.roleId,\n        permissionIds:that.checkedKeys.join(\",\"),\n        lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n      };\n      that.loading = true;\n      console.log(\"请求参数：\",params);\n      saveDeptRolePermission(params).then((res)=>{\n        if(res.success){\n          that.$message.success(res.message);\n          that.loading = false;\n          if (exit) {\n            that.close()\n          }\n        }else {\n          that.$message.error(res.message);\n          that.loading = false;\n          if (exit) {\n            that.close()\n          }\n        }\n        this.loadData();\n      })\n    },\n    convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n      for(const {key, isLeaf, children} of treeList) {\n        keyLeafPair.push({key, isLeaf})\n        if(children && children.length > 0) {\n          this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n        }\n      }\n      return keyLeafPair;\n    },\n    loadData(){\n      queryTreeListForDeptRole({departId:this.departId}).then((res) => {\n        this.treeData = res.result.treeList\n        this.allTreeKeys = res.result.ids\n        queryDeptRolePermission({roleId:this.roleId}).then((res)=>{\n          this.checkedKeys = [...res.result];\n          this.defaultCheckedKeys = [...res.result];\n          this.expandedKeysss = this.allTreeKeys;\n        })\n      })\n    }\n  },\n  watch: {\n    visible () {\n      if (this.visible ) {\n        this.loadData();\n      }\n    }\n  }\n}\n\n",{"version":3,"sources":["DeptRoleAuthModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DeptRoleAuthModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-drawer\n    :title=\"title\"\n    :maskClosable=\"true\"\n    width=650\n    placement=\"right\"\n    :closable=\"true\"\n    @close=\"close\"\n    :visible=\"visible\"\n    style=\"overflow: auto;padding-bottom: 53px;\">\n\n    <a-form>\n      <a-form-item label='所拥有的部门权限'>\n\n        <a-tree\n          v-if=\"treeData.length>0\"\n          checkable\n          @check=\"onCheck\"\n          :checkedKeys=\"checkedKeys\"\n          :treeData=\"treeData\"\n          @expand=\"onExpand\"\n          @select=\"onTreeNodeSelect\"\n          :selectedKeys=\"selectedKeys\"\n          :expandedKeys=\"expandedKeysss\"\n          :checkStrictly=\"checkStrictly\">\n          <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\n            {{ slotTitle }}<a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\n          </span>\n        </a-tree>\n        <div v-else><h3>无可配置部门权限!</h3></div>\n      </a-form-item>\n    </a-form>\n\n    <div class=\"drawer-bootom-button\">\n      <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\n        <a-menu slot=\"overlay\">\n          <a-menu-item key=\"1\" @click=\"switchCheckStrictly(1)\">父子关联</a-menu-item>\n          <a-menu-item key=\"2\" @click=\"switchCheckStrictly(2)\">取消关联</a-menu-item>\n          <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\n          <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\n          <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\n          <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\n        </a-menu>\n        <a-button>\n          树操作 <a-icon type=\"up\" />\n        </a-button>\n      </a-dropdown>\n      <a-popconfirm title=\"确定放弃编辑？\" @confirm=\"close\" okText=\"确定\" cancelText=\"取消\">\n        <a-button style=\"margin-right: .8rem\">取消</a-button>\n      </a-popconfirm>\n      <a-button @click=\"handleSubmit(false)\" type=\"primary\" :loading=\"loading\" ghost style=\"margin-right: 0.8rem\">仅保存</a-button>\n      <a-button @click=\"handleSubmit(true)\" type=\"primary\" :loading=\"loading\">保存并关闭</a-button>\n    </div>\n    <dept-role-datarule-modal ref=\"datarule\"></dept-role-datarule-modal>\n  </a-drawer>\n\n</template>\n<script>\n  import {queryTreeListForDeptRole,queryDeptRolePermission,saveDeptRolePermission} from '@/api/api'\n  import RoleDataruleModal from './RoleDataruleModal.vue'\n  import DeptRoleDataruleModal from './DeptRoleDataruleModal'\n\n  export default {\n    name: \"DeptRoleAuthModal\",\n    components:{\n      DeptRoleDataruleModal,\n      RoleDataruleModal\n    },\n    data(){\n      return {\n        departId:\"\",\n        roleId:\"\",\n        treeData: [],\n        defaultCheckedKeys:[],\n        checkedKeys:[],\n        halfCheckedKeys:[],\n        expandedKeysss:[],\n        allTreeKeys:[],\n        autoExpandParent: true,\n        checkStrictly: true,\n        title:\"部门角色权限配置\",\n        visible: false,\n        loading: false,\n        selectedKeys:[]\n      }\n    },\n    methods: {\n      switchCheckStrictly (v) {\n        if(v==1){\n          this.checkStrictly = false\n        }else if(v==2){\n          this.checkStrictly = true\n        }\n      },\n      onTreeNodeSelect(id){\n        if(id && id.length>0){\n          this.selectedKeys = id\n        }\n        this.$refs.datarule.show(this.selectedKeys[0],this.departId,this.roleId)\n      },\n      onCheck (o) {\n        if(this.checkStrictly){\n          this.checkedKeys = o.checked;\n        }else{\n          this.checkedKeys = o\n        }\n      },\n      show(roleId,departId){\n        this.departId = departId\n        this.roleId=roleId\n        this.visible = true;\n      },\n      close () {\n        this.reset()\n        this.$emit('close');\n        this.visible = false;\n      },\n      onExpand(expandedKeys){\n        this.expandedKeysss = expandedKeys;\n        this.autoExpandParent = false\n      },\n      reset () {\n        this.expandedKeysss = []\n        this.checkedKeys = []\n        this.defaultCheckedKeys = []\n        this.loading = false\n      },\n      expandAll () {\n        this.expandedKeysss = this.allTreeKeys\n      },\n      closeAll () {\n        this.expandedKeysss = []\n      },\n      checkALL () {\n        this.checkedKeys = this.allTreeKeys\n      },\n      cancelCheckALL () {\n        this.checkedKeys = []\n      },\n      handleCancel () {\n        this.close()\n      },\n      handleSubmit(exit) {\n        let that = this;\n        let params =  {\n          roleId:that.roleId,\n          permissionIds:that.checkedKeys.join(\",\"),\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n        };\n        that.loading = true;\n        console.log(\"请求参数：\",params);\n        saveDeptRolePermission(params).then((res)=>{\n          if(res.success){\n            that.$message.success(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }else {\n            that.$message.error(res.message);\n            that.loading = false;\n            if (exit) {\n              that.close()\n            }\n          }\n          this.loadData();\n        })\n      },\n      convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n        for(const {key, isLeaf, children} of treeList) {\n          keyLeafPair.push({key, isLeaf})\n          if(children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n          }\n        }\n        return keyLeafPair;\n      },\n      loadData(){\n        queryTreeListForDeptRole({departId:this.departId}).then((res) => {\n          this.treeData = res.result.treeList\n          this.allTreeKeys = res.result.ids\n          queryDeptRolePermission({roleId:this.roleId}).then((res)=>{\n            this.checkedKeys = [...res.result];\n            this.defaultCheckedKeys = [...res.result];\n            this.expandedKeysss = this.allTreeKeys;\n          })\n        })\n      }\n    },\n    watch: {\n      visible () {\n        if (this.visible ) {\n          this.loadData();\n        }\n      }\n    }\n  }\n\n</script>\n<style lang=\"less\" scoped>\n  .drawer-bootom-button {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    border-top: 1px solid #e8e8e8;\n    padding: 10px 16px;\n    text-align: right;\n    left: 0;\n    background: #fff;\n    border-radius: 0 0 2px 2px;\n  }\n\n</style>"]}]}