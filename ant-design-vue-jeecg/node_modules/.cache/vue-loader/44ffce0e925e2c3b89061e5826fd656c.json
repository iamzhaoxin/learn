{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JSwitch.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  name: 'JSwitch',\n  props: {\n    value:{\n      type: String | Number,\n      required: false\n    },\n    disabled:{\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    options:{\n      type:Array,\n      required:false,\n      default:()=>['Y','N']\n    },\n    query:{\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  data () {\n    return {\n      checkStatus: false\n    }\n  },\n  watch: {\n    value:{\n      immediate: true,\n      handler(val){\n        if(!this.query){\n          if(!val){\n            this.checkStatus = false\n            this.$emit('change', this.options[1]);\n          }else{\n            if(this.options[0]==val){\n              this.checkStatus = true\n            }else{\n              this.checkStatus = false\n            }\n          }\n        }\n\n      }\n    }\n  },\n  computed:{\n    queryOption(){\n      let arr = []\n      arr.push({value:this.options[0],text:'是'})\n      arr.push({value:this.options[1],text:'否'})\n      return arr;\n    }\n  },\n  methods: {\n    handleChange(checked){\n      let flag = checked===false?this.options[1]:this.options[0];\n      this.$emit('change', flag);\n    },\n    handleSelectChange(value){\n      this.$emit('change', value);\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JSwitch.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JSwitch.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <div>\n    <a-select v-if=\"query\" style=\"width: 100%\" @change=\"handleSelectChange\">\n      <a-select-option v-for=\"(item, index) in queryOption\" :key=\"index\" :value=\"item.value\">\n        {{ item.text }}\n      </a-select-option>\n    </a-select>\n    <a-switch v-else v-model=\"checkStatus\" :disabled=\"disabled\" @change=\"handleChange\"/>\n  </div>\n</template>\n<script>\n\n  export default {\n    name: 'JSwitch',\n    props: {\n      value:{\n        type: String | Number,\n        required: false\n      },\n      disabled:{\n        type: Boolean,\n        required: false,\n        default: false\n      },\n      options:{\n        type:Array,\n        required:false,\n        default:()=>['Y','N']\n      },\n      query:{\n        type: Boolean,\n        required: false,\n        default: false\n      }\n    },\n    data () {\n      return {\n        checkStatus: false\n      }\n    },\n    watch: {\n      value:{\n        immediate: true,\n        handler(val){\n          if(!this.query){\n            if(!val){\n              this.checkStatus = false\n              this.$emit('change', this.options[1]);\n            }else{\n              if(this.options[0]==val){\n                this.checkStatus = true\n              }else{\n                this.checkStatus = false\n              }\n            }\n          }\n\n        }\n      }\n    },\n    computed:{\n      queryOption(){\n        let arr = []\n        arr.push({value:this.options[0],text:'是'})\n        arr.push({value:this.options[1],text:'否'})\n        return arr;\n      }\n    },\n    methods: {\n      handleChange(checked){\n        let flag = checked===false?this.options[1]:this.options[0];\n        this.$emit('change', flag);\n      },\n      handleSelectChange(value){\n        this.$emit('change', value);\n      }\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    }\n  }\n</script>\n"]}]}