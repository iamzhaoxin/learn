{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JCodeEditor2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JCodeEditor2.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'JCodeEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: null\n    },\n    // 是否显示全屏按钮\n    fullScreen: {\n      type: Boolean,\n      default: false\n    },\n    // 全屏以后的z-index\n    zIndex: {\n      type: [Number, String],\n      default: 999\n    },\n    // 是否自适应高度，可以传String或Boolean\n    // 传 String 类型只能写\"!ie\" ，\n    // 填写这个字符串，代表其他浏览器自适应高度\n    // 唯独IE下不自适应高度，因为IE下不支持min、max-height样式\n    // 如果填写的不是\"!ie\"就视为true\n    autoHeight: {\n      type: [String, Boolean],\n      default: true\n    },\n    // 不自适应高度的情况下生效的固定高度\n    height: {\n      type: [String, Number],\n      default: '240px'\n    },\n    language: {\n      type: String,\n      default: ''\n    },\n    minHeight:{\n      type:Number,\n      default: 100,\n      required:false\n    },\n    maxHeight:{\n      type:Number,\n      default: 320,\n      required:false\n    }\n  },\n  data () {\n    return {\n      textareaValue: '',\n      // 内部真实的内容\n      code: '',\n      iconType: 'fullscreen',\n      hasCode:false,\n      // 默认的语法类型\n      mode: 'javascript',\n      // 编辑器实例\n      coder: null,\n      // 默认配置\n      options: {\n        // 缩进格式\n        tabSize: 2,\n        // 主题，对应主题库 JS 需要提前引入\n        theme: 'panda-syntax',\n        line: true,\n        // extraKeys: {'Ctrl': 'autocomplete'},//自定义快捷键\n        hintOptions: {\n          tables: {\n            users: ['name', 'score', 'birthDate'],\n            countries: ['name', 'population', 'size']\n          }\n        },\n      },\n\n      // code 编辑器 是否全屏\n      fullCoder: false\n    }\n  },\n  watch: {\n    fullCoder:{\n      handler(value) {\n        if(value){\n          this.iconType=\"fullscreen-exit\"\n        }else{\n          this.iconType=\"fullscreen\"\n        }\n      }\n    }\n  },\n  computed: {\n    placeholderShow() {\n      if (this.placeholder == null) {\n        return `请在此输入代码`\n      } else {\n        return this.placeholder\n      }\n    },\n    isAutoHeight() {\n      let {autoHeight} = this\n      if (typeof autoHeight === 'string' && autoHeight.toLowerCase().trim() === '!ie') {\n        autoHeight = !(isIE() || isIE11())\n      } else {\n        autoHeight = true\n      }\n      return autoHeight\n    },\n    fullScreenParentProps() {\n      let props = {\n        class: {\n          'full-screen-parent': true,\n          'full-screen': this.fullCoder,\n          'auto-height': this.isAutoHeight\n        },\n        style: {}\n      }\n      if (this.fullCoder) {\n        props.style['z-index'] = this.zIndex\n      }\n      if (!this.isAutoHeight) {\n        props.style['height'] = (typeof this.height === 'number' ? this.height + 'px' : this.height)\n      }\n      return props\n    }\n  },\n  mounted () {\n    // 初始化\n    this._initialize()\n  },\n  methods: {\n    // 初始化\n    _initialize () {\n      this.setCodeContent(this.value)\n    },\n    handleChange(e){\n      this.$emit('input', e.target.value)\n    },\n    getCodeContent(){\n      return this.value\n    },\n    setCodeContent(val){\n      setTimeout(()=>{\n        if(!val){\n          this.textareaValue = ''\n        }else{\n          this.textareaValue = val\n        }\n      },300)\n    },\n    nullTipClick(){\n      this.coder.focus()\n    }\n  }\n}\n",{"version":3,"sources":["JCodeEditor2.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JCodeEditor2.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\n  <div v-bind=\"fullScreenParentProps\">\n    <a-icon v-if=\"fullScreen\" class=\"full-screen-icon\" :type=\"iconType\" @click=\"()=>fullCoder=!fullCoder\"/>\n\n    <div class=\"code-editor-cust full-screen-child\">\n      <a-textarea auto-size v-model=\"textareaValue\" :placeholder=\"placeholderShow\" @change=\"handleChange\" :style=\"{'max-height': maxHeight+'px','min-height': minHeight+'px'}\"></a-textarea>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  export default {\n    name: 'JCodeEditor',\n    props: {\n      value: {\n        type: String,\n        default: ''\n      },\n      placeholder: {\n        type: String,\n        default: null\n      },\n      // 是否显示全屏按钮\n      fullScreen: {\n        type: Boolean,\n        default: false\n      },\n      // 全屏以后的z-index\n      zIndex: {\n        type: [Number, String],\n        default: 999\n      },\n      // 是否自适应高度，可以传String或Boolean\n      // 传 String 类型只能写\"!ie\" ，\n      // 填写这个字符串，代表其他浏览器自适应高度\n      // 唯独IE下不自适应高度，因为IE下不支持min、max-height样式\n      // 如果填写的不是\"!ie\"就视为true\n      autoHeight: {\n        type: [String, Boolean],\n        default: true\n      },\n      // 不自适应高度的情况下生效的固定高度\n      height: {\n        type: [String, Number],\n        default: '240px'\n      },\n      language: {\n        type: String,\n        default: ''\n      },\n      minHeight:{\n        type:Number,\n        default: 100,\n        required:false\n      },\n      maxHeight:{\n        type:Number,\n        default: 320,\n        required:false\n      }\n    },\n    data () {\n      return {\n        textareaValue: '',\n        // 内部真实的内容\n        code: '',\n        iconType: 'fullscreen',\n        hasCode:false,\n        // 默认的语法类型\n        mode: 'javascript',\n        // 编辑器实例\n        coder: null,\n        // 默认配置\n        options: {\n          // 缩进格式\n          tabSize: 2,\n          // 主题，对应主题库 JS 需要提前引入\n          theme: 'panda-syntax',\n          line: true,\n          // extraKeys: {'Ctrl': 'autocomplete'},//自定义快捷键\n          hintOptions: {\n            tables: {\n              users: ['name', 'score', 'birthDate'],\n              countries: ['name', 'population', 'size']\n            }\n          },\n        },\n\n        // code 编辑器 是否全屏\n        fullCoder: false\n      }\n    },\n    watch: {\n      fullCoder:{\n        handler(value) {\n          if(value){\n            this.iconType=\"fullscreen-exit\"\n          }else{\n            this.iconType=\"fullscreen\"\n          }\n        }\n      }\n    },\n    computed: {\n      placeholderShow() {\n        if (this.placeholder == null) {\n          return `请在此输入代码`\n        } else {\n          return this.placeholder\n        }\n      },\n      isAutoHeight() {\n        let {autoHeight} = this\n        if (typeof autoHeight === 'string' && autoHeight.toLowerCase().trim() === '!ie') {\n          autoHeight = !(isIE() || isIE11())\n        } else {\n          autoHeight = true\n        }\n        return autoHeight\n      },\n      fullScreenParentProps() {\n        let props = {\n          class: {\n            'full-screen-parent': true,\n            'full-screen': this.fullCoder,\n            'auto-height': this.isAutoHeight\n          },\n          style: {}\n        }\n        if (this.fullCoder) {\n          props.style['z-index'] = this.zIndex\n        }\n        if (!this.isAutoHeight) {\n          props.style['height'] = (typeof this.height === 'number' ? this.height + 'px' : this.height)\n        }\n        return props\n      }\n    },\n    mounted () {\n      // 初始化\n      this._initialize()\n    },\n    methods: {\n      // 初始化\n      _initialize () {\n        this.setCodeContent(this.value)\n      },\n      handleChange(e){\n        this.$emit('input', e.target.value)\n      },\n      getCodeContent(){\n        return this.value\n      },\n      setCodeContent(val){\n        setTimeout(()=>{\n          if(!val){\n            this.textareaValue = ''\n          }else{\n            this.textareaValue = val\n          }\n        },300)\n      },\n      nullTipClick(){\n        this.coder.focus()\n      }\n    }\n  }\n</script>\n\n<style lang=\"less\">\n  .code-editor-cust{\n    flex-grow:1;\n    display:flex;\n    position:relative;\n    height:100%;\n    .CodeMirror{\n      flex-grow:1;\n      z-index:1;\n      .CodeMirror-code{\n        line-height:19px;\n      }\n\n    }\n    .code-mode-select{\n      position:absolute;\n      z-index:2;\n      right:10px;\n      top:10px;\n      max-width:130px;\n    }\n    .CodeMirror{\n      height: auto;\n      min-height:100%;\n    }\n    .null-tip{\n      position: absolute;\n      top: 4px;\n      left: 36px;\n      z-index: 10;\n      color: #ffffffc9;\n      line-height: initial;\n    }\n    .null-tip-hidden{\n      display: none;\n    }\n  }\n\n  /* 全屏样式 */\n  .full-screen-parent {\n    position: relative;\n\n    .full-screen-icon {\n      opacity: 0;\n      color: black;\n      width: 20px;\n      height: 20px;\n      line-height: 24px;\n      background-color: white;\n      position: absolute;\n      top: 2px;\n      right: 2px;\n      z-index: 9;\n      cursor: pointer;\n      transition: opacity 0.3s;\n    }\n\n    &:hover {\n      .full-screen-icon {\n        opacity: 1;\n\n        &:hover {\n          background-color: rgba(255, 255, 255, 0.88);\n        }\n      }\n    }\n\n    &.full-screen {\n      position: fixed;\n      top: 10px;\n      left: 10px;\n      width: calc(100% - 20px);\n      height: calc(100% - 20px);\n      padding: 10px;\n      background-color: #f5f5f5;\n\n      .full-screen-icon {\n        top: 12px;\n        right: 12px;\n      }\n\n      .full-screen-child {\n        height: 100%;\n        max-height: 100%;\n        min-height: 100%;\n      }\n    }\n\n    .full-screen-child {\n      height: 100%;\n    }\n\n    &.auto-height {\n      .full-screen-child {\n        min-height: 120px;\n        max-height: 320px;\n        height: unset;\n        overflow: hidden;\n      }\n\n      &.full-screen .full-screen-child {\n        height: 100%;\n        max-height: 100%;\n        min-height: 100%;\n      }\n    }\n\n  }\n\n  .CodeMirror-cursor{\n    height:18.4px !important;\n  }\n</style>"]}]}