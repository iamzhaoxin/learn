{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\UserRecycleBinModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\UserRecycleBinModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { putAction,deleteAction,getFileAccessHttpUrl } from \"@/api/manage\"\n\n// 高度封装的请求，请务必使用 superRequest.call(this,{}) 的方式调用\nfunction superRequest(options) {\n  this.loading = !!options.loading\n  options.promise.then(res => {\n    if (res.success && typeof options.success === 'function') {\n      options.success(res)\n    } else {\n      throw new Error(res.message)\n    }\n  }).catch(e => {\n    console.error('查询已删除的用户失败：', e)\n    this.$message.warning('查询已删除的用户失败：' + (e.message || e))\n  }).finally(() => {\n    this.loading = false\n  })\n}\n\nexport default {\n  name: 'UserRecycleBinModal',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n  },\n  data() {\n    return {\n      title: '用户回收站',\n      loading: false,\n      innerVisible: false,\n      selectedRowKeys: [],\n      dataSource: [],\n      columns: [\n        { title: '#', align: 'center', key: 'rowIndex', width: 80, customRender: (t, r, i) => i + 1 },\n        { title: '账号', align: 'center', dataIndex: 'username' },\n        { title: '姓名', align: 'center', dataIndex: 'realname', },\n        { title: '头像', align: 'center', dataIndex: 'avatar', scopedSlots: { customRender: 'avatarslot' } },\n        { title: '部门', align: 'center', dataIndex: 'orgCode' },\n        { title: '操作', align: 'center', dataIndex: 'action', width: 200, scopedSlots: { customRender: 'action' } }\n      ],\n      url: {\n        getAvatar: (path) => getFileAccessHttpUrl(`${path}`),\n        // 回收站操作，get = 获取列表；put = 取回；delete = 彻底删除\n        recycleBin: '/sys/user/recycleBin',\n        putRecycleBin: '/sys/user/putRecycleBin',\n        deleteRecycleBin: '/sys/user/deleteRecycleBin',\n      },\n    }\n  },\n  watch: {\n    visible: {\n      immediate: true,\n      handler(val) {\n        if (val) {\n          this.loadData()\n        }\n        this.innerVisible = val\n      }\n    },\n    innerVisible(val) {\n      this.$emit('update:visible', val)\n    },\n  },\n  methods: {\n    loadData() {\n      superRequest.call(this, {\n        loading: true,\n        promise: this.$http.get(this.url.recycleBin),\n        success: res => this.dataSource = res.result\n      })\n    },\n    handleOk() {\n      this.loadData()\n      this.$emit('ok')\n    },\n    handleCancel() {\n      this.innerVisible = false\n    },\n    // 还原用户\n    handleRevert(userIds) {\n      this.$confirm({\n        title: '恢复用户',\n        content: `您确定要恢复这 ${userIds.length} 个用户吗？`,\n        centered: true,\n        onOk: () => {\n          putAction(this.url.putRecycleBin,{userIds:userIds.join(',')}).then((res)=>{\n            if(res.success){\n              this.handleOk()\n              this.handleClearSelection()\n              this.$message.success(`还原 ${userIds.length} 个用户成功！`)\n            }\n          })\n        }\n      })\n    },\n    // 彻底删除用户\n    handleDelete(userIds) {\n      this.$confirm({\n        title: '彻底删除用户',\n        content: (<div>\n          <p>您确定要彻底删除这 {userIds.length} 个用户吗？</p>\n          <p style=\"color:red;\">注意：彻底删除后将无法恢复，请谨慎操作！</p>\n        </div>),\n        centered: true,\n        onOk: () => {\n          var that = this;\n          deleteAction(that.url.deleteRecycleBin, {userIds: userIds.join(',')}).then((res) => {\n            if (res.success) {\n              this.loadData()\n              this.handleClearSelection()\n              this.$message.success(`彻底删除 ${userIds.length} 个用户成功！`)\n            } else {\n              that.$message.warning(res.message);\n            }\n          });\n        },\n      })\n    },\n    handleRevertBatch() {\n      this.handleRevert(this.selectedRowKeys)\n    },\n    handleDeleteBatch() {\n      this.handleDelete(this.selectedRowKeys)\n    },\n    handleClearSelection() {\n      this.handleTableSelectChange([], [])\n    },\n    handleTableSelectChange(selectedRowKeys, selectionRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectionRows = selectionRows\n    },\n  }\n}\n",{"version":3,"sources":["UserRecycleBinModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"UserRecycleBinModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-modal\n    :width=\"1000\"\n    :title=\"title\"\n    :visible=\"innerVisible\"\n    @cancel=\"handleCancel\"\n    cancelText=\"关闭\"\n    :okButtonProps=\"{style:{display:'none'}}\"\n  >\n    <a-alert type=\"info\" showIcon style=\"margin-bottom: 16px;\">\n      <template slot=\"message\">\n        <span>已选择</span>\n        <a style=\"font-weight: 600;padding: 0 4px;\">{{ selectedRowKeys.length }}</a>\n        <span>项</span>\n        <template v-if=\"selectedRowKeys.length>0\">\n          <a-divider type=\"vertical\"/>\n          <a @click=\"handleClearSelection\">清空选择</a>\n          <a-divider type=\"vertical\"/>\n          <a @click=\"handleRevertBatch\">批量还原</a>\n          <a-divider type=\"vertical\"/>\n          <a @click=\"handleDeleteBatch\">批量删除</a>\n        </template>\n      </template>\n    </a-alert>\n\n    <a-table\n      ref=\"table\"\n      rowKey=\"id\"\n      size=\"middle\"\n      bordered\n      :columns=\"columns\"\n      :loading=\"loading\"\n      :dataSource=\"dataSource\"\n      :pagination=\"false\"\n      :rowSelection=\"{selectedRowKeys, onChange: handleTableSelectChange}\"\n    >\n\n      <!-- 显示头像 -->\n      <template slot=\"avatarslot\" slot-scope=\"text, record, index\">\n        <div class=\"anty-img-wrap\">\n          <a-avatar shape=\"square\" :src=\"url.getAvatar(record.avatar)\" icon=\"user\"/>\n        </div>\n      </template>\n\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <a @click=\"handleRevert([record.id])\"><a-icon type=\"redo\"/> 还原用户</a>\n        <a-divider type=\"vertical\"/>\n        <a @click=\"handleDelete([record.id])\"><a-icon type=\"delete\"/> 彻底删除</a>\n      </span>\n    </a-table>\n\n  </a-modal>\n</template>\n\n<script>\n  import { putAction,deleteAction,getFileAccessHttpUrl } from \"@/api/manage\"\n\n  // 高度封装的请求，请务必使用 superRequest.call(this,{}) 的方式调用\n  function superRequest(options) {\n    this.loading = !!options.loading\n    options.promise.then(res => {\n      if (res.success && typeof options.success === 'function') {\n        options.success(res)\n      } else {\n        throw new Error(res.message)\n      }\n    }).catch(e => {\n      console.error('查询已删除的用户失败：', e)\n      this.$message.warning('查询已删除的用户失败：' + (e.message || e))\n    }).finally(() => {\n      this.loading = false\n    })\n  }\n\n  export default {\n    name: 'UserRecycleBinModal',\n    props: {\n      visible: {\n        type: Boolean,\n        default: false\n      },\n    },\n    data() {\n      return {\n        title: '用户回收站',\n        loading: false,\n        innerVisible: false,\n        selectedRowKeys: [],\n        dataSource: [],\n        columns: [\n          { title: '#', align: 'center', key: 'rowIndex', width: 80, customRender: (t, r, i) => i + 1 },\n          { title: '账号', align: 'center', dataIndex: 'username' },\n          { title: '姓名', align: 'center', dataIndex: 'realname', },\n          { title: '头像', align: 'center', dataIndex: 'avatar', scopedSlots: { customRender: 'avatarslot' } },\n          { title: '部门', align: 'center', dataIndex: 'orgCode' },\n          { title: '操作', align: 'center', dataIndex: 'action', width: 200, scopedSlots: { customRender: 'action' } }\n        ],\n        url: {\n          getAvatar: (path) => getFileAccessHttpUrl(`${path}`),\n          // 回收站操作，get = 获取列表；put = 取回；delete = 彻底删除\n          recycleBin: '/sys/user/recycleBin',\n          putRecycleBin: '/sys/user/putRecycleBin',\n          deleteRecycleBin: '/sys/user/deleteRecycleBin',\n        },\n      }\n    },\n    watch: {\n      visible: {\n        immediate: true,\n        handler(val) {\n          if (val) {\n            this.loadData()\n          }\n          this.innerVisible = val\n        }\n      },\n      innerVisible(val) {\n        this.$emit('update:visible', val)\n      },\n    },\n    methods: {\n      loadData() {\n        superRequest.call(this, {\n          loading: true,\n          promise: this.$http.get(this.url.recycleBin),\n          success: res => this.dataSource = res.result\n        })\n      },\n      handleOk() {\n        this.loadData()\n        this.$emit('ok')\n      },\n      handleCancel() {\n        this.innerVisible = false\n      },\n      // 还原用户\n      handleRevert(userIds) {\n        this.$confirm({\n          title: '恢复用户',\n          content: `您确定要恢复这 ${userIds.length} 个用户吗？`,\n          centered: true,\n          onOk: () => {\n            putAction(this.url.putRecycleBin,{userIds:userIds.join(',')}).then((res)=>{\n              if(res.success){\n                this.handleOk()\n                this.handleClearSelection()\n                this.$message.success(`还原 ${userIds.length} 个用户成功！`)\n              }\n            })\n          }\n        })\n      },\n      // 彻底删除用户\n      handleDelete(userIds) {\n        this.$confirm({\n          title: '彻底删除用户',\n          content: (<div>\n            <p>您确定要彻底删除这 {userIds.length} 个用户吗？</p>\n            <p style=\"color:red;\">注意：彻底删除后将无法恢复，请谨慎操作！</p>\n          </div>),\n          centered: true,\n          onOk: () => {\n            var that = this;\n            deleteAction(that.url.deleteRecycleBin, {userIds: userIds.join(',')}).then((res) => {\n              if (res.success) {\n                this.loadData()\n                this.handleClearSelection()\n                this.$message.success(`彻底删除 ${userIds.length} 个用户成功！`)\n              } else {\n                that.$message.warning(res.message);\n              }\n            });\n          },\n        })\n      },\n      handleRevertBatch() {\n        this.handleRevert(this.selectedRowKeys)\n      },\n      handleDeleteBatch() {\n        this.handleDelete(this.selectedRowKeys)\n      },\n      handleClearSelection() {\n        this.handleTableSelectChange([], [])\n      },\n      handleTableSelectChange(selectedRowKeys, selectionRows) {\n        this.selectedRowKeys = selectedRowKeys\n        this.selectionRows = selectionRows\n      },\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped></style>"]}]}