{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DepartAuthModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\DepartAuthModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {queryTreeListForRole,queryDepartPermission,saveDepartPermission} from '@/api/api'\nimport DepartDataruleModal from './DepartDataruleModal'\n\nexport default {\n  name: 'DepartAuthModal',\n  components: { DepartDataruleModal },\n  data(){\n    return {\n      departId:\"\",\n      treeData: [],\n      defaultCheckedKeys:[],\n      checkedKeys:[],\n      halfCheckedKeys:[],\n      expandedKeysss:[],\n      allTreeKeys:[],\n      autoExpandParent: true,\n      checkStrictly: false,\n      title:\"部门权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys:[]\n    }\n  },\n  methods: {\n    onTreeNodeSelect(id){\n      if(id && id.length>0){\n        this.selectedKeys = id\n      }\n      this.$refs.datarule.show(this.selectedKeys[0],this.departId)\n    },\n    onCheck (checkedKeys, { halfCheckedKeys }) {\n      // 保存选中的和半选中的，后面保存的时候合并提交\n      this.checkedKeys = checkedKeys\n      this.halfCheckedKeys = halfCheckedKeys\n    },\n    show(departId){\n      this.departId=departId\n      this.loadData();\n    },\n    close () {\n      this.reset()\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand(expandedKeys){\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false\n    },\n    reset () {\n      this.expandedKeysss = []\n      this.checkedKeys = []\n      this.defaultCheckedKeys = []\n      this.loading = false\n    },\n    expandAll () {\n      this.expandedKeysss = this.allTreeKeys\n    },\n    closeAll () {\n      this.expandedKeysss = []\n    },\n    checkALL () {\n      this.checkedKeys = this.allTreeKeys\n    },\n    cancelCheckALL () {\n      this.checkedKeys = []\n    },\n    handleCancel () {\n      this.close()\n    },\n    handleSubmit() {\n      let that = this;\n      if(!that.departId){\n        this.$message.warning('请点击选择一个部门!')\n      }\n      let checkedKeys = [...that.checkedKeys, ...that.halfCheckedKeys]\n      const permissionIds = checkedKeys.join(\",\")\n      let params =  {\n        departId:that.departId,\n        permissionIds,\n        lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n      };\n      that.loading = true;\n      saveDepartPermission(params).then((res)=>{\n        if(res.success){\n          that.$message.success(res.message);\n          that.loading = false;\n          that.loadData();\n        }else {\n          that.$message.error(res.message);\n          that.loading = false;\n        }\n      })\n    },\n    convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n      for(const {key, isLeaf, children} of treeList) {\n        keyLeafPair.push({key, isLeaf})\n        if(children && children.length > 0) {\n          this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n        }\n      }\n      return keyLeafPair;\n    },\n    emptyCurrForm() {\n      this.form.resetFields()\n    },\n    loadData(){\n      this.loading = true;\n      queryTreeListForRole().then((res) => {\n        this.treeData = res.result.treeList\n        this.allTreeKeys = res.result.ids\n        const keyLeafPairs = this.convertTreeListToKeyLeafPairs(this.treeData)\n        queryDepartPermission({departId:this.departId}).then((res)=>{\n          // 过滤出 leaf node 即可，即选中的\n          // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\n          // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\n          const checkedKeys = [...res.result].filter(key => {\n            const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n            return keyLeafPair && keyLeafPair.isLeaf\n          })\n          const halfCheckedKeys = [...res.result].filter(key => {\n            const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n            return keyLeafPair && !keyLeafPair.isLeaf\n          })\n          this.checkedKeys = [...checkedKeys];\n          this.halfCheckedKeys = [...halfCheckedKeys]\n          this.defaultCheckedKeys = [...halfCheckedKeys, ...checkedKeys];\n          this.expandedKeysss = this.allTreeKeys;\n          this.loading = false;\n        })\n      })\n    }\n  },\n}\n",{"version":3,"sources":["DepartAuthModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DepartAuthModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n    <template v-if=\"this.departId\">\n      <a-spin :spinning=\"loading\">\n        <a-form>\n          <a-form-item label='所拥有的权限'>\n            <a-tree\n              checkable\n              @check=\"onCheck\"\n              :checkedKeys=\"checkedKeys\"\n              :treeData=\"treeData\"\n              @expand=\"onExpand\"\n              @select=\"onTreeNodeSelect\"\n              :selectedKeys=\"selectedKeys\"\n              :expandedKeys=\"expandedKeysss\"\n              :checkStrictly=\"checkStrictly\"\n              style=\"height:500px;overflow: auto;\">\n              <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\n                {{ slotTitle }}\n                <a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\n              </span>\n            </a-tree>\n          </a-form-item>\n        </a-form>\n      </a-spin>\n      <div class=\"anty-form-btn\">\n        <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\n          <a-menu slot=\"overlay\">\n            <!-- 简化Tree逻辑，使用默认checkStrictly为false的行为，即默认父子关联\n            <a-menu-item key=\"1\" @click=\"switchCheckStrictly(1)\">父子关联</a-menu-item>\n            <a-menu-item key=\"2\" @click=\"switchCheckStrictly(2)\">取消关联</a-menu-item>\n            -->\n            <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\n            <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\n            <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\n            <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\n          </a-menu>\n          <a-button>\n            树操作 <a-icon type=\"up\" />\n          </a-button>\n        </a-dropdown>\n        <a-button style=\"float: right\" @click=\"handleSubmit\" type=\"primary\" htmlType=\"button\" icon=\"form\">保存</a-button>\n      </div>\n    </template>\n    <a-card v-else :bordered=\"false\" style=\"height:200px\">\n      <a-empty>\n        <span slot=\"description\"> 请先选择一个部门! </span>\n      </a-empty>\n    </a-card>\n    <depart-datarule-modal ref=\"datarule\"/>\n  </a-card>\n</template>\n\n<script>\n  import {queryTreeListForRole,queryDepartPermission,saveDepartPermission} from '@/api/api'\n  import DepartDataruleModal from './DepartDataruleModal'\n\n  export default {\n    name: 'DepartAuthModal',\n    components: { DepartDataruleModal },\n    data(){\n      return {\n        departId:\"\",\n        treeData: [],\n        defaultCheckedKeys:[],\n        checkedKeys:[],\n        halfCheckedKeys:[],\n        expandedKeysss:[],\n        allTreeKeys:[],\n        autoExpandParent: true,\n        checkStrictly: false,\n        title:\"部门权限配置\",\n        visible: false,\n        loading: false,\n        selectedKeys:[]\n      }\n    },\n    methods: {\n      onTreeNodeSelect(id){\n        if(id && id.length>0){\n          this.selectedKeys = id\n        }\n        this.$refs.datarule.show(this.selectedKeys[0],this.departId)\n      },\n      onCheck (checkedKeys, { halfCheckedKeys }) {\n        // 保存选中的和半选中的，后面保存的时候合并提交\n        this.checkedKeys = checkedKeys\n        this.halfCheckedKeys = halfCheckedKeys\n      },\n      show(departId){\n        this.departId=departId\n        this.loadData();\n      },\n      close () {\n        this.reset()\n        this.$emit('close');\n        this.visible = false;\n      },\n      onExpand(expandedKeys){\n        this.expandedKeysss = expandedKeys;\n        this.autoExpandParent = false\n      },\n      reset () {\n        this.expandedKeysss = []\n        this.checkedKeys = []\n        this.defaultCheckedKeys = []\n        this.loading = false\n      },\n      expandAll () {\n        this.expandedKeysss = this.allTreeKeys\n      },\n      closeAll () {\n        this.expandedKeysss = []\n      },\n      checkALL () {\n        this.checkedKeys = this.allTreeKeys\n      },\n      cancelCheckALL () {\n        this.checkedKeys = []\n      },\n      handleCancel () {\n        this.close()\n      },\n      handleSubmit() {\n        let that = this;\n        if(!that.departId){\n          this.$message.warning('请点击选择一个部门!')\n        }\n        let checkedKeys = [...that.checkedKeys, ...that.halfCheckedKeys]\n        const permissionIds = checkedKeys.join(\",\")\n        let params =  {\n          departId:that.departId,\n          permissionIds,\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n        };\n        that.loading = true;\n        saveDepartPermission(params).then((res)=>{\n          if(res.success){\n            that.$message.success(res.message);\n            that.loading = false;\n            that.loadData();\n          }else {\n            that.$message.error(res.message);\n            that.loading = false;\n          }\n        })\n      },\n      convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n        for(const {key, isLeaf, children} of treeList) {\n          keyLeafPair.push({key, isLeaf})\n          if(children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n          }\n        }\n        return keyLeafPair;\n      },\n      emptyCurrForm() {\n        this.form.resetFields()\n      },\n      loadData(){\n        this.loading = true;\n        queryTreeListForRole().then((res) => {\n          this.treeData = res.result.treeList\n          this.allTreeKeys = res.result.ids\n          const keyLeafPairs = this.convertTreeListToKeyLeafPairs(this.treeData)\n          queryDepartPermission({departId:this.departId}).then((res)=>{\n            // 过滤出 leaf node 即可，即选中的\n            // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\n            // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\n            const checkedKeys = [...res.result].filter(key => {\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n              return keyLeafPair && keyLeafPair.isLeaf\n            })\n            const halfCheckedKeys = [...res.result].filter(key => {\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n              return keyLeafPair && !keyLeafPair.isLeaf\n            })\n            this.checkedKeys = [...checkedKeys];\n            this.halfCheckedKeys = [...halfCheckedKeys]\n            this.defaultCheckedKeys = [...halfCheckedKeys, ...checkedKeys];\n            this.expandedKeysss = this.allTreeKeys;\n            this.loading = false;\n          })\n        })\n      }\n    },\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}