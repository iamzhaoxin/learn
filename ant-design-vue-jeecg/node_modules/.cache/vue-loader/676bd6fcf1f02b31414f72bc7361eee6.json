{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\Ellipsis\\Ellipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\Ellipsis\\Ellipsis.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["\nimport { cutStrByFullLength, getStrFullLength } from '@/components/_util/StringUtil'\n\nexport default {\n  name: 'Ellipsis',\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'ant-pro-ellipsis'\n    },\n    tooltip: {\n      type: Boolean,\n      default: true,\n    },\n    length: {\n      type: Number,\n      default: 25,\n    },\n    lines: {\n      type: Number,\n      default: 1\n    },\n    fullWidthRecognition: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {},\n  render() {\n    const { tooltip, length } = this.$props\n    let text = ''\n    // 处理没有default插槽时的特殊情况\n    if (this.$slots.default) {\n      text = this.$slots.default.map(vNode => vNode.text).join('')\n    }\n    // 判断是否显示 tooltip\n    if (tooltip && getStrFullLength(text) > length) {\n      return (\n        <a-tooltip>\n          <template slot=\"title\">{text}</template>\n          <span>{cutStrByFullLength(text, this.length) + '…'}</span>\n        </a-tooltip>\n      )\n    } else {\n      return (<span>{text}</span>)\n    }\n  }\n}\n",{"version":3,"sources":["Ellipsis.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ellipsis.vue","sourceRoot":"src/components/Ellipsis","sourcesContent":["<script>\n  import { cutStrByFullLength, getStrFullLength } from '@/components/_util/StringUtil'\n\n  export default {\n    name: 'Ellipsis',\n    props: {\n      prefixCls: {\n        type: String,\n        default: 'ant-pro-ellipsis'\n      },\n      tooltip: {\n        type: Boolean,\n        default: true,\n      },\n      length: {\n        type: Number,\n        default: 25,\n      },\n      lines: {\n        type: Number,\n        default: 1\n      },\n      fullWidthRecognition: {\n        type: Boolean,\n        default: false\n      }\n    },\n    methods: {},\n    render() {\n      const { tooltip, length } = this.$props\n      let text = ''\n      // 处理没有default插槽时的特殊情况\n      if (this.$slots.default) {\n        text = this.$slots.default.map(vNode => vNode.text).join('')\n      }\n      // 判断是否显示 tooltip\n      if (tooltip && getStrFullLength(text) > length) {\n        return (\n          <a-tooltip>\n            <template slot=\"title\">{text}</template>\n            <span>{cutStrByFullLength(text, this.length) + '…'}</span>\n          </a-tooltip>\n        )\n      } else {\n        return (<span>{text}</span>)\n      }\n    }\n  }\n</script>"]}]}