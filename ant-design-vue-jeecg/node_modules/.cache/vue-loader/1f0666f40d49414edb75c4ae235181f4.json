{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\jeecg\\ImagCropper.vue?vue&type=template&id=0a7f9e10&scoped=true&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\jeecg\\ImagCropper.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1621061372054},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"wrapper\" }, [\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.model,\n            expression: \"model\"\n          }\n        ],\n        staticClass: \"model\"\n      },\n      [\n        _c(\n          \"div\",\n          {\n            staticClass: \"model-show\",\n            on: {\n              click: function($event) {\n                _vm.model = false\n              }\n            }\n          },\n          [\n            _c(\"img\", {\n              attrs: { src: _vm.modelSrc, alt: \"\" },\n              on: {\n                click: function($event) {\n                  _vm.model = false\n                }\n              }\n            })\n          ]\n        )\n      ]\n    ),\n    _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"div\", { staticClass: \"show-info\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"test test1\" },\n          [\n            _c(\"vueCropper\", {\n              ref: \"cropper\",\n              attrs: {\n                img: _vm.option.img,\n                outputSize: _vm.option.size,\n                outputType: _vm.option.outputType,\n                info: true,\n                full: _vm.option.full,\n                canMove: _vm.option.canMove,\n                canMoveBox: _vm.option.canMoveBox,\n                fixedBox: _vm.option.fixedBox,\n                original: _vm.option.original,\n                autoCrop: _vm.option.autoCrop,\n                autoCropWidth: _vm.option.autoCropWidth,\n                autoCropHeight: _vm.option.autoCropHeight,\n                centerBox: _vm.option.centerBox,\n                high: _vm.option.high,\n                infoTrue: _vm.option.infoTrue,\n                maxImgSize: _vm.option.maxImgSize,\n                enlarge: _vm.option.enlarge,\n                mode: _vm.option.mode,\n                limitMinSize: _vm.option.limitMinSize\n              },\n              on: {\n                realTime: _vm.realTime,\n                imgLoad: _vm.imgLoad,\n                cropMoving: _vm.cropMoving\n              }\n            })\n          ],\n          1\n        ),\n        _c(\"div\", { staticClass: \"test-button\" }, [\n          _c(\"button\", { staticClass: \"btn\", on: { click: _vm.changeImg } }, [\n            _vm._v(\"changeImg\")\n          ]),\n          _c(\"label\", { staticClass: \"btn\", attrs: { for: \"uploads\" } }, [\n            _vm._v(\"upload\")\n          ]),\n          _c(\"input\", {\n            ref: \"uploadImg\",\n            staticStyle: { position: \"absolute\", clip: \"rect(0 0 0 0)\" },\n            attrs: {\n              type: \"file\",\n              id: \"uploads\",\n              accept: \"image/png, image/jpeg, image/gif, image/jpg\"\n            },\n            on: {\n              change: function($event) {\n                return _vm.uploadImg($event, 1)\n              }\n            }\n          }),\n          !_vm.crap\n            ? _c(\n                \"button\",\n                { staticClass: \"btn\", on: { click: _vm.startCrop } },\n                [_vm._v(\"start\")]\n              )\n            : _c(\n                \"button\",\n                { staticClass: \"btn\", on: { click: _vm.stopCrop } },\n                [_vm._v(\"stop\")]\n              ),\n          _c(\"button\", { staticClass: \"btn\", on: { click: _vm.clearCrop } }, [\n            _vm._v(\"clear\")\n          ]),\n          _c(\"button\", { staticClass: \"btn\", on: { click: _vm.refreshCrop } }, [\n            _vm._v(\"refresh\")\n          ]),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn\",\n              on: {\n                click: function($event) {\n                  return _vm.changeScale(1)\n                }\n              }\n            },\n            [_vm._v(\"+\")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn\",\n              on: {\n                click: function($event) {\n                  return _vm.changeScale(-1)\n                }\n              }\n            },\n            [_vm._v(\"-\")]\n          ),\n          _c(\"button\", { staticClass: \"btn\", on: { click: _vm.rotateLeft } }, [\n            _vm._v(\"rotateLeft\")\n          ]),\n          _c(\"button\", { staticClass: \"btn\", on: { click: _vm.rotateRight } }, [\n            _vm._v(\"rotateRight\")\n          ]),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn\",\n              on: {\n                click: function($event) {\n                  return _vm.finish(\"base64\")\n                }\n              }\n            },\n            [_vm._v(\"preview(base64)\")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn\",\n              on: {\n                click: function($event) {\n                  return _vm.finish(\"blob\")\n                }\n              }\n            },\n            [_vm._v(\"preview(blob)\")]\n          ),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn\",\n              on: {\n                click: function() {\n                  return (_vm.option.img = \"\")\n                }\n              }\n            },\n            [_vm._v(\"清除图片\")]\n          ),\n          _c(\n            \"a\",\n            {\n              staticClass: \"btn\",\n              on: {\n                click: function($event) {\n                  return _vm.down(\"base64\")\n                }\n              }\n            },\n            [_vm._v(\"download(base64)\")]\n          ),\n          _c(\n            \"a\",\n            {\n              staticClass: \"btn\",\n              on: {\n                click: function($event) {\n                  return _vm.down(\"blob\")\n                }\n              }\n            },\n            [_vm._v(\"download(blob)\")]\n          ),\n          _c(\"a\", {\n            ref: \"downloadDom\",\n            attrs: { href: _vm.downImg, download: \"demo.png\" }\n          })\n        ]),\n        _c(\"div\", { staticClass: \"pre\" }, [\n          _c(\"section\", { staticClass: \"pre-item\" }, [\n            _c(\"p\", [_vm._v(\"截图框大小\")]),\n            _c(\n              \"div\",\n              {\n                staticClass: \"show-preview\",\n                style: {\n                  width: _vm.previews.w + \"px\",\n                  height: _vm.previews.h + \"px\",\n                  overflow: \"hidden\",\n                  margin: \"5px\"\n                }\n              },\n              [\n                _c(\"div\", { style: _vm.previews.div }, [\n                  _c(\"img\", {\n                    style: _vm.previews.img,\n                    attrs: { src: _vm.previews.url }\n                  })\n                ])\n              ]\n            )\n          ]),\n          _c(\"section\", { staticClass: \"pre-item\" }, [\n            _c(\"p\", [_vm._v(\"中等大小\")]),\n            _c(\"div\", { style: _vm.previewStyle1 }, [\n              _c(\"div\", { style: _vm.previews.div }, [\n                _c(\"img\", {\n                  style: _vm.previews.img,\n                  attrs: { src: _vm.previews.url }\n                })\n              ])\n            ])\n          ]),\n          _c(\"section\", { staticClass: \"pre-item\" }, [\n            _c(\"p\", [_vm._v(\"迷你大小\")]),\n            _c(\"div\", { style: _vm.previewStyle2 }, [\n              _c(\"div\", { style: _vm.previews.div }, [\n                _c(\"img\", {\n                  style: _vm.previews.img,\n                  attrs: { src: _vm.previews.url }\n                })\n              ])\n            ])\n          ]),\n          _c(\n            \"section\",\n            {\n              staticClass: \"pre-item\",\n              attrs: { title: \"zoom: (100 / previews.w)\" }\n            },\n            [\n              _c(\"p\", [_vm._v(\"固定为100宽度\")]),\n              _c(\"div\", { style: _vm.previewStyle3 }, [\n                _c(\"div\", { style: _vm.previews.div }, [\n                  _c(\"img\", {\n                    style: _vm.previews.img,\n                    attrs: { src: _vm.previews.url }\n                  })\n                ])\n              ])\n            ]\n          ),\n          _c(\n            \"section\",\n            {\n              staticClass: \"pre-item\",\n              attrs: { title: \"zoom: (100 / previews.h)\" }\n            },\n            [\n              _c(\"p\", [_vm._v(\"固定为100高度\")]),\n              _c(\"div\", { style: _vm.previewStyle4 }, [\n                _c(\"div\", { style: _vm.previews.div }, [\n                  _c(\"img\", {\n                    style: _vm.previews.img,\n                    attrs: { src: _vm.previews.url }\n                  })\n                ])\n              ])\n            ]\n          )\n        ]),\n        _c(\"div\", { staticStyle: { display: \"block\", width: \"100%\" } }, [\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"图片默认渲染方式\")]),\n            _c(\n              \"select\",\n              {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.option.mode,\n                    expression: \"option.mode\"\n                  }\n                ],\n                on: {\n                  change: function($event) {\n                    var $$selectedVal = Array.prototype.filter\n                      .call($event.target.options, function(o) {\n                        return o.selected\n                      })\n                      .map(function(o) {\n                        var val = \"_value\" in o ? o._value : o.value\n                        return val\n                      })\n                    _vm.$set(\n                      _vm.option,\n                      \"mode\",\n                      $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                    )\n                  }\n                }\n              },\n              [\n                _c(\"option\", { attrs: { value: \"contain\" } }, [\n                  _vm._v(\"contain\")\n                ]),\n                _c(\"option\", { attrs: { value: \"cover\" } }, [_vm._v(\"cover\")]),\n                _c(\"option\", { attrs: { value: \"400px auto\" } }, [\n                  _vm._v(\"400px auto\")\n                ]),\n                _c(\"option\", { attrs: { value: \"auto 400px\" } }, [\n                  _vm._v(\"auto 400px\")\n                ]),\n                _c(\"option\", { attrs: { value: \"50%\" } }, [_vm._v(\"50%\")]),\n                _c(\"option\", { attrs: { value: \"auto 50%\" } }, [\n                  _vm._v(\"auto 50%\")\n                ])\n              ]\n            ),\n            _c(\"section\", [\n              _vm._v(\n                \"\\n              类似css background属性设置  设置不符合规范不生效， 参照文档说明\\n            \"\n              )\n            ])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [\n              _vm._v(\"上传时图片最大大小(默认会压缩尺寸到这个大小)\")\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.maxImgSize,\n                  expression: \"option.maxImgSize\"\n                }\n              ],\n              attrs: { type: \"nubmer\" },\n              domProps: { value: _vm.option.maxImgSize },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.option, \"maxImgSize\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [\n              _vm._v(\"上传图片是否显示原始宽高 (针对大图 可以铺满)\")\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.original,\n                  expression: \"option.original\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.original)\n                  ? _vm._i(_vm.option.original, null) > -1\n                  : _vm.option.original\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.original,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.option, \"original\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"original\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"original\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"original: \" + _vm._s(_vm.option.original))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"是否根据dpr生成适合屏幕的高清图片\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.high,\n                  expression: \"option.high\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.high)\n                  ? _vm._i(_vm.option.high, null) > -1\n                  : _vm.option.high\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.high,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 && _vm.$set(_vm.option, \"high\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"high\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"high\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"high: \" + _vm._s(_vm.option.high))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"是否输出原图比例的截图\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.full,\n                  expression: \"option.full\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.full)\n                  ? _vm._i(_vm.option.full, null) > -1\n                  : _vm.option.full\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.full,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 && _vm.$set(_vm.option, \"full\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"full\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"full\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"full: \" + _vm._s(_vm.option.full))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"截图信息展示是否是真实的输出宽高\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.infoTrue,\n                  expression: \"option.infoTrue\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.infoTrue)\n                  ? _vm._i(_vm.option.infoTrue, null) > -1\n                  : _vm.option.infoTrue\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.infoTrue,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.option, \"infoTrue\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"infoTrue\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"infoTrue\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"infoTrue: \" + _vm._s(_vm.option.infoTrue))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"能否拖动图片\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.canMove,\n                  expression: \"option.canMove\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.canMove)\n                  ? _vm._i(_vm.option.canMove, null) > -1\n                  : _vm.option.canMove\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.canMove,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.option, \"canMove\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"canMove\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"canMove\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"canMove: \" + _vm._s(_vm.option.canMove))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"能否拖动截图框\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.canMoveBox,\n                  expression: \"option.canMoveBox\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.canMoveBox)\n                  ? _vm._i(_vm.option.canMoveBox, null) > -1\n                  : _vm.option.canMoveBox\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.canMoveBox,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.option, \"canMoveBox\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"canMoveBox\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"canMoveBox\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"canMoveBox: \" + _vm._s(_vm.option.canMoveBox))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"截图框固定大小\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.fixedBox,\n                  expression: \"option.fixedBox\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.fixedBox)\n                  ? _vm._i(_vm.option.fixedBox, null) > -1\n                  : _vm.option.fixedBox\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.fixedBox,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.option, \"fixedBox\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"fixedBox\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"fixedBox\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"fixedBox: \" + _vm._s(_vm.option.fixedBox))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"是否自动生成截图框\")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.autoCrop,\n                  expression: \"option.autoCrop\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.autoCrop)\n                  ? _vm._i(_vm.option.autoCrop, null) > -1\n                  : _vm.option.autoCrop\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.autoCrop,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.option, \"autoCrop\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"autoCrop\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"autoCrop\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"autoCrop: \" + _vm._s(_vm.option.autoCrop))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"自动生成截图框的宽高\")]),\n            _c(\"span\", [_vm._v(\"宽度:  \")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.autoCropWidth,\n                  expression: \"option.autoCropWidth\"\n                }\n              ],\n              attrs: { type: \"number\" },\n              domProps: { value: _vm.option.autoCropWidth },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.option, \"autoCropWidth\", $event.target.value)\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"高度:  \")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.autoCropHeight,\n                  expression: \"option.autoCropHeight\"\n                }\n              ],\n              attrs: { type: \"number\" },\n              domProps: { value: _vm.option.autoCropHeight },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.option, \"autoCropHeight\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [\n              _vm._v(\"截图框是否限制在图片里(只有在自动生成截图框时才能生效)\")\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.centerBox,\n                  expression: \"option.centerBox\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.option.centerBox)\n                  ? _vm._i(_vm.option.centerBox, null) > -1\n                  : _vm.option.centerBox\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.option.centerBox,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.option, \"centerBox\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.option,\n                          \"centerBox\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.option, \"centerBox\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", [_vm._v(\"centerBox: \" + _vm._s(_vm.option.centerBox))])\n          ]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"span\", [_vm._v(\"是否按照截图框比例输出 默认为1 \")]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.enlarge,\n                  expression: \"option.enlarge\"\n                }\n              ],\n              attrs: { type: \"number\" },\n              domProps: { value: _vm.option.enlarge },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.option, \"enlarge\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"p\", [_vm._v(\"输出图片格式\")]),\n          _c(\"label\", { staticClass: \"c-item\" }, [\n            _c(\"label\", [\n              _vm._v(\"jpg  \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.option.outputType,\n                    expression: \"option.outputType\"\n                  }\n                ],\n                attrs: { type: \"radio\", name: \"type\", value: \"jpeg\" },\n                domProps: { checked: _vm._q(_vm.option.outputType, \"jpeg\") },\n                on: {\n                  change: function($event) {\n                    return _vm.$set(_vm.option, \"outputType\", \"jpeg\")\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", [\n              _vm._v(\"png  \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.option.outputType,\n                    expression: \"option.outputType\"\n                  }\n                ],\n                attrs: { type: \"radio\", name: \"type\", value: \"png\" },\n                domProps: { checked: _vm._q(_vm.option.outputType, \"png\") },\n                on: {\n                  change: function($event) {\n                    return _vm.$set(_vm.option, \"outputType\", \"png\")\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", [\n              _vm._v(\"webp \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.option.outputType,\n                    expression: \"option.outputType\"\n                  }\n                ],\n                attrs: { type: \"radio\", name: \"type\", value: \"webp\" },\n                domProps: { checked: _vm._q(_vm.option.outputType, \"webp\") },\n                on: {\n                  change: function($event) {\n                    return _vm.$set(_vm.option, \"outputType\", \"webp\")\n                  }\n                }\n              })\n            ])\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}