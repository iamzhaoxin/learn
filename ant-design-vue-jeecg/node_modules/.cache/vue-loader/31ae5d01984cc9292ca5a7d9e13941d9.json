{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {filterObj} from '@/utils/util'\nimport {queryDepartTreeList, getUserList, queryUserByDepId} from '@/api/api'\n\nexport default {\n  name: 'JSelectUserByDepModal',\n  components: {},\n  props: ['modalWidth', 'multi', 'userIds'],\n  data() {\n    return {\n      queryParam: {\n        username: \"\",\n      },\n      columns: [\n        {\n          title: '用户账号',\n          align: 'center',\n          dataIndex: 'username'\n        },\n        {\n          title: '用户姓名',\n          align: 'center',\n          dataIndex: 'realname'\n        },\n        {\n          title: '性别',\n          align: 'center',\n          dataIndex: 'sex',\n          customRender: function (text) {\n            if (text === 1) {\n              return '男'\n            } else if (text === 2) {\n              return '女'\n            } else {\n              return text\n            }\n          }\n        },\n        {\n          title: '手机',\n          align: 'center',\n          dataIndex: 'phone'\n        },\n        {\n          title: '部门',\n          align: 'center',\n          dataIndex: 'orgCodeTxt'\n        }\n      ],\n      scrollTrigger: {},\n      dataSource: [],\n      selectedRowKeys: [],\n      selectUserRows: [],\n      selectUserIds: [],\n      title: '根据部门选择用户',\n      ipagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: (total, range) => {\n          return range[0] + '-' + range[1] + ' 共' + total + '条'\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      selectedDepIds: [],\n      departTree: [],\n      visible: false,\n      form: this.$form.createForm(this),\n      loading: false,\n      expandedKeys: [],\n    }\n  },\n  computed: {\n    // 计算属性的 getter\n    getType: function () {\n      return this.multi == true ? 'checkbox' : 'radio';\n    }\n  },\n  watch: {\n    userIds: {\n      immediate: true,\n      handler() {\n        this.initUserNames()\n      }\n    },\n  },\n  created() {\n    // 该方法触发屏幕自适应\n    this.resetScreenSize();\n    this.loadData()\n  },\n  methods: {\n    initUserNames() {\n      if (this.userIds) {\n        // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\n        let values = this.userIds.split(',') + ','\n        getUserList({\n          username: values,\n          pageNo: 1,\n          pageSize: values.length\n        }).then((res) => {\n          if (res.success) {\n            let selectedRowKeys = []\n            let realNames = []\n            res.result.records.forEach(user => {\n              realNames.push(user['realname'])\n              selectedRowKeys.push(user['id'])\n            })\n            this.selectedRowKeys = selectedRowKeys\n            this.$emit('initComp', realNames.join(','))\n          }\n        })\n      } else {\n        // JSelectUserByDep组件bug issues/I16634\n        this.$emit('initComp', '')\n      }\n    },\n    async loadData(arg) {\n      if (arg === 1) {\n        this.ipagination.current = 1;\n      }\n      if (this.selectedDepIds && this.selectedDepIds.length > 0) {\n        await this.initQueryUserByDepId(this.selectedDepIds)\n      } else {\n        this.loading = true\n        let params = this.getQueryParams()//查询条件\n        await getUserList(params).then((res) => {\n          if (res.success) {\n            this.dataSource = res.result.records\n            this.ipagination.total = res.result.total\n          }\n        }).finally(() => {\n          this.loading = false\n        })\n      }\n    },\n    // 触发屏幕自适应\n    resetScreenSize() {\n      let screenWidth = document.body.clientWidth;\n      if (screenWidth < 500) {\n        this.scrollTrigger = {x: 800};\n      } else {\n        this.scrollTrigger = {};\n      }\n    },\n    showModal() {\n      this.visible = true;\n      this.queryDepartTree();\n      this.initUserNames()\n      this.loadData();\n      this.form.resetFields();\n    },\n    getQueryParams() {\n      let param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n    getQueryField() {\n      let str = 'id,';\n      for (let a = 0; a < this.columns.length; a++) {\n        str += ',' + this.columns[a].dataIndex;\n      }\n      return str;\n    },\n    searchReset(num) {\n      let that = this;\n      if (num !== 0) {\n        that.queryParam = {};\n        that.loadData(1);\n      }\n      that.selectedRowKeys = [];\n      that.selectUserIds = [];\n      that.selectedDepIds = [];\n    },\n    close() {\n      this.searchReset(0);\n      this.visible = false;\n    },\n    handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n      }\n      this.ipagination = pagination;\n      this.loadData();\n    },\n    handleSubmit() {\n      let that = this;\n      this.getSelectUserRows();\n      that.$emit('ok', that.selectUserRows, that.selectUserIds);\n      that.searchReset(0)\n      that.close();\n    },\n    //获取选择用户信息\n    getSelectUserRows(rowId) {\n      let dataSource = this.dataSource;\n      let userIds = \"\";\n      this.selectUserRows = [];\n      for (let i = 0, len = dataSource.length; i < len; i++) {\n        if (this.selectedRowKeys.includes(dataSource[i].id)) {\n          this.selectUserRows.push(dataSource[i]);\n          userIds = userIds + \",\" + dataSource[i].username\n        }\n      }\n      this.selectUserIds = userIds.substring(1);\n    },\n    // 点击树节点,筛选出对应的用户\n    onDepSelect(selectedDepIds) {\n      if (selectedDepIds[0] != null) {\n        this.initQueryUserByDepId(selectedDepIds); // 调用方法根据选选择的id查询用户信息\n        if (this.selectedDepIds[0] !== selectedDepIds[0]) {\n          this.selectedDepIds = [selectedDepIds[0]];\n        }\n      }\n    },\n    onSelectChange(selectedRowKeys, selectionRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectionRows = selectionRows;\n    },\n    onSearch() {\n      this.loadData(1);\n    },\n    // 根据选择的id来查询用户信息\n    initQueryUserByDepId(selectedDepIds) {\n      this.loading = true\n      return queryUserByDepId({id: selectedDepIds.toString()}).then((res) => {\n        if (res.success) {\n          this.dataSource = res.result;\n          this.ipagination.total = res.result.length;\n        }\n      }).finally(() => {\n        this.loading = false\n      })\n    },\n    queryDepartTree() {\n      queryDepartTreeList().then((res) => {\n        if (res.success) {\n          this.departTree = res.result;\n          // 默认展开父节点\n          this.expandedKeys = this.departTree.map(item => item.id)\n        }\n      })\n    },\n    modalFormOk() {\n      this.loadData();\n    }\n  }\n}\n",{"version":3,"sources":["JSelectUserByDepModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"JSelectUserByDepModal.vue","sourceRoot":"src/components/jeecgbiz/modal","sourcesContent":["<template>\n  <j-modal\n    :width=\"modalWidth\"\n    :visible=\"visible\"\n    :title=\"title\"\n    switchFullscreen\n    @ok=\"handleSubmit\"\n    @cancel=\"close\"\n    style=\"top:50px\"\n    cancelText=\"关闭\"\n  >\n    <a-row :gutter=\"10\" style=\"background-color: #ececec; padding: 10px; margin: -10px\">\n      <a-col :md=\"6\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          <!--组织机构-->\n          <a-directory-tree\n            selectable\n            :selectedKeys=\"selectedDepIds\"\n            :checkStrictly=\"true\"\n            :dropdownStyle=\"{maxHeight:'200px',overflow:'auto'}\"\n            :treeData=\"departTree\"\n            :expandAction=\"false\"\n            :expandedKeys.sync=\"expandedKeys\"\n            @select=\"onDepSelect\"\n          />\n        </a-card>\n      </a-col>\n      <a-col :md=\"18\" :sm=\"24\">\n        <a-card :bordered=\"false\">\n          用户账号:\n          <a-input-search\n            :style=\"{width:'150px',marginBottom:'15px'}\"\n            placeholder=\"请输入账号\"\n            v-model=\"queryParam.username\"\n            @search=\"onSearch\"\n          ></a-input-search>\n          <a-button @click=\"searchReset(1)\" style=\"margin-left: 20px\" icon=\"redo\">重置</a-button>\n          <!--用户列表-->\n          <a-table\n            ref=\"table\"\n            :scroll=\"scrollTrigger\"\n            size=\"middle\"\n            rowKey=\"id\"\n            :columns=\"columns\"\n            :dataSource=\"dataSource\"\n            :pagination=\"ipagination\"\n            :rowSelection=\"{selectedRowKeys: selectedRowKeys, onChange: onSelectChange,type: getType}\"\n            :loading=\"loading\"\n            @change=\"handleTableChange\">\n          </a-table>\n        </a-card>\n      </a-col>\n    </a-row>\n  </j-modal>\n</template>\n\n<script>\n  import {filterObj} from '@/utils/util'\n  import {queryDepartTreeList, getUserList, queryUserByDepId} from '@/api/api'\n\n  export default {\n    name: 'JSelectUserByDepModal',\n    components: {},\n    props: ['modalWidth', 'multi', 'userIds'],\n    data() {\n      return {\n        queryParam: {\n          username: \"\",\n        },\n        columns: [\n          {\n            title: '用户账号',\n            align: 'center',\n            dataIndex: 'username'\n          },\n          {\n            title: '用户姓名',\n            align: 'center',\n            dataIndex: 'realname'\n          },\n          {\n            title: '性别',\n            align: 'center',\n            dataIndex: 'sex',\n            customRender: function (text) {\n              if (text === 1) {\n                return '男'\n              } else if (text === 2) {\n                return '女'\n              } else {\n                return text\n              }\n            }\n          },\n          {\n            title: '手机',\n            align: 'center',\n            dataIndex: 'phone'\n          },\n          {\n            title: '部门',\n            align: 'center',\n            dataIndex: 'orgCodeTxt'\n          }\n        ],\n        scrollTrigger: {},\n        dataSource: [],\n        selectedRowKeys: [],\n        selectUserRows: [],\n        selectUserIds: [],\n        title: '根据部门选择用户',\n        ipagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        },\n        isorter: {\n          column: 'createTime',\n          order: 'desc'\n        },\n        selectedDepIds: [],\n        departTree: [],\n        visible: false,\n        form: this.$form.createForm(this),\n        loading: false,\n        expandedKeys: [],\n      }\n    },\n    computed: {\n      // 计算属性的 getter\n      getType: function () {\n        return this.multi == true ? 'checkbox' : 'radio';\n      }\n    },\n    watch: {\n      userIds: {\n        immediate: true,\n        handler() {\n          this.initUserNames()\n        }\n      },\n    },\n    created() {\n      // 该方法触发屏幕自适应\n      this.resetScreenSize();\n      this.loadData()\n    },\n    methods: {\n      initUserNames() {\n        if (this.userIds) {\n          // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\n          let values = this.userIds.split(',') + ','\n          getUserList({\n            username: values,\n            pageNo: 1,\n            pageSize: values.length\n          }).then((res) => {\n            if (res.success) {\n              let selectedRowKeys = []\n              let realNames = []\n              res.result.records.forEach(user => {\n                realNames.push(user['realname'])\n                selectedRowKeys.push(user['id'])\n              })\n              this.selectedRowKeys = selectedRowKeys\n              this.$emit('initComp', realNames.join(','))\n            }\n          })\n        } else {\n          // JSelectUserByDep组件bug issues/I16634\n          this.$emit('initComp', '')\n        }\n      },\n      async loadData(arg) {\n        if (arg === 1) {\n          this.ipagination.current = 1;\n        }\n        if (this.selectedDepIds && this.selectedDepIds.length > 0) {\n          await this.initQueryUserByDepId(this.selectedDepIds)\n        } else {\n          this.loading = true\n          let params = this.getQueryParams()//查询条件\n          await getUserList(params).then((res) => {\n            if (res.success) {\n              this.dataSource = res.result.records\n              this.ipagination.total = res.result.total\n            }\n          }).finally(() => {\n            this.loading = false\n          })\n        }\n      },\n      // 触发屏幕自适应\n      resetScreenSize() {\n        let screenWidth = document.body.clientWidth;\n        if (screenWidth < 500) {\n          this.scrollTrigger = {x: 800};\n        } else {\n          this.scrollTrigger = {};\n        }\n      },\n      showModal() {\n        this.visible = true;\n        this.queryDepartTree();\n        this.initUserNames()\n        this.loadData();\n        this.form.resetFields();\n      },\n      getQueryParams() {\n        let param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        return filterObj(param);\n      },\n      getQueryField() {\n        let str = 'id,';\n        for (let a = 0; a < this.columns.length; a++) {\n          str += ',' + this.columns[a].dataIndex;\n        }\n        return str;\n      },\n      searchReset(num) {\n        let that = this;\n        if (num !== 0) {\n          that.queryParam = {};\n          that.loadData(1);\n        }\n        that.selectedRowKeys = [];\n        that.selectUserIds = [];\n        that.selectedDepIds = [];\n      },\n      close() {\n        this.searchReset(0);\n        this.visible = false;\n      },\n      handleTableChange(pagination, filters, sorter) {\n        //TODO 筛选\n        if (Object.keys(sorter).length > 0) {\n          this.isorter.column = sorter.field;\n          this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n        }\n        this.ipagination = pagination;\n        this.loadData();\n      },\n      handleSubmit() {\n        let that = this;\n        this.getSelectUserRows();\n        that.$emit('ok', that.selectUserRows, that.selectUserIds);\n        that.searchReset(0)\n        that.close();\n      },\n      //获取选择用户信息\n      getSelectUserRows(rowId) {\n        let dataSource = this.dataSource;\n        let userIds = \"\";\n        this.selectUserRows = [];\n        for (let i = 0, len = dataSource.length; i < len; i++) {\n          if (this.selectedRowKeys.includes(dataSource[i].id)) {\n            this.selectUserRows.push(dataSource[i]);\n            userIds = userIds + \",\" + dataSource[i].username\n          }\n        }\n        this.selectUserIds = userIds.substring(1);\n      },\n      // 点击树节点,筛选出对应的用户\n      onDepSelect(selectedDepIds) {\n        if (selectedDepIds[0] != null) {\n          this.initQueryUserByDepId(selectedDepIds); // 调用方法根据选选择的id查询用户信息\n          if (this.selectedDepIds[0] !== selectedDepIds[0]) {\n            this.selectedDepIds = [selectedDepIds[0]];\n          }\n        }\n      },\n      onSelectChange(selectedRowKeys, selectionRows) {\n        this.selectedRowKeys = selectedRowKeys;\n        this.selectionRows = selectionRows;\n      },\n      onSearch() {\n        this.loadData(1);\n      },\n      // 根据选择的id来查询用户信息\n      initQueryUserByDepId(selectedDepIds) {\n        this.loading = true\n        return queryUserByDepId({id: selectedDepIds.toString()}).then((res) => {\n          if (res.success) {\n            this.dataSource = res.result;\n            this.ipagination.total = res.result.length;\n          }\n        }).finally(() => {\n          this.loading = false\n        })\n      },\n      queryDepartTree() {\n        queryDepartTreeList().then((res) => {\n          if (res.success) {\n            this.departTree = res.result;\n            // 默认展开父节点\n            this.expandedKeys = this.departTree.map(item => item.id)\n          }\n        })\n      },\n      modalFormOk() {\n        this.loadData();\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .ant-table-tbody .ant-table-row td {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  #components-layout-demo-custom-trigger .trigger {\n    font-size: 18px;\n    line-height: 64px;\n    padding: 0 24px;\n    cursor: pointer;\n    transition: color .3s;\n  }\n</style>"]}]}