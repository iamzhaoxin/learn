{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeSubPopover.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\JVxeSubPopover.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport domAlign from 'dom-align'\nimport { getParentNodeByTagName } from '../utils/vxeUtils'\nimport { cloneObject, triggerWindowResizeEvent } from '@/utils/util'\n\nexport default {\n  name: 'JVxeSubPopover',\n  data() {\n    return {\n      visible: false,\n      // 当前行\n      row: null,\n      column: null,\n\n      overlayStyle: {\n        width: null,\n        zIndex: 100\n      },\n    }\n  },\n  created() {\n  },\n  methods: {\n\n    toggle(event) {\n      if (this.row == null) {\n        this.open(event)\n      } else {\n        this.row.id === event.row.id ? this.close() : this.reopen(event)\n      }\n    },\n\n    open(event, level = 0) {\n      if (level > 3) {\n        this.$message.error('打开子表失败')\n        console.warn('【JVxeSubPopover】打开子表失败')\n        return\n      }\n\n      let {row, column, $table, $event: {target}} = event\n      this.row = cloneObject(row)\n      this.column = column\n\n      let className = target.className || ''\n      className = typeof className === 'string' ? className : className.toString()\n\n      // 点击的是expand，不做处理\n      if (className.includes('vxe-table--expand-btn')) {\n        return\n      }\n      // 点击的是checkbox，不做处理\n      if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n        return\n      }\n      // 点击的是radio，不做处理\n      if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n        return\n      }\n      let table = $table.$el\n      let tr = getParentNodeByTagName(target, 'tr')\n      if (table && tr) {\n        let clientWidth = table.clientWidth\n        let clientHeight = tr.clientHeight\n        this.$refs.div.style.width = clientWidth + 'px'\n        this.$refs.div.style.height = clientHeight + 'px'\n        this.overlayStyle.width = Number.parseInt((clientWidth - clientWidth * 0.04)) + 'px'\n        this.overlayStyle.maxWidth = this.overlayStyle.width\n        domAlign(this.$refs.div, tr, {\n          points: ['tl', 'tl'],\n          offset: [0, 0],\n          overflow: {\n            alwaysByViewport: true\n          },\n        })\n        this.$nextTick(() => {\n          this.visible = true\n          this.$nextTick(() => {\n            triggerWindowResizeEvent()\n          })\n        })\n      } else {\n        let num = ++level\n        console.warn('【JVxeSubPopover】table or tr 获取失败，正在进行第 ' + num + '次重试', {event, table, tr})\n        window.setTimeout(() => this.open(event, num), 100)\n      }\n    },\n    close() {\n      if (this.visible) {\n        this.row = null\n        this.visible = false\n      }\n    },\n    reopen(event) {\n      this.close()\n      this.open(event)\n    },\n  },\n}\n",{"version":3,"sources":["JVxeSubPopover.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JVxeSubPopover.vue","sourceRoot":"src/components/jeecg/JVxeTable/components","sourcesContent":["<template>\n  <a-popover :visible=\"visible\" placement=\"bottom\" overlayClassName=\"j-vxe-popover-overlay\" :overlayStyle=\"overlayStyle\">\n    <div class=\"j-vxe-popover-title\" slot=\"title\">\n      <div>子表</div>\n      <div class=\"j-vxe-popover-title-close\" @click=\"close\">\n        <a-icon type=\"close\"/>\n      </div>\n    </div>\n    <template slot=\"content\">\n      <transition name=\"fade\">\n        <slot v-if=\"visible\" name=\"subForm\" :row=\"row\" :column=\"column\"/>\n      </transition>\n    </template>\n\n    <div ref=\"div\" class=\"j-vxe-popover-div\"></div>\n\n  </a-popover>\n</template>\n<script>\n  import domAlign from 'dom-align'\n  import { getParentNodeByTagName } from '../utils/vxeUtils'\n  import { cloneObject, triggerWindowResizeEvent } from '@/utils/util'\n\n  export default {\n    name: 'JVxeSubPopover',\n    data() {\n      return {\n        visible: false,\n        // 当前行\n        row: null,\n        column: null,\n\n        overlayStyle: {\n          width: null,\n          zIndex: 100\n        },\n      }\n    },\n    created() {\n    },\n    methods: {\n\n      toggle(event) {\n        if (this.row == null) {\n          this.open(event)\n        } else {\n          this.row.id === event.row.id ? this.close() : this.reopen(event)\n        }\n      },\n\n      open(event, level = 0) {\n        if (level > 3) {\n          this.$message.error('打开子表失败')\n          console.warn('【JVxeSubPopover】打开子表失败')\n          return\n        }\n\n        let {row, column, $table, $event: {target}} = event\n        this.row = cloneObject(row)\n        this.column = column\n\n        let className = target.className || ''\n        className = typeof className === 'string' ? className : className.toString()\n\n        // 点击的是expand，不做处理\n        if (className.includes('vxe-table--expand-btn')) {\n          return\n        }\n        // 点击的是checkbox，不做处理\n        if (className.includes('vxe-checkbox--icon') || className.includes('vxe-cell--checkbox')) {\n          return\n        }\n        // 点击的是radio，不做处理\n        if (className.includes('vxe-radio--icon') || className.includes('vxe-cell--radio')) {\n          return\n        }\n        let table = $table.$el\n        let tr = getParentNodeByTagName(target, 'tr')\n        if (table && tr) {\n          let clientWidth = table.clientWidth\n          let clientHeight = tr.clientHeight\n          this.$refs.div.style.width = clientWidth + 'px'\n          this.$refs.div.style.height = clientHeight + 'px'\n          this.overlayStyle.width = Number.parseInt((clientWidth - clientWidth * 0.04)) + 'px'\n          this.overlayStyle.maxWidth = this.overlayStyle.width\n          domAlign(this.$refs.div, tr, {\n            points: ['tl', 'tl'],\n            offset: [0, 0],\n            overflow: {\n              alwaysByViewport: true\n            },\n          })\n          this.$nextTick(() => {\n            this.visible = true\n            this.$nextTick(() => {\n              triggerWindowResizeEvent()\n            })\n          })\n        } else {\n          let num = ++level\n          console.warn('【JVxeSubPopover】table or tr 获取失败，正在进行第 ' + num + '次重试', {event, table, tr})\n          window.setTimeout(() => this.open(event, num), 100)\n        }\n      },\n      close() {\n        if (this.visible) {\n          this.row = null\n          this.visible = false\n        }\n      },\n      reopen(event) {\n        this.close()\n        this.open(event)\n      },\n    },\n  }\n</script>\n<style scoped lang=\"less\">\n  .j-vxe-popover-title {\n    .j-vxe-popover-title-close {\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 31px;\n      height: 31px;\n      text-align: center;\n      line-height: 31px;\n      color: rgba(0, 0, 0, 0.45);\n      cursor: pointer;\n      transition: color 300ms;\n\n      &:hover {\n        color: rgba(0, 0, 0, 0.8);\n      }\n    }\n  }\n\n  .j-vxe-popover-div {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 31px;\n    z-index: -1;\n  }\n</style>\n<style lang=\"less\">\n  .j-vxe-popover-overlay.ant-popover {\n    .ant-popover-title {\n      position: relative;\n    }\n  }\n\n  .fade-enter-active,\n  .fade-leave-active {\n    opacity: 1;\n    transition: opacity 0.5s;\n  }\n\n  .fade-enter,\n  .fade-leave-to {\n    opacity: 0;\n  }\n</style>"]}]}