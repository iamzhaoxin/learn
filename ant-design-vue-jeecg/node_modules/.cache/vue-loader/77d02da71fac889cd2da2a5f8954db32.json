{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\dynamic\\JSqlCodeEditorDyn.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\dynamic\\JSqlCodeEditorDyn.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport load from './load'\nimport '@/assets/less/codemirror_idea.css'\nimport './cm_sql_hint.js'\nimport { sql_keyword } from './Resource'\n\n\nexport default {\n  name: 'JSqlCodeEditorDyn',\n  props:{\n    id: {\n      type: String,\n      default: function() {\n        return 'vue-editor-' + new Date() + ((Math.random() * 1000).toFixed(0) + '')\n      }\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    // 显示行号\n    lineNumbers: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 999\n    },\n    autoHeight: {\n      type: [String, Boolean],\n      default: true\n    },\n    // 不自适应高度的情况下生效的固定高度\n    height: {\n      type: [String, Number],\n      default: '240px'\n    },\n    autoHeight: {\n      type: [String, Boolean],\n      default: true\n    },\n    // 是否显示全屏按钮\n    fullScreen: {\n      type: Boolean,\n      default: false\n    },\n    autoHint:{\n      type: Boolean,\n      default: true\n    }\n\n  },\n  data(){\n    return {\n      dynamicId: this.id,\n      coder: '',\n      hasCode: false,\n      code: '',\n      // code 编辑器 是否全屏\n      fullCoder: false,\n      iconType: 'fullscreen',\n    }\n  },\n  computed:{\n    placeholderShow() {\n      if (this.placeholder == null) {\n        return `请在此输入javascript代码`\n      } else {\n        return this.placeholder\n      }\n    },\n    nullTipStyle(){\n      if (this.lineNumbers) {\n        return { left: '36px' }\n      } else {\n        return { left: '12px' }\n      }\n    },\n    isAutoHeight() {\n      let {autoHeight} = this\n      if (typeof autoHeight === 'string' && autoHeight.toLowerCase().trim() === '!ie') {\n        autoHeight = !(isIE() || isIE11())\n      } else {\n        autoHeight = true\n      }\n      return autoHeight\n    },\n    fullScreenParentProps() {\n      let props = {\n        class: {\n          'full-screen-parent': true,\n          'full-screen': this.fullCoder,\n          'auto-height': this.isAutoHeight\n        },\n        style: {}\n      }\n      if (this.fullCoder) {\n        props.style['z-index'] = this.zIndex\n      }\n      if (!this.isAutoHeight) {\n        props.style['height'] = (typeof this.height === 'number' ? this.height + 'px' : this.height)\n      }\n      return props\n    }\n  },\n  watch: {\n    fullCoder:{\n      handler(value) {\n        if(value){\n          this.iconType=\"fullscreen-exit\"\n        }else{\n          this.iconType=\"fullscreen\"\n        }\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods:{\n    init(){\n      this.main();\n    },\n    main(){\n      let obj = document.getElementById(this.dynamicId);\n      const that = this;\n      let editor = CodeMirror.fromTextArea(obj,{\n        theme:'idea',\n        lineNumbers: this.lineNumbers,\n        lineWrapping: true,\n        mode: \"sql\",\n        indentUnit: 1,\n        indentWithTabs: true,\n        styleActiveLine: true,\n        /* styleSelectedText: false, */\n        extraKeys: {\n          \"F11\": function(cm) {\n            that.fullCoder = !that.fullCoder\n            cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n          },\n          \"Esc\": function(cm) {\n            that.fullCoder = false\n            if (cm.getOption(\"fullScreen\")) cm.setOption(\"fullScreen\", false);\n          },\n          \"Alt-/\":  function(cm) {\n            cm.showHint();\n          },\n          \"Tab\": (cm) => {\n            if (cm.somethingSelected()) {\n              cm.indentSelection('add');\n            } else {\n              //cm.indentLine(cm.getCursor().line, \"add\");\n              //走两格 第三格输入\n              cm.replaceSelection(Array(3).join(\" \"), \"end\", \"+input\");\n            }\n          },\n          \"Shift-Tab\": (cm) => {\n            if (cm.somethingSelected()) {\n              cm.indentSelection('subtract');\n            } else {\n              // cm.indentLine(cm.getCursor().line, \"subtract\");\n              const cursor = cm.getCursor();\n              // 光标回退 indexUnit 字符\n              cm.setCursor({line: cursor.line, ch: cursor.ch - 4});\n            }\n            return ;\n          }\n        }\n      })\n      this.coder = editor\n      this.addEvent();\n      this.setCoderValue();\n      this.addSystemHint();\n    },\n    setCoderValue(){\n      if(this.value||this.code){\n        this.hasCode=true\n        this.setCodeContent(this.value || this.code)\n      }else{\n        this.coder.setValue('')\n        this.hasCode=false\n      }\n    },\n    getCodeContent(){\n      return this.code\n    },\n    setCodeContent(val){\n      setTimeout(()=>{\n        if(!val){\n          this.coder.setValue('')\n        }else{\n          this.coder.setValue(val)\n        }\n      },300)\n    },\n    addSystemHint(){\n      this.coder.setOption('hintOptions', {\n        completeSingle: false,\n        tables: sql_keyword\n      });\n    },\n    addEvent(){\n      if(this.autoHint){\n        this.coder.on('cursorActivity', ()=>{\n          this.coder.showHint();\n        });\n      }\n      this.coder.on('change', (coder) => {\n        this.code = coder.getValue()\n        if(this.code){\n          this.hasCode=true\n        }else{\n          this.hasCode=false\n        }\n        if (this.$emit) {\n          this.$emit('input', this.code)\n        }\n      });\n      this.coder.on('focus', () => {\n        this.hasCode=true\n      });\n      this.coder.on('blur', () => {\n        if(this.code){\n          this.hasCode=true\n        }else{\n          this.hasCode=false\n        }\n      });\n    },\n    loadResource(src,type){\n      return new Promise((resolve,reject)=>{\n        load(src,type,(msg)=>{\n          if(!msg){\n            resolve();\n          }else{\n            reject(msg)\n          }\n        })\n      })\n    },\n    nullTipClick(){\n      this.coder.focus()\n    },\n    fullToggle(){\n      this.fullCoder = !this.fullCoder\n      this.coder.setOption(\"fullScreen\", this.fullCoder);\n    }\n\n  }\n\n\n}\n",{"version":3,"sources":["JSqlCodeEditorDyn.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA","file":"JSqlCodeEditorDyn.vue","sourceRoot":"src/components/jeecg/dynamic","sourcesContent":["<template>\n  <div class=\"jeecg-editor-ty\" :class=\"fullCoder?'jeecg-editor-max':'jeecg-editor-min'\">\n    <a-icon v-if=\"fullScreen\" class=\"full-screen-icon\" :type=\"iconType\" @click=\"()=>fullCoder=!fullCoder\"/>\n    <textarea :id=\"dynamicId\" />\n    <span @click=\"nullTipClick\" class=\"null-tip\" :class=\"{'null-tip-hidden': hasCode}\" :style=\"nullTipStyle\">{{ placeholderShow }}</span>\n  </div>\n</template>\n\n<script>\n  import load from './load'\n  import '@/assets/less/codemirror_idea.css'\n  import './cm_sql_hint.js'\n  import { sql_keyword } from './Resource'\n\n\n  export default {\n    name: 'JSqlCodeEditorDyn',\n    props:{\n      id: {\n        type: String,\n        default: function() {\n          return 'vue-editor-' + new Date() + ((Math.random() * 1000).toFixed(0) + '')\n        }\n      },\n      value: {\n        type: String,\n        default: ''\n      },\n      // 显示行号\n      lineNumbers: {\n        type: Boolean,\n        default: true\n      },\n      placeholder: {\n        type: String,\n        default: ''\n      },\n      zIndex: {\n        type: [Number, String],\n        default: 999\n      },\n      autoHeight: {\n        type: [String, Boolean],\n        default: true\n      },\n      // 不自适应高度的情况下生效的固定高度\n      height: {\n        type: [String, Number],\n        default: '240px'\n      },\n      autoHeight: {\n        type: [String, Boolean],\n        default: true\n      },\n      // 是否显示全屏按钮\n      fullScreen: {\n        type: Boolean,\n        default: false\n      },\n      autoHint:{\n        type: Boolean,\n        default: true\n      }\n\n    },\n    data(){\n      return {\n        dynamicId: this.id,\n        coder: '',\n        hasCode: false,\n        code: '',\n        // code 编辑器 是否全屏\n        fullCoder: false,\n        iconType: 'fullscreen',\n      }\n    },\n    computed:{\n      placeholderShow() {\n        if (this.placeholder == null) {\n          return `请在此输入javascript代码`\n        } else {\n          return this.placeholder\n        }\n      },\n      nullTipStyle(){\n        if (this.lineNumbers) {\n          return { left: '36px' }\n        } else {\n          return { left: '12px' }\n        }\n      },\n      isAutoHeight() {\n        let {autoHeight} = this\n        if (typeof autoHeight === 'string' && autoHeight.toLowerCase().trim() === '!ie') {\n          autoHeight = !(isIE() || isIE11())\n        } else {\n          autoHeight = true\n        }\n        return autoHeight\n      },\n      fullScreenParentProps() {\n        let props = {\n          class: {\n            'full-screen-parent': true,\n            'full-screen': this.fullCoder,\n            'auto-height': this.isAutoHeight\n          },\n          style: {}\n        }\n        if (this.fullCoder) {\n          props.style['z-index'] = this.zIndex\n        }\n        if (!this.isAutoHeight) {\n          props.style['height'] = (typeof this.height === 'number' ? this.height + 'px' : this.height)\n        }\n        return props\n      }\n    },\n    watch: {\n      fullCoder:{\n        handler(value) {\n          if(value){\n            this.iconType=\"fullscreen-exit\"\n          }else{\n            this.iconType=\"fullscreen\"\n          }\n        }\n      }\n    },\n    mounted() {\n      this.init()\n    },\n    methods:{\n      init(){\n        this.main();\n      },\n      main(){\n        let obj = document.getElementById(this.dynamicId);\n        const that = this;\n        let editor = CodeMirror.fromTextArea(obj,{\n          theme:'idea',\n          lineNumbers: this.lineNumbers,\n          lineWrapping: true,\n          mode: \"sql\",\n          indentUnit: 1,\n          indentWithTabs: true,\n          styleActiveLine: true,\n          /* styleSelectedText: false, */\n          extraKeys: {\n            \"F11\": function(cm) {\n              that.fullCoder = !that.fullCoder\n              cm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n            },\n            \"Esc\": function(cm) {\n              that.fullCoder = false\n              if (cm.getOption(\"fullScreen\")) cm.setOption(\"fullScreen\", false);\n            },\n            \"Alt-/\":  function(cm) {\n              cm.showHint();\n            },\n            \"Tab\": (cm) => {\n              if (cm.somethingSelected()) {\n                cm.indentSelection('add');\n              } else {\n                //cm.indentLine(cm.getCursor().line, \"add\");\n                //走两格 第三格输入\n                cm.replaceSelection(Array(3).join(\" \"), \"end\", \"+input\");\n              }\n            },\n            \"Shift-Tab\": (cm) => {\n              if (cm.somethingSelected()) {\n                cm.indentSelection('subtract');\n              } else {\n                // cm.indentLine(cm.getCursor().line, \"subtract\");\n                const cursor = cm.getCursor();\n                // 光标回退 indexUnit 字符\n                cm.setCursor({line: cursor.line, ch: cursor.ch - 4});\n              }\n              return ;\n            }\n          }\n        })\n        this.coder = editor\n        this.addEvent();\n        this.setCoderValue();\n        this.addSystemHint();\n      },\n      setCoderValue(){\n        if(this.value||this.code){\n          this.hasCode=true\n          this.setCodeContent(this.value || this.code)\n        }else{\n          this.coder.setValue('')\n          this.hasCode=false\n        }\n      },\n      getCodeContent(){\n        return this.code\n      },\n      setCodeContent(val){\n        setTimeout(()=>{\n          if(!val){\n            this.coder.setValue('')\n          }else{\n            this.coder.setValue(val)\n          }\n        },300)\n      },\n      addSystemHint(){\n        this.coder.setOption('hintOptions', {\n          completeSingle: false,\n          tables: sql_keyword\n        });\n      },\n      addEvent(){\n        if(this.autoHint){\n          this.coder.on('cursorActivity', ()=>{\n            this.coder.showHint();\n          });\n        }\n        this.coder.on('change', (coder) => {\n          this.code = coder.getValue()\n          if(this.code){\n            this.hasCode=true\n          }else{\n            this.hasCode=false\n          }\n          if (this.$emit) {\n            this.$emit('input', this.code)\n          }\n        });\n        this.coder.on('focus', () => {\n          this.hasCode=true\n        });\n        this.coder.on('blur', () => {\n          if(this.code){\n            this.hasCode=true\n          }else{\n            this.hasCode=false\n          }\n        });\n      },\n      loadResource(src,type){\n        return new Promise((resolve,reject)=>{\n          load(src,type,(msg)=>{\n            if(!msg){\n              resolve();\n            }else{\n              reject(msg)\n            }\n          })\n        })\n      },\n      nullTipClick(){\n        this.coder.focus()\n      },\n      fullToggle(){\n        this.fullCoder = !this.fullCoder\n        this.coder.setOption(\"fullScreen\", this.fullCoder);\n      }\n\n    }\n\n\n  }\n</script>\n<style lang=\"less\" >\n  .jeecg-editor-ty{\n    position: relative;\n\n    .full-screen-icon {\n      opacity: 0;\n      color: black;\n      width: 20px;\n      height: 20px;\n      line-height: 24px;\n      background-color: white;\n      position: absolute;\n      top: 4px;\n      right: 2px;\n      z-index: 9;\n      cursor: pointer;\n      transition: opacity 0.3s;\n    }\n    &:hover {\n      .full-screen-icon {\n        opacity: 1;\n\n        &:hover {\n          background-color: rgba(255, 255, 255, 0.88);\n        }\n      }\n    }\n\n    .null-tip{\n      position: absolute;\n      top: 4px;\n      left: 36px;\n      z-index: 10;\n      font-size:16px;\n      color: #acaaaac9;\n      line-height: initial;\n    }\n    .null-tip-hidden{\n      display: none;\n    }\n  }\n  .jeecg-editor-max{\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 999;\n    height: 100%;\n    width: 100% !important;\n\n    .CodeMirror{\n      position: inherit !important;\n      width: 100%;\n      height: 100%;\n    }\n    .full-screen-icon{\n      z-index:9999;\n    }\n  }\n</style>"]}]}