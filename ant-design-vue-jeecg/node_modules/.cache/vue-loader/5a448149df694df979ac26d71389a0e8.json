{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\DictList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\DictList.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { filterObj } from '@/utils/util';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin'\nimport DictModal from './modules/DictModal'\nimport DictItemList from './DictItemList'\nimport DictDeleteList from './DictDeleteList'\nimport { getAction } from '@/api/manage'\nimport { UI_CACHE_DB_DICT_DATA } from \"@/store/mutation-types\"\nimport Vue from 'vue'\n\nexport default {\n  name: \"DictList\",\n  mixins:[JeecgListMixin],\n  components: {DictModal, DictItemList,DictDeleteList},\n  data() {\n    return {\n      description: '这是数据字典页面',\n      visible: false,\n      // 查询条件\n      queryParam: {\n        dictCode: \"\",\n        dictName: \"\",\n      },\n      // 表头\n      columns: [\n        {\n          title: '#',\n          dataIndex: '',\n          key: 'rowIndex',\n          width: 120,\n          align: \"center\",\n          customRender: function (t, r, index) {\n            return parseInt(index) + 1;\n          }\n        },\n        {\n          title: '字典名称',\n          align: \"left\",\n          dataIndex: 'dictName',\n        },\n        {\n          title: '字典编号',\n          align: \"left\",\n          dataIndex: 'dictCode',\n        },\n        {\n          title: '描述',\n          align: \"left\",\n          dataIndex: 'description',\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align: \"center\",\n          scopedSlots: {customRender: 'action'},\n        }\n      ],\n      dict: \"\",\n      labelCol: {\n        xs: {span: 8},\n        sm: {span: 5},\n      },\n      wrapperCol: {\n        xs: {span: 16},\n        sm: {span: 19},\n      },\n      url: {\n        list: \"/sys/dict/list\",\n        delete: \"/sys/dict/delete\",\n        exportXlsUrl: \"sys/dict/exportXls\",\n        importExcelUrl: \"sys/dict/importExcel\",\n        refleshCache: \"sys/dict/refleshCache\",\n        queryAllDictItems: \"sys/dict/queryAllDictItems\",\n      },\n    }\n  },\n  computed: {\n    importExcelUrl: function () {\n      return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\n    }\n  },\n  methods: {\n    getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      if (this.superQueryParams) {\n        param['superQueryParams'] = encodeURI(this.superQueryParams)\n        param['superQueryMatchType'] = this.superQueryMatchType\n      }\n      return filterObj(param);\n    },\n    //取消选择\n    cancelDict() {\n      this.dict = \"\";\n      this.visible = false;\n      this.loadData();\n    },\n    //编辑字典数据\n    editDictItem(record) {\n      this.$refs.dictItemList.edit(record);\n    },\n    // 重置字典类型搜索框的内容\n    searchReset() {\n      var that = this;\n      that.queryParam.dictName = \"\";\n      that.queryParam.dictCode = \"\";\n      that.loadData(this.ipagination.current);\n    },\n    openDeleteList(){\n      this.$refs.dictDeleteList.show()\n    },\n    refleshCache(){\n      getAction(this.url.refleshCache).then((res) => {\n        if (res.success) {\n          //重新加载缓存\n          getAction(this.url.queryAllDictItems).then((res) => {\n            if (res.success) {\n              Vue.ls.remove(UI_CACHE_DB_DICT_DATA)\n              Vue.ls.set(UI_CACHE_DB_DICT_DATA, res.result, 7 * 24 * 60 * 60 * 1000)\n            }\n          })\n          this.$message.success(\"刷新缓存完成！\");\n        }\n      }).catch(e=>{\n        this.$message.warn(\"刷新缓存失败！\");\n        console.log(\"刷新失败\",e)\n      })\n    }\n  },\n  watch: {\n    openKeys(val) {\n      console.log('openKeys', val)\n    },\n  },\n}\n",{"version":3,"sources":["DictList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"DictList.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n  <a-card :bordered=\"false\">\n\n    <!-- 左侧面板 -->\n    <div class=\"table-page-search-wrapper\">\n      <a-form layout=\"inline\" @keyup.enter.native=\"searchQuery\">\n        <a-row :gutter=\"12\">\n          <a-col :md=\"7\" :sm=\"8\">\n            <a-form-item label=\"字典名称\" :labelCol=\"{span: 6}\" :wrapperCol=\"{span: 14, offset: 1}\">\n              <a-input placeholder=\"请输入字典名称\" v-model=\"queryParam.dictName\"></a-input>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"7\" :sm=\"8\">\n            <a-form-item label=\"字典编号\" :labelCol=\"{span: 6}\" :wrapperCol=\"{span: 14, offset: 1}\">\n              <a-input placeholder=\"请输入字典编号\" v-model=\"queryParam.dictCode\"></a-input>\n            </a-form-item>\n          </a-col>\n          <a-col :md=\"7\" :sm=\"8\">\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\n              <a-button type=\"primary\" @click=\"searchQuery\" icon=\"search\">查询</a-button>\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\n            </span>\n          </a-col>\n        </a-row>\n      </a-form>\n\n      <div class=\"table-operator\" style=\"border-top: 5px\">\n        <a-button @click=\"handleAdd\" type=\"primary\" icon=\"plus\">添加</a-button>\n        <a-button type=\"primary\" icon=\"download\" @click=\"handleExportXls('字典信息')\">导出</a-button>\n        <a-upload name=\"file\" :showUploadList=\"false\" :multiple=\"false\" :headers=\"tokenHeader\" :action=\"importExcelUrl\" @change=\"handleImportExcel\">\n          <a-button type=\"primary\" icon=\"import\">导入</a-button>\n        </a-upload>\n        <a-button type=\"primary\" icon=\"sync\" @click=\"refleshCache()\">刷新缓存</a-button>\n\n        <a-button type=\"primary\" icon=\"hdd\" @click=\"openDeleteList\">回收站</a-button>\n      </div>\n\n      <a-table\n        ref=\"table\"\n        rowKey=\"id\"\n        size=\"middle\"\n        :columns=\"columns\"\n        :dataSource=\"dataSource\"\n        :pagination=\"ipagination\"\n        :loading=\"loading\"\n        @change=\"handleTableChange\">\n        <span slot=\"action\" slot-scope=\"text, record\">\n          <a @click=\"handleEdit(record)\">\n            <a-icon type=\"edit\"/>\n            编辑\n          </a>\n          <a-divider type=\"vertical\"/>\n          <a @click=\"editDictItem(record)\"><a-icon type=\"setting\"/> 字典配置</a>\n          <a-divider type=\"vertical\"/>\n          <a-popconfirm title=\"确定删除吗?\" @confirm=\"() =>handleDelete(record.id)\">\n            <a>删除</a>\n          </a-popconfirm>\n        </span>\n      </a-table>\n\n    </div>\n    <dict-modal ref=\"modalForm\" @ok=\"modalFormOk\"></dict-modal>  <!-- 字典类型 -->\n    <dict-item-list ref=\"dictItemList\"></dict-item-list>\n    <dict-delete-list ref=\"dictDeleteList\" @refresh=\"() =>loadData()\"></dict-delete-list>\n  </a-card>\n</template>\n\n<script>\n  import { filterObj } from '@/utils/util';\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\n  import DictModal from './modules/DictModal'\n  import DictItemList from './DictItemList'\n  import DictDeleteList from './DictDeleteList'\n  import { getAction } from '@/api/manage'\n  import { UI_CACHE_DB_DICT_DATA } from \"@/store/mutation-types\"\n  import Vue from 'vue'\n\n  export default {\n    name: \"DictList\",\n    mixins:[JeecgListMixin],\n    components: {DictModal, DictItemList,DictDeleteList},\n    data() {\n      return {\n        description: '这是数据字典页面',\n        visible: false,\n        // 查询条件\n        queryParam: {\n          dictCode: \"\",\n          dictName: \"\",\n        },\n        // 表头\n        columns: [\n          {\n            title: '#',\n            dataIndex: '',\n            key: 'rowIndex',\n            width: 120,\n            align: \"center\",\n            customRender: function (t, r, index) {\n              return parseInt(index) + 1;\n            }\n          },\n          {\n            title: '字典名称',\n            align: \"left\",\n            dataIndex: 'dictName',\n          },\n          {\n            title: '字典编号',\n            align: \"left\",\n            dataIndex: 'dictCode',\n          },\n          {\n            title: '描述',\n            align: \"left\",\n            dataIndex: 'description',\n          },\n          {\n            title: '操作',\n            dataIndex: 'action',\n            align: \"center\",\n            scopedSlots: {customRender: 'action'},\n          }\n        ],\n        dict: \"\",\n        labelCol: {\n          xs: {span: 8},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 16},\n          sm: {span: 19},\n        },\n        url: {\n          list: \"/sys/dict/list\",\n          delete: \"/sys/dict/delete\",\n          exportXlsUrl: \"sys/dict/exportXls\",\n          importExcelUrl: \"sys/dict/importExcel\",\n          refleshCache: \"sys/dict/refleshCache\",\n          queryAllDictItems: \"sys/dict/queryAllDictItems\",\n        },\n      }\n    },\n    computed: {\n      importExcelUrl: function () {\n        return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\n      }\n    },\n    methods: {\n      getQueryParams() {\n        var param = Object.assign({}, this.queryParam, this.isorter);\n        param.field = this.getQueryField();\n        param.pageNo = this.ipagination.current;\n        param.pageSize = this.ipagination.pageSize;\n        if (this.superQueryParams) {\n          param['superQueryParams'] = encodeURI(this.superQueryParams)\n          param['superQueryMatchType'] = this.superQueryMatchType\n        }\n        return filterObj(param);\n      },\n      //取消选择\n      cancelDict() {\n        this.dict = \"\";\n        this.visible = false;\n        this.loadData();\n      },\n      //编辑字典数据\n      editDictItem(record) {\n        this.$refs.dictItemList.edit(record);\n      },\n      // 重置字典类型搜索框的内容\n      searchReset() {\n        var that = this;\n        that.queryParam.dictName = \"\";\n        that.queryParam.dictCode = \"\";\n        that.loadData(this.ipagination.current);\n      },\n      openDeleteList(){\n        this.$refs.dictDeleteList.show()\n      },\n      refleshCache(){\n        getAction(this.url.refleshCache).then((res) => {\n          if (res.success) {\n            //重新加载缓存\n            getAction(this.url.queryAllDictItems).then((res) => {\n              if (res.success) {\n                Vue.ls.remove(UI_CACHE_DB_DICT_DATA)\n                Vue.ls.set(UI_CACHE_DB_DICT_DATA, res.result, 7 * 24 * 60 * 60 * 1000)\n              }\n            })\n            this.$message.success(\"刷新缓存完成！\");\n          }\n        }).catch(e=>{\n          this.$message.warn(\"刷新缓存失败！\");\n          console.log(\"刷新失败\",e)\n        })\n      }\n    },\n    watch: {\n      openKeys(val) {\n        console.log('openKeys', val)\n      },\n    },\n  }\n</script>\n<style scoped>\n  @import '~@assets/less/common.less'\n</style>"]}]}