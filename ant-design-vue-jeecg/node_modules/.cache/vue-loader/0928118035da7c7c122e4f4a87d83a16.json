{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeInputCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\JVxeTable\\components\\cells\\JVxeInputCell.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { JVXETypes } from '@/components/jeecg/JVxeTable'\nimport JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\nconst NumberRegExp = /^-?\\d+\\.?\\d*$/\nexport default {\n  name: 'JVxeInputCell',\n  mixins: [JVxeCellMixins],\n  methods: {\n\n    /** 处理change事件 */\n    handleChange(event) {\n      let {$type} = this\n      let {target} = event\n      let {value, selectionStart} = target\n      let change = true\n      if ($type === JVXETypes.inputNumber) {\n        // 判断输入的值是否匹配数字正则表达式，不匹配就还原\n        if (!NumberRegExp.test(value) && (value !== '' && value !== '-')) {\n          change = false\n          value = this.innerValue\n          target.value = value || ''\n          if (typeof selectionStart === 'number') {\n            target.selectionStart = selectionStart - 1\n            target.selectionEnd = selectionStart - 1\n          }\n        }\n      }\n      // 触发事件，存储输入的值\n      if (change) {\n        this.handleChangeCommon(value)\n      }\n\n      if ($type === JVXETypes.inputNumber) {\n        // this.recalcOneStatisticsColumn(col.key)\n      }\n    },\n\n    /** 处理blur失去焦点事件 */\n    handleBlur(event) {\n      let {$type} = this\n      let {target} = event\n      // 判断输入的值是否匹配数字正则表达式，不匹配就置空\n      if ($type === JVXETypes.inputNumber) {\n        if (!NumberRegExp.test(target.value)) {\n          target.value = ''\n        } else {\n          target.value = Number.parseFloat(target.value)\n        }\n        this.handleChangeCommon(target.value)\n      }\n\n      this.handleBlurCommon(target.value)\n    },\n\n  },\n  // 【组件增强】注释详见：JVxeCellMixins.js\n  enhanced: {\n    installOptions: {\n      // 自动聚焦的 class 类名\n      autofocus: '.ant-input',\n    },\n    getValue(value) {\n      if (this.$type === JVXETypes.inputNumber && typeof value === 'string') {\n        if (NumberRegExp.test(value)) {\n          return Number.parseFloat(value)\n        }\n      }\n      return value\n    },\n  }\n}\n",{"version":3,"sources":["JVxeInputCell.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JVxeInputCell.vue","sourceRoot":"src/components/jeecg/JVxeTable/components/cells","sourcesContent":["<template>\n  <a-input\n    ref=\"input\"\n    :value=\"innerValue\"\n    v-bind=\"cellProps\"\n    @blur=\"handleBlur\"\n    @change=\"handleChange\"\n  />\n</template>\n\n<script>\n  import { JVXETypes } from '@/components/jeecg/JVxeTable'\n  import JVxeCellMixins from '@/components/jeecg/JVxeTable/mixins/JVxeCellMixins'\n\n  const NumberRegExp = /^-?\\d+\\.?\\d*$/\n  export default {\n    name: 'JVxeInputCell',\n    mixins: [JVxeCellMixins],\n    methods: {\n\n      /** 处理change事件 */\n      handleChange(event) {\n        let {$type} = this\n        let {target} = event\n        let {value, selectionStart} = target\n        let change = true\n        if ($type === JVXETypes.inputNumber) {\n          // 判断输入的值是否匹配数字正则表达式，不匹配就还原\n          if (!NumberRegExp.test(value) && (value !== '' && value !== '-')) {\n            change = false\n            value = this.innerValue\n            target.value = value || ''\n            if (typeof selectionStart === 'number') {\n              target.selectionStart = selectionStart - 1\n              target.selectionEnd = selectionStart - 1\n            }\n          }\n        }\n        // 触发事件，存储输入的值\n        if (change) {\n          this.handleChangeCommon(value)\n        }\n\n        if ($type === JVXETypes.inputNumber) {\n          // this.recalcOneStatisticsColumn(col.key)\n        }\n      },\n\n      /** 处理blur失去焦点事件 */\n      handleBlur(event) {\n        let {$type} = this\n        let {target} = event\n        // 判断输入的值是否匹配数字正则表达式，不匹配就置空\n        if ($type === JVXETypes.inputNumber) {\n          if (!NumberRegExp.test(target.value)) {\n            target.value = ''\n          } else {\n            target.value = Number.parseFloat(target.value)\n          }\n          this.handleChangeCommon(target.value)\n        }\n\n        this.handleBlurCommon(target.value)\n      },\n\n    },\n    // 【组件增强】注释详见：JVxeCellMixins.js\n    enhanced: {\n      installOptions: {\n        // 自动聚焦的 class 类名\n        autofocus: '.ant-input',\n      },\n      getValue(value) {\n        if (this.$type === JVXETypes.inputNumber && typeof value === 'string') {\n          if (NumberRegExp.test(value)) {\n            return Number.parseFloat(value)\n          }\n        }\n        return value\n      },\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}