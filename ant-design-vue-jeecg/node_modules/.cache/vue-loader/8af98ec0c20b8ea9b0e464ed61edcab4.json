{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\TenantForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\system\\modules\\TenantForm.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\babel-loader\\lib\\index.js","mtime":1621061377995},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { httpAction, getAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport { validateDuplicateValue } from '@/utils/util'\nimport JFormContainer from '@/components/jeecg/JFormContainer'\nimport JDate from '@/components/jeecg/JDate'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\n\nexport default {\n  name: \"TenantForm\",\n  components: {\n    JFormContainer,\n    JDate,\n    JDictSelectTag,\n  },\n  props: {\n    formData: {\n      type: Object,\n      default: ()=>{},\n      required: false\n    },\n    normal: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  data () {\n    return {\n      form: this.$form.createForm(this),\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      confirmLoading: false,\n      validatorRules: {\n      },\n      url: {\n        add: \"/sys/tenant/add\",\n        edit: \"/sys/tenant/edit\",\n        queryById: \"/sys/tenant/queryById\"\n      }\n    }\n  },\n  computed: {\n    formDisabled(){\n      if(this.normal===false){\n        if(this.formData.disabled===false){\n          return false\n        }else{\n          return true\n        }\n      }\n      return this.disabled\n    },\n    showFlowSubmitButton(){\n      if(this.normal===false){\n        if(this.formData.disabled===false){\n          return true\n        }else{\n          return false\n        }\n      }else{\n        return false\n      }\n    }\n  },\n  created () {\n    this.showFlowData();\n  },\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'id','name','beginDate','endDate','status'))\n      })\n    },\n    showFlowData(){\n      if(this.normal === false){\n        let params = {id:this.formData.dataId};\n        getAction(this.url.queryById,params).then((res)=>{\n          if(res.success){\n            this.edit (res.result);\n          }\n        });\n      }\n    },\n    submitForm () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          console.log(\"表单提交数据\",formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              if(\"该编号已存在!\" == res.message){\n                this.model.id=\"\"\n              }\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n          })\n        }\n\n      })\n    },\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row, 'id', 'name','beginDate','endDate','status'))\n    },\n  }\n}\n",{"version":3,"sources":["TenantForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TenantForm.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\n  <a-spin :spinning=\"confirmLoading\">\n    <j-form-container :disabled=\"formDisabled\">\n      <a-form :form=\"form\" slot=\"detail\">\n        <a-row>\n          <a-col :span=\"24\">\n            <a-form-item label=\"租户名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-input v-decorator=\"['name']\" placeholder=\"请输入租户名称\"></a-input>\n            </a-form-item>\n          </a-col>\n\n          <a-col :span=\"24\">\n            <a-form-item label=\"租户编号\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-input-number style=\"width: 100%\" :min=\"1\" v-decorator=\"['id',{rules: [{ required: true, message: '请输入租户编号'}]}]\" placeholder=\"请输入租户编号\"></a-input-number>\n            </a-form-item>\n          </a-col>\n\n          <a-col :span=\"24\">\n            <a-form-item label=\"开始时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <j-date placeholder=\"请选择开始时间\" v-decorator=\"['beginDate']\" :trigger-change=\"true\" :show-time=\"true\" date-format=\"YYYY-MM-DD HH:mm:ss\" style=\"width: 100%\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"24\">\n            <a-form-item label=\"结束时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <j-date placeholder=\"请选择结束时间\" v-decorator=\"['endDate']\" :trigger-change=\"true\" :show-time=\"true\" date-format=\"YYYY-MM-DD HH:mm:ss\" style=\"width: 100%\"/>\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"24\">\n            <a-form-item label=\"状态\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\n              <a-radio-group name=\"tenantStatus\" v-decorator=\"[ 'status', {initialValue:1}]\">\n                <a-radio :value=\"1\">正常</a-radio>\n                <a-radio :value=\"0\">冻结</a-radio>\n              </a-radio-group>\n            </a-form-item>\n          </a-col>\n          <a-col v-if=\"showFlowSubmitButton\" :span=\"24\" style=\"text-align: center\">\n            <a-button @click=\"submitForm\">提 交</a-button>\n          </a-col>\n        </a-row>\n      </a-form>\n    </j-form-container>\n  </a-spin>\n</template>\n\n<script>\n\n  import { httpAction, getAction } from '@/api/manage'\n  import pick from 'lodash.pick'\n  import { validateDuplicateValue } from '@/utils/util'\n  import JFormContainer from '@/components/jeecg/JFormContainer'\n  import JDate from '@/components/jeecg/JDate'\n  import JDictSelectTag from \"@/components/dict/JDictSelectTag\"\n\n  export default {\n    name: \"TenantForm\",\n    components: {\n      JFormContainer,\n      JDate,\n      JDictSelectTag,\n    },\n    props: {\n      formData: {\n        type: Object,\n        default: ()=>{},\n        required: false\n      },\n      normal: {\n        type: Boolean,\n        default: false,\n        required: false\n      },\n      disabled: {\n        type: Boolean,\n        default: false,\n        required: false\n      }\n    },\n    data () {\n      return {\n        form: this.$form.createForm(this),\n        model: {},\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 5 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n        confirmLoading: false,\n        validatorRules: {\n        },\n        url: {\n          add: \"/sys/tenant/add\",\n          edit: \"/sys/tenant/edit\",\n          queryById: \"/sys/tenant/queryById\"\n        }\n      }\n    },\n    computed: {\n      formDisabled(){\n        if(this.normal===false){\n          if(this.formData.disabled===false){\n            return false\n          }else{\n            return true\n          }\n        }\n        return this.disabled\n      },\n      showFlowSubmitButton(){\n        if(this.normal===false){\n          if(this.formData.disabled===false){\n            return true\n          }else{\n            return false\n          }\n        }else{\n          return false\n        }\n      }\n    },\n    created () {\n      this.showFlowData();\n    },\n    methods: {\n      add () {\n        this.edit({});\n      },\n      edit (record) {\n        this.form.resetFields();\n        this.model = Object.assign({}, record);\n        this.visible = true;\n        this.$nextTick(() => {\n          this.form.setFieldsValue(pick(this.model,'id','name','beginDate','endDate','status'))\n        })\n      },\n      showFlowData(){\n        if(this.normal === false){\n          let params = {id:this.formData.dataId};\n          getAction(this.url.queryById,params).then((res)=>{\n            if(res.success){\n              this.edit (res.result);\n            }\n          });\n        }\n      },\n      submitForm () {\n        const that = this;\n        // 触发表单验证\n        this.form.validateFields((err, values) => {\n          if (!err) {\n            that.confirmLoading = true;\n            let httpurl = '';\n            let method = '';\n            if(!this.model.id){\n              httpurl+=this.url.add;\n              method = 'post';\n            }else{\n              httpurl+=this.url.edit;\n               method = 'put';\n            }\n            let formData = Object.assign(this.model, values);\n            console.log(\"表单提交数据\",formData)\n            httpAction(httpurl,formData,method).then((res)=>{\n              if(res.success){\n                that.$message.success(res.message);\n                that.$emit('ok');\n              }else{\n                if(\"该编号已存在!\" == res.message){\n                  this.model.id=\"\"\n                }\n                that.$message.warning(res.message);\n              }\n            }).finally(() => {\n              that.confirmLoading = false;\n            })\n          }\n\n        })\n      },\n      popupCallback(row){\n        this.form.setFieldsValue(pick(row, 'id', 'name','beginDate','endDate','status'))\n      },\n    }\n  }\n</script>\n"]}]}