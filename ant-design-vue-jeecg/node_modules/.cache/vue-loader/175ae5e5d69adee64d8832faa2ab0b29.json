{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\dynamic\\JMdEditorDyn.vue?vue&type=style&index=0&id=ad609ba8&scoped=true&lang=less&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\components\\jeecg\\dynamic\\JMdEditorDyn.vue","mtime":1611914356000},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1620887942039},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1621061372054},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1617935823297},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\less-loader\\dist\\cjs.js","mtime":1621061389135},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.j-markdown-editor {\n  /deep/ .tui-editor-defaultUI {\n    .te-mode-switch,\n    .tui-scrollsync\n    {\n      line-height: 1.5;\n    }\n  }\n}\n\n",{"version":3,"sources":["JMdEditorDyn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JMdEditorDyn.vue","sourceRoot":"src/components/jeecg/dynamic","sourcesContent":["<template>\n  <div class=\"j-markdown-editor\" :id=\"dynamicId\"/>\n</template>\n\n<script>\n  import load from './load'\n  import { md_js, md_zh_cn_js } from './Resource'\n  import defaultOptions from '@/components/jeecg/JMarkdownEditor/default-options.js'\n\n  export default {\n    name: 'JMdEditorDyn',\n    props: {\n      value: {\n        type: String,\n        default: ''\n      },\n      id: {\n        type: String,\n        required: false,\n        default() {\n          return 'markdown-editor-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '')\n        }\n      },\n      options: {\n        type: Object,\n        default() {\n          return defaultOptions\n        }\n      },\n      mode: {\n        type: String,\n        default: 'markdown'\n      },\n      height: {\n        type: String,\n        required: false,\n        default: '300px'\n      },\n      language: {\n        type: String,\n        required: false,\n        default: 'zh-CN'\n      }\n    },\n    data() {\n      return {\n        editor: null,\n        dynamicId: this.id\n      }\n    },\n    computed: {\n      editorOptions() {\n        const options = Object.assign({}, defaultOptions, this.options)\n        options.initialEditType = this.mode\n        options.height = this.height\n        options.language = this.language\n        return options\n      }\n    },\n    watch: {\n      value(newValue, preValue) {\n        if (newValue !== preValue && newValue !== this.editor.getMarkdown()) {\n          this.editor.setMarkdown(newValue)\n        }\n      },\n      language(val) {\n        this.destroyEditor()\n        this.initEditor()\n      },\n      height(newValue) {\n        this.editor.height(newValue)\n      },\n      mode(newValue) {\n        this.editor.changeMode(newValue)\n      }\n    },\n    mounted() {\n      this.init()\n    },\n    destroyed() {\n      this.destroyEditor()\n    },\n    methods: {\n      init(){\n\n        this.initEditor()\n       /* load(md_js,'',()=>{\n          load(md_zh_cn_js,'',()=>{\n\n          })\n        })*/\n      },\n      initEditor() {\n        const Editor = toastui.Editor\n        this.editor = new Editor({\n          el: document.getElementById(this.dynamicId),\n          ...this.editorOptions\n        })\n        if (this.value) {\n          this.editor.setMarkdown(this.value)\n        }\n        this.editor.on('change', () => {\n          this.$emit('change', this.editor.getMarkdown())\n        })\n      },\n      destroyEditor() {\n        if (!this.editor) return\n        this.editor.off('change')\n        this.editor.remove()\n      },\n      setMarkdown(value) {\n        this.editor.setMarkdown(value)\n      },\n      getMarkdown() {\n        return this.editor.getMarkdown()\n      },\n      setHtml(value) {\n        this.editor.setHtml(value)\n      },\n      getHtml() {\n        return this.editor.getHtml()\n      }\n    },\n    model: {\n      prop: 'value',\n      event: 'change'\n    }\n  }\n</script>\n<style scoped lang=\"less\">\n\n  .j-markdown-editor {\n    /deep/ .tui-editor-defaultUI {\n      .te-mode-switch,\n      .tui-scrollsync\n      {\n        line-height: 1.5;\n      }\n    }\n  }\n\n</style>"]}]}