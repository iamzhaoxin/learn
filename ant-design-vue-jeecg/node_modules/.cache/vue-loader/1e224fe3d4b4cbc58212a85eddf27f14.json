{"remainingRequest":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\Login.vue?vue&type=style&index=0&id=1ecd471f&lang=less&scoped=true&","dependencies":[{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\src\\views\\user\\Login.vue","mtime":1621925065804},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\css-loader\\index.js","mtime":1620887942039},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1621061372054},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\postcss-loader\\src\\index.js","mtime":1617935823297},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\less-loader\\dist\\cjs.js","mtime":1621061389135},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1621061384845},{"path":"D:\\activiti\\project01\\jeecg-boot-activiti-master\\ant-design-vue-jeecg\\node_modules\\vue-loader\\lib\\index.js","mtime":1621061372054}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n\n  .forge-password {\n    font-size: 14px;\n  }\n\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0,0,0,.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color .3s;\n\n      &:hover {\n        color: #4F62D0;\n      }\n    }\n\n    .register {\n      float: right;\n    }\n  }\n}\n\n",{"version":3,"sources":["Login.vue"],"names":[],"mappingsfile":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <a-form :form=\"form\" class=\"user-layout-login\" ref=\"formLogin\" id=\"formLogin\">\r\n      <a-tabs\r\n        :activeKey=\"customActiveKey\"\r\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\r\n        @change=\"handleTabClick\">\r\n        <a-tab-pane key=\"tab1\" tab=\"账号密码登录\">\r\n          <a-form-item>\r\n            <a-input\r\n              size=\"large\"\r\n              v-decorator=\"['username',validatorRules.username,{ validator: this.handleUsernameOrEmail }]\"\r\n              type=\"text\"\r\n              placeholder=\"请输入帐户名\">\r\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['password',validatorRules.password]\"\r\n              size=\"large\"\r\n              type=\"password\"\r\n              autocomplete=\"false\"\r\n              placeholder=\"密码\">\r\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"0\">\r\n            <a-col :span=\"16\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['inputCode',validatorRules.inputCode]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  @change=\"inputCodeChange\"\r\n                  placeholder=\"请输入验证码\">\r\n                  <a-icon slot=\"prefix\" type=\"smile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col :span=\"8\" style=\"text-align: right\">\r\n              <img v-if=\"requestCodeSuccess\" style=\"margin-top: 2px;\" :src=\"randCodeImage\" @click=\"handleChangeCheckCode\"/>\r\n              <img v-else style=\"margin-top: 2px;\" src=\"../../assets/checkcode.png\" @click=\"handleChangeCheckCode\"/>\r\n            </a-col>\r\n          </a-row>\r\n\r\n\r\n        </a-tab-pane>\r\n        <a-tab-pane key=\"tab2\" tab=\"手机号登录\">\r\n          <a-form-item>\r\n            <a-input\r\n              v-decorator=\"['mobile',validatorRules.mobile]\"\r\n              size=\"large\"\r\n              type=\"text\"\r\n              placeholder=\"手机号\">\r\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n            </a-input>\r\n          </a-form-item>\r\n\r\n          <a-row :gutter=\"16\">\r\n            <a-col class=\"gutter-row\" :span=\"16\">\r\n              <a-form-item>\r\n                <a-input\r\n                  v-decorator=\"['captcha',validatorRules.captcha]\"\r\n                  size=\"large\"\r\n                  type=\"text\"\r\n                  placeholder=\"请输入验证码\">\r\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n                </a-input>\r\n              </a-form-item>\r\n            </a-col>\r\n            <a-col class=\"gutter-row\" :span=\"8\">\r\n              <a-button\r\n                class=\"getCaptcha\"\r\n                tabindex=\"-1\"\r\n                :disabled=\"state.smsSendBtn\"\r\n                @click.stop.prevent=\"getCaptcha\"\r\n                v-text=\"!state.smsSendBtn && '获取验证码' || (state.time+' s')\"></a-button>\r\n            </a-col>\r\n          </a-row>\r\n        </a-tab-pane>\r\n      </a-tabs>\r\n\r\n      <a-form-item>\r\n        <a-checkbox v-decorator=\"['rememberMe', {initialValue: true, valuePropName: 'checked'}]\" >自动登录</a-checkbox>\r\n        <router-link :to=\"{ name: 'alteration'}\" class=\"forge-password\" style=\"float: right;\">\r\n          忘记密码\r\n        </router-link>\r\n       <router-link :to=\"{ name: 'register'}\" class=\"forge-password\" style=\"float: right;margin-right: 10px\" >\r\n          注册账户\r\n        </router-link>\r\n      </a-form-item>\r\n\r\n      <a-form-item style=\"margin-top:24px\">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"login-button\"\r\n          :loading=\"loginBtn\"\r\n          @click.stop.prevent=\"handleSubmit\"\r\n          :disabled=\"loginBtn\">确定\r\n        </a-button>\r\n      </a-form-item>\r\n    </a-form>\r\n\r\n    <two-step-captcha\r\n      v-if=\"requiredTwoStepCaptcha\"\r\n      :visible=\"stepCaptchaVisible\"\r\n      @success=\"stepCaptchaSuccess\"\r\n      @cancel=\"stepCaptchaCancel\"></two-step-captcha>\r\n    <login-select-tenant ref=\"loginSelect\" @success=\"loginSelectOk\"></login-select-tenant>\r\n    <third-login ref=\"thirdLogin\"></third-login>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  //import md5 from \"md5\"\r\n  import api from '@/api'\r\n  import TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\n  import { mapActions } from \"vuex\"\r\n  import { timeFix } from \"@/utils/util\"\r\n  import Vue from 'vue'\r\n  import { ACCESS_TOKEN ,ENCRYPTED_STRING} from \"@/store/mutation-types\"\r\n  import { putAction,postAction,getAction } from '@/api/manage'\r\n  import { encryption , getEncryptedString } from '@/utils/encryption/aesEncrypt'\r\n  import store from '@/store/'\r\n  import { USER_INFO } from \"@/store/mutation-types\"\r\n  import ThirdLogin from './third/ThirdLogin'\r\n  import LoginSelectTenant from \"./LoginSelectTenant\";\r\n  export default {\r\n    components: {\r\n      LoginSelectTenant,\r\n      TwoStepCaptcha,\r\n      ThirdLogin\r\n    },\r\n    data () {\r\n      return {\r\n        customActiveKey: \"tab1\",\r\n        loginBtn: false,\r\n        // login type: 0 email, 1 username, 2 telephone\r\n        loginType: 0,\r\n        requiredTwoStepCaptcha: false,\r\n        stepCaptchaVisible: false,\r\n        form: this.$form.createForm(this),\r\n        encryptedString:{\r\n          key:\"\",\r\n          iv:\"\",\r\n        },\r\n        state: {\r\n          time: 60,\r\n          smsSendBtn: false,\r\n        },\r\n        validatorRules:{\r\n          username:{rules: [{ required: true, message: '请输入用户名!'},{validator: this.handleUsernameOrEmail}]},\r\n          password:{rules: [{ required: true, message: '请输入密码!',validator: 'click'}]},\r\n          mobile:{rules: [{validator:this.validateMobile}]},\r\n          captcha:{rule: [{ required: true, message: '请输入验证码!'}]},\r\n          inputCode:{rules: [{ required: true, message: '请输入验证码!'}]}\r\n        },\r\n        verifiedCode:\"\",\r\n        inputCodeContent:\"\",\r\n        inputCodeNull:true,\r\n        currentUsername:\"\",\r\n        currdatetime:'',\r\n        randCodeImage:'',\r\n        requestCodeSuccess:false,\r\n      }\r\n    },\r\n    created () {\r\n      this.currdatetime = new Date().getTime();\r\n      Vue.ls.remove(ACCESS_TOKEN)\r\n      this.getRouterData();\r\n      this.handleChangeCheckCode();\r\n      // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n      //this.getEncrypte();\r\n      // update-end- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n    },\r\n    methods: {\r\n      ...mapActions(['Login', 'Logout', 'PhoneLogin']),\r\n      // handler\r\n      handleUsernameOrEmail (rule, value, callback) {\r\n        const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\r\n        if (regex.test(value)) {\r\n          this.loginType = 0\r\n        } else {\r\n          this.loginType = 1\r\n        }\r\n        callback()\r\n      },\r\n      handleTabClick (key) {\r\n        this.customActiveKey = key\r\n        // this.form.resetFields()\r\n      },\r\n      handleSubmit () {\r\n        let that = this\r\n        let loginParams = {};\r\n        that.loginBtn = true;\r\n        // 使用账户密码登录\r\n        if (that.customActiveKey === 'tab1') {\r\n          that.form.validateFields([ 'username', 'password','inputCode', 'rememberMe' ], { force: true }, (err, values) => {\r\n            if (!err) {\r\n              loginParams.username = values.username\r\n              // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n              //loginParams.password = md5(values.password)\r\n              //loginParams.password = encryption(values.password,that.encryptedString.key,that.encryptedString.iv)\r\n              loginParams.password = values.password\r\n              loginParams.remember_me = values.rememberMe\r\n              // update-begin- --- author:scott ------ date:20190805 ---- for:密码加密逻辑暂时注释掉，有点问题\r\n              loginParams.captcha = that.inputCodeContent\r\n              loginParams.checkKey = that.currdatetime\r\n              console.log(\"登录参数\",loginParams)\r\n              that.Login(loginParams).then((res) => {\r\n                this.$refs.loginSelect.show(res.result)\r\n              }).catch((err) => {\r\n                that.requestFailed(err);\r\n              });\r\n\r\n\r\n            }else {\r\n              that.loginBtn = false;\r\n            }\r\n          })\r\n          // 使用手机号登录\r\n        } else {\r\n          that.form.validateFields([ 'mobile', 'captcha', 'rememberMe' ], { force: true }, (err, values) => {\r\n            if (!err) {\r\n              loginParams.mobile = values.mobile\r\n              loginParams.captcha = values.captcha\r\n              loginParams.remember_me = values.rememberMe\r\n              that.PhoneLogin(loginParams).then((res) => {\r\n                console.log(res.result);\r\n                this.$refs.loginSelect.show(res.result)\r\n              }).catch((err) => {\r\n                that.requestFailed(err);\r\n              })\r\n\r\n            }\r\n          })\r\n        }\r\n      },\r\n      getCaptcha (e) {\r\n        e.preventDefault();\r\n        let that = this;\r\n        this.form.validateFields([ 'mobile' ], { force: true },(err,values) => {\r\n            if(!values.mobile){\r\n              that.cmsFailed(\"请输入手机号\");\r\n            }else if (!err) {\r\n              this.state.smsSendBtn = true;\r\n              let interval = window.setInterval(() => {\r\n                if (that.state.time-- <= 0) {\r\n                  that.state.time = 60;\r\n                  that.state.smsSendBtn = false;\r\n                  window.clearInterval(interval);\r\n                }\r\n              }, 1000);\r\n\r\n              const hide = this.$message.loading('验证码发送中..', 0);\r\n              let smsParams = {};\r\n                  smsParams.mobile=values.mobile;\r\n                  smsParams.smsmode=\"0\";\r\n              postAction(\"/sys/sms\",smsParams)\r\n                .then(res => {\r\n                  if(!res.success){\r\n                    setTimeout(hide, 0);\r\n                    this.cmsFailed(res.message);\r\n                  }\r\n                  console.log(res);\r\n                  setTimeout(hide, 500);\r\n                })\r\n                .catch(err => {\r\n                  setTimeout(hide, 1);\r\n                  clearInterval(interval);\r\n                  that.state.time = 60;\r\n                  that.state.smsSendBtn = false;\r\n                  this.requestFailed(err);\r\n                });\r\n            }\r\n          }\r\n        );\r\n      },\r\n      stepCaptchaSuccess () {\r\n        this.loginSuccess()\r\n      },\r\n      stepCaptchaCancel () {\r\n        this.Logout().then(() => {\r\n          this.loginBtn = false\r\n          this.stepCaptchaVisible = false\r\n        })\r\n      },\r\n      handleChangeCheckCode(){\r\n        this.currdatetime = new Date().getTime();\r\n        getAction(`/sys/randomImage/${this.currdatetime}`).then(res=>{\r\n          if(res.success){\r\n            this.randCodeImage = res.result\r\n            this.requestCodeSuccess=true\r\n          }else{\r\n            this.$message.error(res.message)\r\n            this.requestCodeSuccess=false\r\n          }\r\n        }).catch(()=>{\r\n          this.requestCodeSuccess=false\r\n        })\r\n      },\r\n      loginSuccess () {\r\n        this.$router.push({ path: \"/dashboard/analysis\" }).catch(()=>{\r\n          console.log('登录跳转首页出错,这个错误从哪里来的')\r\n        })\r\n        this.$notification.success({\r\n          message: '欢迎',\r\n          description: `${timeFix()}，欢迎回来`,\r\n        });\r\n      },\r\n      cmsFailed(err){\r\n        this.$notification[ 'error' ]({\r\n          message: \"登录失败\",\r\n          description:err,\r\n          duration: 4,\r\n        });\r\n      },\r\n      requestFailed (err) {\r\n        this.$notification[ 'error' ]({\r\n          message: '登录失败',\r\n          description: ((err.response || {}).data || {}).message || err.message || \"请求出现错误，请稍后再试\",\r\n          duration: 4,\r\n        });\r\n        this.loginBtn = false;\r\n      },\r\n      validateMobile(rule,value,callback){\r\n        if (!value || new RegExp(/^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/).test(value)){\r\n          callback();\r\n        }else{\r\n          callback(\"您的手机号码格式不正确!\");\r\n        }\r\n\r\n      },\r\n      validateInputCode(rule,value,callback){\r\n        if(!value || this.verifiedCode==this.inputCodeContent){\r\n          callback();\r\n        }else{\r\n          callback(\"您输入的验证码不正确!\");\r\n        }\r\n      },\r\n      generateCode(value){\r\n        this.verifiedCode = value.toLowerCase()\r\n      },\r\n      inputCodeChange(e){\r\n        this.inputCodeContent = e.target.value\r\n      },\r\n      loginSelectOk(){\r\n        this.loginSuccess()\r\n      },\r\n    getRouterData(){\r\n      this.$nextTick(() => {\r\n        if (this.$route.params.username) {\r\n          this.form.setFieldsValue({\r\n            'username': this.$route.params.username\r\n          });\r\n        }\r\n      })\r\n    },\r\n    //获取密码加密规则\r\n    getEncrypte(){\r\n      var encryptedString = Vue.ls.get(ENCRYPTED_STRING);\r\n      if(encryptedString == null){\r\n        getEncryptedString().then((data) => {\r\n          this.encryptedString = data\r\n        });\r\n      }else{\r\n        this.encryptedString = encryptedString;\r\n      }\r\n    },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n  .user-layout-login {\r\n    label {\r\n      font-size: 14px;\r\n    }\r\n\r\n    .getCaptcha {\r\n      display: block;\r\n      width: 100%;\r\n      height: 40px;\r\n    }\r\n\r\n    .forge-password {\r\n      font-size: 14px;\r\n    }\r\n\r\n    button.login-button {\r\n      padding: 0 15px;\r\n      font-size: 16px;\r\n      height: 40px;\r\n      width: 100%;\r\n    }\r\n\r\n    .user-login-other {\r\n      text-align: left;\r\n      margin-top: 24px;\r\n      line-height: 22px;\r\n\r\n      .item-icon {\r\n        font-size: 24px;\r\n        color: rgba(0,0,0,.2);\r\n        margin-left: 16px;\r\n        vertical-align: middle;\r\n        cursor: pointer;\r\n        transition: color .3s;\r\n\r\n        &:hover {\r\n          color: #4F62D0;\r\n        }\r\n      }\r\n\r\n      .register {\r\n        float: right;\r\n      }\r\n    }\r\n  }\r\n\r\n</style>\r\n<style>\r\n  .valid-error .ant-select-selection__placeholder{\r\n    color: #f5222d;\r\n  }\r\n</style>"]}]}