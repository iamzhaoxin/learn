<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="controller"/>

    <!--
        notice 配置文件上传解析器
            - 使SpringMVC接收multipart/form-data数据(需要有commons-fileupload和commons-io)
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--上传文件的编码类型-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--上传文件总大小-->
        <!--        <property name="maxUploadSize" value="5242800"/>-->
        <!--上传文件单个大小-->
        <!--        <property name="maxUploadSizePerFile" value="5000"/>-->
    </bean>

    <!--
        notice mvc的注解驱动
            - 作用是自动注册RequestMappingHandlerMapping和RequestMappingHandlerAdapter这两个bean，也就是无需再手动配置处理映射器和处理适配器
            - 可以自动将return的对象转换为JSON发送到前端
            - conversion-service:配置转换器
    -->
    <mvc:annotation-driven conversion-service="conversionService">
        <!--配置处理器映射器 是?-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <bean class="org.springframework.web.filter.CharacterEncodingFilter">
        <constructor-arg value="UTF-8"/>
    </bean>

    <!--
        notice 这两种方法,都需要提前添加<mvc:annotation-driven/>,否则会导致Controller类下的RequestMapping下的方法失效
    -->
    <!--方法一: 开放资源的访问-->
    <!--    <mvc:resources mapping="/js/**" location="/js/"/>-->
    <!--方法二: 找不到就交给原始路由器-->
    <mvc:default-servlet-handler/>

    <!-- 声明转换器-->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="converter.DateConverter"/>
            </list>
        </property>
    </bean>


</beans>